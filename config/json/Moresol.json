{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "incAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PledgeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pledgeAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "profitAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "SetPledgeCfg",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newIncome",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldIncome",
          "type": "address"
        }
      ],
      "name": "UpdateIncome",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pledgeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pledgeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "profitToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profitAmount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawPledge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "profitToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawProfit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OWNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PLEDGE_RATE_DECIMAILS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getLatestPledge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPayToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPledge",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pledgeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            },
            {
              "internalType": "enum Store.PledgeState",
              "name": "state",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "earnToken",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "earnRelease",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "earnRemain",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.Pledge",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPledgeCfg",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "pledgeToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "payToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "profitToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.PledgeReturn",
              "name": "pledgeReturn",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "internalType": "struct Store.PledgeCfg",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPledgeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPledgeReturn",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Store.ProfitType",
              "name": "profitType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isDayRelease",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.PledgeReturn",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPledgeToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getProfitToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "mintPledge",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "pledgeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "pledgeToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "payToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "profitToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum Store.ProfitType",
              "name": "profitType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isDayRelease",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.PledgeReturn",
          "name": "pledgeReturn",
          "type": "tuple"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "setPledgeCfg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "income",
          "type": "address"
        }
      ],
      "name": "updateIncome",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "plgToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawPledge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pledgeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620042273803806200422783398101604081905262000034916200027d565b6200003f336200012c565b6200007a7fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e72600080516020620042078339815191526200017e565b620000a4600080516020620041e7833981519152600080516020620042078339815191526200017e565b620000d07fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7233620001c9565b620000eb6000805160206200420783398151915233620001c9565b62000106600080516020620041e783398151915233620001c9565b600480546001600160a01b0319166001600160a01b0392909216919091179055620002af565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082815260036020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620001d58282620001d9565b5050565b60008281526003602090815260408083206001600160a01b038516845290915290205460ff16620001d55760008281526003602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620002393390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000602082840312156200029057600080fd5b81516001600160a01b0381168114620002a857600080fd5b9392505050565b613f2880620002bf6000396000f3fe6080604052600436106101ee5760003560e01c80638703ba2b1161010d578063bb7fde71116100a0578063e58378bb1161006f578063e58378bb1461066e578063f23a6e61146106a2578063f2fde38b146106ce578063f7c24aa3146106ee578063f9dfa79f1461070e57600080fd5b8063bb7fde71146105fa578063bc197c811461060e578063d35c9a071461062e578063d547741f1461064e57600080fd5b80639785207e116100dc5780639785207e1461056b578063a217fddf1461058b578063a68aede0146105a0578063ac346a1f146105cd57600080fd5b80638703ba2b146104d65780638da5cb5b1461050357806391d148541461052b57806396c817e71461054b57600080fd5b806334771e62116101855780636394f6e6116101545780636394f6e61461040c5780636c83fc341461044057806370dcbfc614610460578063715018a6146104c157600080fd5b806334771e621461038257806336568abe14610398578063444bbb54146103b857806359f1da6c146103ec57600080fd5b8063248a9ca3116101c1578063248a9ca3146102bb57806326cbd26b146102f957806327a99cb11461030c5780632f2ff15d1461036257600080fd5b806301ffc9a7146101f3578063150b7a021461022857806316762eed1461026c57806322eb79311461028e575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046132eb565b61072e565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b506102536102433660046133e8565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161021f565b34801561027857600080fd5b5061028c610287366004613450565b610765565b005b34801561029a57600080fd5b506102ae6102a93660046134aa565b6109b3565b60405161021f919061352f565b3480156102c757600080fd5b506102eb6102d636600461353d565b60009081526003602052604090206001015490565b60405190815260200161021f565b61028c610307366004613556565b6109d0565b34801561031857600080fd5b5061032c6103273660046135c8565b610b76565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a00161021f565b34801561036e57600080fd5b5061028c61037d366004613604565b610ca3565b34801561038e57600080fd5b506102eb61271081565b3480156103a457600080fd5b5061028c6103b3366004613604565b610ccd565b3480156103c457600080fd5b506102eb7f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e81565b3480156103f857600080fd5b5061028c610407366004613627565b610d4b565b34801561041857600080fd5b506102eb7fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7281565b34801561044c57600080fd5b506102ae61045b3660046134aa565b610f42565b34801561046c57600080fd5b5061048061047b3660046135c8565b610f5c565b60408051968752602087019590955263ffffffff909316938501939093526001600160a01b03166060840152608083019190915260a082015260c00161021f565b3480156104cd57600080fd5b5061028c6110bd565b3480156104e257600080fd5b506104f66104f13660046134aa565b6110d1565b60405161021f9190613696565b34801561050f57600080fd5b506002546040516001600160a01b03909116815260200161021f565b34801561053757600080fd5b50610213610546366004613604565b611103565b34801561055757600080fd5b5061028c6105663660046136bc565b61112e565b34801561057757600080fd5b506102ae6105863660046134aa565b611655565b34801561059757600080fd5b506102eb600081565b3480156105ac57600080fd5b506105c06105bb3660046135c8565b611672565b60405161021f9190613729565b3480156105d957600080fd5b506105ed6105e83660046134aa565b6117a1565b60405161021f9190613793565b61028c6106083660046137f9565b50505050565b34801561061a57600080fd5b506102536106293660046138c2565b6117b3565b34801561063a57600080fd5b5061028c61064936600461396c565b6117c5565b34801561065a57600080fd5b5061028c610669366004613604565b6118c8565b34801561067a57600080fd5b506102eb7fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e81565b3480156106ae57600080fd5b506102536106bd366004613996565b63f23a6e6160e01b95945050505050565b3480156106da57600080fd5b5061028c6106e93660046139fb565b6118ed565b3480156106fa57600080fd5b5061028c6107093660046139fb565b611966565b34801561071a57600080fd5b5061028c61072936600461396c565b611a06565b60006001600160e01b03198216637965db0b60e01b148061075f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61076d611ce9565b6001600160a01b0381166107b75760405162461bcd60e51b815260206004820152600c60248201526b32b939103932b1b2b4bb32b960a11b60448201526064015b60405180910390fd5b6001600160a01b038416610801576040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156107fb573d6000803e3d6000fd5b50610962565b8260000361087c5760405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af1158015610858573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190613a24565b81156108f95760408051602081018252600081529051637921219560e11b81526001600160a01b0386169163f242432a916108c291309186918991899190600401613a91565b600060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b50505050610962565b6040516323b872dd60e01b81523060048201526001600160a01b038281166024830152604482018590528516906323b872dd90606401600060405180830381600087803b15801561094957600080fd5b505af115801561095d573d6000803e3d6000fd5b505050505b60408051338152602081018590526001600160a01b03808416928592918816917ffb80d861da582b723be2d19507ce3e03851820c464abea89156ec77e089b1ad9910160405180910390a450505050565b6109bb613226565b6109c58383611d43565b602001519392505050565b848460006109df338484611f3e565b3360009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff1690811115610a4c57610a4c6134dd565b6002811115610a5d57610a5d6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115610aac57610aac6134dd565b6004811115610abd57610abd6134dd565b8152600391909101546020918201529082526007830154908201526008909101546040909101529050600081606001516002811115610afe57610afe6134dd565b14610b445760405162461bcd60e51b8152602060048201526016602482015275283632b233b4b7339037b910283632b233b2b217171760511b60448201526064016107ae565b610b5289898989308a611f82565b63ffffffff851615610b6b57610b6b338a8a8a8961212d565b505050505050505050565b600080600080600080610b8a89898961237b565b6040805160e081018252825481526001830154602082015260028084015463ffffffff8116938301939093529092916060840191600160201b90910460ff1690811115610bd957610bd96134dd565b6002811115610bea57610bea6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115610c3957610c396134dd565b6004811115610c4a57610c4a6134dd565b81526003919091015460209182015290825260078301549082015260089091015460409182015281519082015160808301515160a084015160c090940151929d63ffffffff9092169c509a509198509650945050505050565b600082815260036020526040902060010154610cbe816125ed565b610cc883836125f7565b505050565b6001600160a01b0381163314610d3d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016107ae565b610d47828261267d565b5050565b808063ffffffff1660071480610d6757508063ffffffff16601e145b80610d7857508063ffffffff16605a145b80610d8957508063ffffffff1660b4145b610dce5760405162461bcd60e51b815260206004820152601660248201527504d75737420626520372c33302c36302c39302c3138360541b60448201526064016107ae565b84846000610ddd338484611f3e565b3360009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff1690811115610e4a57610e4a6134dd565b6002811115610e5b57610e5b6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115610eaa57610eaa6134dd565b6004811115610ebb57610ebb6134dd565b8152600391909101546020918201529082526007830154908201526008909101546040909101529050600081606001516002811115610efc57610efc6134dd565b14610b6b5760405162461bcd60e51b8152602060048201526016602482015275283632b233b4b7339037b910283632b233b2b217171760511b60448201526064016107ae565b610f4a613226565b610f548383611d43565b519392505050565b6000806000806000806000610f728a8a8a6126e4565b6001600160a01b038b1660009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff1690811115610fe857610fe86134dd565b6002811115610ff957610ff96134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115611048576110486134dd565b6004811115611059576110596134dd565b815260200160038201548152505081526020016007820154815260200160088201548152505090508060000151816020015182604001518360800151600001518460a001518560c00151975097509750975097509750505093975093979195509350565b6110c5611ce9565b6110cf60006126f1565b565b60408051606081018252600080825260208201819052918101919091526110f88383611d43565b606001519392505050565b60009182526003602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6111587f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e33611103565b6111945760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9036b0b730b3b2b93f60991b60448201526064016107ae565b60006111d26111a660208801886139fb565b836040516020016111b8929190613acb565b604051602081830303815290604052805160209091012090565b6000818152602081905260409020549091506001600160a01b0316156112255760405162461bcd60e51b8152602060048201526008602482015267657869737465642160c01b60448201526064016107ae565b60026112376060880160408901613b09565b6004811115611248576112486134dd565b1480611274575060036112616060880160408901613b09565b6004811115611272576112726134dd565b145b156112f25760006112886020850185613b33565b6002811115611299576112996134dd565b036112f25760405162461bcd60e51b8152602060048201526024808201527f4e465420706c65646765206d75737420757365205061795072696365506572206044820152637479706560e01b60648201526084016107ae565b60026113016020850185613b33565b6002811115611312576113126134dd565b036113a65761132460208501856139fb565b6001600160a01b031661133a60208701876139fb565b6001600160a01b0316146113a65760405162461bcd60e51b815260206004820152602d60248201527f50726f666974547970652e50617950726963655065723d3e706179546f6b656e60448201526c1e9eb83937b334ba2a37b5b2b760991b60648201526084016107ae565b6040518060a00160405280878036038101906113c29190613b4e565b81526020016113d636889003880188613b4e565b81526020016113ea36879003870187613b4e565b81526020016113fe36869003860186613bc0565b815263ffffffff841660209182015260008381528082526040908190208351805182546001600160a01b0319166001600160a01b039091161782559283015160018083019190915591830151600282018054929493859360ff19169083600481111561146c5761146c6134dd565b0217905550606091909101516003909101556020828101518051600484810180546001600160a01b0319166001600160a01b039093169290921782559282015160058501556040820151600685018054939492939192909160ff19169060019084908111156114dd576114dd6134dd565b02179055506060919091015160039091015560408281015180516008840180546001600160a01b0319166001600160a01b039092169190911781556020820151600985015591810151600a8401805492939260ff19166001836004811115611547576115476134dd565b02179055506060918201516003909101558201518051600c83018054909190829060ff19166001836002811115611580576115806134dd565b021790555060208281015182549015156101000261ff001990911617825560409092015160019091015560809290920151600e909101805463ffffffff90921663ffffffff199092169190911790556115db908501856139fb565b6001600160a01b03166115f160208701876139fb565b6001600160a01b031661160760208901896139fb565b60405163ffffffff861681526001600160a01b0391909116907f643d00b13444c16cafc3114d2cb054886ff44b5fe7c0f1b4eddcaf26983cbeb79060200160405180910390a4505050505050565b61165d613226565b6116678383611d43565b604001519392505050565b61167a61324e565b60006116878585856126e4565b6001600160a01b03861660009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff16908111156116fd576116fd6134dd565b600281111561170e5761170e6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff169081111561175d5761175d6134dd565b600481111561176e5761176e6134dd565b815260039190910154602091820152908252600783015490820152600890910154604090910152925050505b9392505050565b6117a9613291565b61179a8383611d43565b63bc197c8160e01b5b95945050505050565b60006117d233848461237b565b60028101549091506000906117ee90859063ffffffff16611d43565b90506001600283810154600160201b900460ff1690811115611812576118126134dd565b0361185a5780606001516020015161185a5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08195e1c1a5c995960aa1b60448201526064016107ae565b6008820154806118a05760405162461bcd60e51b81526020600482015260116024820152702737ba3434b733903bb4ba34323930bbbf60791b60448201526064016107ae565b6040808301516000600886015580519181015190916118c0918785612743565b505050505050565b6000828152600360205260409020600101546118e3816125ed565b610cc8838361267d565b6118f5611ce9565b6001600160a01b03811661195a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ae565b611963816126f1565b50565b61196e611ce9565b6001600160a01b0381166119b35760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016107ae565b600480546001600160a01b038381166001600160a01b031983168117909355604051911691829133907facfdf2068f2b4dda3f4970ef49a4cad3a0a7735a3badb3577bcabb3a8898073890600090a45050565b6000611a1333848461237b565b905060028082810154600160201b900460ff1690811115611a3657611a366134dd565b14611a785760405162461bcd60e51b8152602060048201526012602482015271506c6564676520756e66696e69736865642160701b60448201526064016107ae565b6008810180546000918290556002830154909190611a9d90869063ffffffff16611d43565b8051604001516003850154600586015492935090916001600160a01b039091169060ff168415611ad357611ad382828988612743565b6001836004811115611ae757611ae76134dd565b03611b635760405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0389169063a9059cbb906044016020604051808303816000875af1158015611b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5d9190613a24565b50611c73565b6002836004811115611b7757611b776134dd565b03611be7576040516323b872dd60e01b8152306004820152336024820152604481018890526001600160a01b038916906323b872dd90606401600060405180830381600087803b158015611bca57600080fd5b505af1158015611bde573d6000803e3d6000fd5b50505050611c73565b6002836004811115611bfb57611bfb6134dd565b03611c735760408051602081018252600081529051637921219560e11b81526001600160a01b038a169163f242432a91611c4091309133918d918c9190600401613a91565b600060405180830381600087803b158015611c5a57600080fd5b505af1158015611c6e573d6000803e3d6000fd5b505050505b855460038701546007880154604080518b815260208101949094526001600160a01b0392831690840152606083015289169033907f7f17ff0c099057bb0e700cc8906e38df4274727452016bb115c5fa3138a6de949060800160405180910390a3611cdf3389896128e9565b5050505050505050565b6002546001600160a01b031633146110cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ae565b611d4b613291565b6000611d6384846040516020016111b8929190613acb565b600081815260208190526040908190208151610120810190925280546001600160a01b031660a08301908152600182015460c08401526002820154939450919290918391839060e084019060ff166004811115611dc257611dc26134dd565b6004811115611dd357611dd36134dd565b81526003919091015460209182015290825260408051608081018252600485810180546001600160a01b031683526005870154838601526006870154959094019491939284019160ff1690811115611e2d57611e2d6134dd565b6004811115611e3e57611e3e6134dd565b815260039190910154602091820152908252604080516080810182526008850180546001600160a01b03168252600986015482850152600a860154949093019390929183019060ff166004811115611e9857611e986134dd565b6004811115611ea957611ea96134dd565b81526020016003820154815250508152602001600c82016040518060600160405290816000820160009054906101000a900460ff166002811115611eef57611eef6134dd565b6002811115611f0057611f006134dd565b81528154610100900460ff161515602080830191909152600190920154604090910152908252600e929092015463ffffffff16910152949350505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015260488101829052600090611f7a906068016111b8565b949350505050565b6000611f8e8783611d43565b8051519091506001600160a01b0316611fe25760405162461bcd60e51b81526020600482015260166024820152756e6f74207468697320706c6564676520746f6b656e2160501b60448201526064016107ae565b611fef8160200151612975565b61203b5760405162461bcd60e51b815260206004820152601760248201527f706179546f6b656e2068616e646c65206661696c65642100000000000000000060448201526064016107ae565b805161204a9087878787612c31565b6120855760405162461bcd60e51b815260206004820152600c60248201526b6d696e74206661696c65642160a01b60448201526064016107ae565b6120928160400151612d71565b6120de5760405162461bcd60e51b815260206004820152601860248201527f61697244726f70546f6b656e20756e66696e697368656421000000000000000060448201526064016107ae565b85876001600160a01b03167fad2943b15836caf43698401a62af4738985fb33dd979844d99d37f5293f037d333888860405161211c93929190613c29565b60405180910390a350505050505050565b808063ffffffff166007148061214957508063ffffffff16601e145b8061215a57508063ffffffff16605a145b8061216b57508063ffffffff1660b4145b6121b05760405162461bcd60e51b815260206004820152601660248201527504d75737420626520372c33302c36302c39302c3138360541b60448201526064016107ae565b60006121bd878787611f3e565b905060006121cb8785611d43565b604080820151815160e08101835288815242602082015263ffffffff881692810192909252919250606081016001815260208082018490526000604080840182905260609384018290526001600160a01b038e16825260018084528183208984528452918190208551815592850151918301919091558301516002808301805463ffffffff90931663ffffffff19841681178255948601519394909264ffffffffff19161790600160201b908490811115612288576122886134dd565b0217905550608082015180516003830180546001600160a01b0319166001600160a01b03909216919091178155602082015160048085019190915560408301516005850180549192909160ff19169060019084908111156122eb576122eb6134dd565b021790555060608201518160030155505060a0820151816007015560c082015181600801559050508463ffffffff16886001600160a01b03168a6001600160a01b03167f7ea654199703f048d1efb719754a27859d7289ddb9088d0a8e14e413ada7192a8a8a604051612368929190918252602082015260400190565b60405180910390a4505050505050505050565b6000806123898585856126e4565b6001600160a01b03861660009081526001602090815260408083208484529091528120919250600282810154600160201b900460ff16908111156123cf576123cf6134dd565b036124075760405162461bcd60e51b8152602060048201526008602482015267556e506c6564676560c01b60448201526064016107ae565b60028082810154600160201b900460ff1690811115612428576124286134dd565b0361243657915061179a9050565b600281015463ffffffff1660006124508262015180613c66565b63ffffffff1683600101546124659190613c8e565b90506000814210612494575060028301805464ff00000000191664020000000017905563ffffffff82166124b5565b620151808460010154426124a89190613ca1565b6124b29190613cb4565b90505b600284015460009081906124d0908b9063ffffffff16611d43565b60608101519091506000815160028111156124ed576124ed6134dd565b0361251f57865460038801546040830151612518928e9290916001600160a01b039091169088612eb8565b92506125a6565b600181516002811115612534576125346134dd565b036125485760408101516125189085613cd6565b60028151600281111561255d5761255d6134dd565b036125a6576006870154600081900361257b57506020820151606001515b60408201516127109061258e8388613cd6565b6125989190613cd6565b6125a29190613cb4565b9350505b600787015460006125b78286613ca1565b9050848960070181905550808960080160008282546125d69190613c8e565b90915550989e9d5050505050505050505050505050565b611963813361301f565b6126018282611103565b610d475760008281526003602090815260408083206001600160a01b03851684529091529020805460ff191660011790556126393390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6126878282611103565b15610d475760008281526003602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611f7a848484611f3e565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001836004811115612757576127576134dd565b036127c2576040516340c10f1960e01b8152336004820152602481018290526001600160a01b038516906340c10f19906044015b600060405180830381600087803b1580156127a557600080fd5b505af11580156127b9573d6000803e3d6000fd5b505050506128ab565b60028360048111156127d6576127d66134dd565b0361281c576040516334ff261960e21b81523360048201526024810183905260606044820152600060648201526001600160a01b0385169063d3fc98649060840161278b565b6002836004811115612830576128306134dd565b036128ab5760405163bb7fde7160e01b8152336004820152602481018390526044810182905260806064820152600060848201526001600160a01b0385169063bb7fde719060a401600060405180830381600087803b15801561289257600080fd5b505af11580156128a6573d6000803e3d6000fd5b505050505b60405181906001600160a01b0386169033907f7d11196ad7aec5325589a029930cc3b3c650fa71f6d6bca14bd1c3f4454e99be90600090a450505050565b60006128f68484846126e4565b6001600160a01b03909416600090815260016020818152604080842097845296905294812081815594850181905560028501805464ffffffffff191690556003850180546001600160a01b03191690556004850181905560058501805460ff191690556006850181905560078501819055600890940193909355505050565b6000816060015160000361298b57506001919050565b81516001600160a01b03161580156129b857506004826040015160048111156129b6576129b66134dd565b145b15612a0b578160600151341015612a065760405162461bcd60e51b815260206004820152601260248201527136b9b3973b30b63ab2903a37b7903637bbbf60711b60448201526064016107ae565b612b66565b815160608301516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015612a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8b9190613a24565b612ae55760405162461bcd60e51b815260206004820152602560248201527f4552433230207472616e73666572206661696c656421204d61796265206e6f74604482015264040c2eae8d60db1b60648201526084016107ae565b815160048054606085015160405163095ea7b360e01b81526001600160a01b039283169381019390935260248301529091169063095ea7b3906044016020604051808303816000875af1158015612b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b649190613a24565b505b600480548351606085015160405163b0aaeed960e01b81526001600160a01b03928316948101949094526024840152169063b0aaeed990349060440160206040518083038185885af1158015612bc0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612be59190613a24565b612c295760405162461bcd60e51b81526020600482015260156024820152746465706f736974496e636f6d65206661696c65642160581b60448201526064016107ae565b506001919050565b6000600186604001516004811115612c4b57612c4b6134dd565b03612cbb5785516040516340c10f1960e01b81526001600160a01b03848116600483015260248201879052909116906340c10f19906044015b600060405180830381600087803b158015612c9e57600080fd5b505af1158015612cb2573d6000803e3d6000fd5b50505050612d65565b600286604001516004811115612cd357612cd36134dd565b03612d0b5785516040516334ff261960e21b81526001600160a01b039091169063d3fc986490612c8490859089908890600401613c29565b600386604001516004811115612d2357612d236134dd565b03612d5d57855160405163bb7fde7160e01b81526001600160a01b039091169063bb7fde7190612c84908590899089908990600401613ced565b5060006117bc565b50600195945050505050565b60008160600151600003612d8757506001919050565b81516001600160a01b0316158015612db45750600482604001516004811115612db257612db26134dd565b145b15612e47578160600151341015612e0d5760405162461bcd60e51b815260206004820152601b60248201527f41697244726f703a206d73672e76616c756520746f6f206c6f777e000000000060448201526064016107ae565b60608201516040513391829181156108fc0291906000818181858888f19350505050158015612e40573d6000803e3d6000fd5b5050612c29565b815160608301516040516340c10f1960e01b815233600482015260248101919091526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015612e9857600080fd5b505af1158015612eac573d6000803e3d6000fd5b50505050506001919050565b600080866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f1d9190613d24565b60ff1690506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f869190613d24565b60ff16905063ffffffff8216819003612fc45761271084612fa7878a613cd6565b612fb19190613cd6565b612fbb9190613cb4565b925050506117bc565b6000612fd183600a613e2b565b612710612fdf84600a613e2b565b88612fea8c8a613cd6565b612ff49190613cd6565b612ffe9190613cd6565b6130089190613cb4565b6130129190613cb4565b9998505050505050505050565b6130298282611103565b610d475761303681613078565b61304183602061308a565b604051602001613052929190613e3d565b60408051601f198184030181529082905262461bcd60e51b82526107ae91600401613eb2565b606061075f6001600160a01b03831660145b60606000613099836002613cd6565b6130a4906002613c8e565b67ffffffffffffffff8111156130bc576130bc613331565b6040519080825280601f01601f1916602001820160405280156130e6576020820181803683370190505b509050600360fc1b8160008151811061310157613101613ec5565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061313057613130613ec5565b60200101906001600160f81b031916908160001a9053506000613154846002613cd6565b61315f906001613c8e565b90505b60018111156131d7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061319357613193613ec5565b1a60f81b8282815181106131a9576131a9613ec5565b60200101906001600160f81b031916908160001a90535060049490941c936131d081613edb565b9050613162565b50831561179a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107ae565b6040805160808101825260008082526020820181905290918201908152602001600081525090565b6040805160e081018252600080825260208201819052918101829052906060820190815260200161327d613226565b815260200160008152602001600081525090565b6040518060a001604052806132a4613226565b81526020016132b1613226565b81526020016132be613226565b81526040805160608101825260008082526020828101829052928201529101908152600060209091015290565b6000602082840312156132fd57600080fd5b81356001600160e01b03198116811461179a57600080fd5b80356001600160a01b038116811461332c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561337057613370613331565b604052919050565b600082601f83011261338957600080fd5b813567ffffffffffffffff8111156133a3576133a3613331565b6133b6601f8201601f1916602001613347565b8181528460208386010111156133cb57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156133fe57600080fd5b61340785613315565b935061341560208601613315565b925060408501359150606085013567ffffffffffffffff81111561343857600080fd5b61344487828801613378565b91505092959194509250565b6000806000806080858703121561346657600080fd5b61346f85613315565b9350602085013592506040850135915061348b60608601613315565b905092959194509250565b803563ffffffff8116811461332c57600080fd5b600080604083850312156134bd57600080fd5b6134c683613315565b91506134d460208401613496565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b80516001600160a01b031682526020808201519083015260408101516005811061351f5761351f6134dd565b6040830152606090810151910152565b6080810161075f82846134f3565b60006020828403121561354f57600080fd5b5035919050565b600080600080600060a0868803121561356e57600080fd5b61357786613315565b94506020860135935060408601359250606086013567ffffffffffffffff8111156135a157600080fd5b6135ad88828901613378565b9250506135bc60808701613496565b90509295509295909350565b6000806000606084860312156135dd57600080fd5b6135e684613315565b92506135f460208501613315565b9150604084013590509250925092565b6000806040838503121561361757600080fd5b823591506134d460208401613315565b6000806000806080858703121561363d57600080fd5b61364685613315565b9350602085013592506040850135915061348b60608601613496565b60038110611963576119636134dd565b805161367d81613662565b8252602081810151151590830152604090810151910152565b6060810161075f8284613672565b6000608082840312156136b657600080fd5b50919050565b60008060008060008587036102008112156136d657600080fd5b6136e088886136a4565b95506136ef88608089016136a4565b94506136ff8861010089016136a4565b9350606061017f198201121561371457600080fd5b50610180860191506135bc6101e08701613496565b600061014082019050825182526020830151602083015263ffffffff6040840151166040830152606083015161375e81613662565b80606084015250608083015161377760808401826134f3565b5060a083015161010083015260c0909201516101209091015290565b6000610200820190506137a78284516134f3565b60208301516137b960808401826134f3565b5060408301516137cd6101008401826134f3565b5060608301516137e1610180840182613672565b5063ffffffff6080840151166101e083015292915050565b6000806000806080858703121561380f57600080fd5b61381885613315565b93506020850135925060408501359150606085013567ffffffffffffffff81111561343857600080fd5b600082601f83011261385357600080fd5b8135602067ffffffffffffffff82111561386f5761386f613331565b8160051b61387e828201613347565b928352848101820192828101908785111561389857600080fd5b83870192505b848310156138b75782358252918301919083019061389e565b979650505050505050565b600080600080600060a086880312156138da57600080fd5b6138e386613315565b94506138f160208701613315565b9350604086013567ffffffffffffffff8082111561390e57600080fd5b61391a89838a01613842565b9450606088013591508082111561393057600080fd5b61393c89838a01613842565b9350608088013591508082111561395257600080fd5b5061395f88828901613378565b9150509295509295909350565b6000806040838503121561397f57600080fd5b61398883613315565b946020939093013593505050565b600080600080600060a086880312156139ae57600080fd5b6139b786613315565b94506139c560208701613315565b93506040860135925060608601359150608086013567ffffffffffffffff8111156139ef57600080fd5b61395f88828901613378565b600060208284031215613a0d57600080fd5b61179a82613315565b801515811461196357600080fd5b600060208284031215613a3657600080fd5b815161179a81613a16565b60005b83811015613a5c578181015183820152602001613a44565b50506000910152565b60008151808452613a7d816020860160208601613a41565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906138b790830184613a65565b60609290921b6bffffffffffffffffffffffff1916825260e01b6001600160e01b031916601482015260180190565b80356005811061332c57600080fd5b600060208284031215613b1b57600080fd5b61179a82613afa565b80356003811061332c57600080fd5b600060208284031215613b4557600080fd5b61179a82613b24565b600060808284031215613b6057600080fd5b6040516080810181811067ffffffffffffffff82111715613b8357613b83613331565b604052613b8f83613315565b815260208301356020820152613ba760408401613afa565b6040820152606083013560608201528091505092915050565b600060608284031215613bd257600080fd5b6040516060810181811067ffffffffffffffff82111715613bf557613bf5613331565b604052613c0183613b24565b81526020830135613c1181613a16565b60208201526040928301359281019290925250919050565b60018060a01b03841681528260208201526060604082015260006117bc6060830184613a65565b634e487b7160e01b600052601160045260246000fd5b63ffffffff818116838216028082169190828114613c8657613c86613c50565b505092915050565b8082018082111561075f5761075f613c50565b8181038181111561075f5761075f613c50565b600082613cd157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761075f5761075f613c50565b60018060a01b0385168152836020820152826040820152608060608201526000613d1a6080830184613a65565b9695505050505050565b600060208284031215613d3657600080fd5b815160ff8116811461179a57600080fd5b600181815b80851115613d82578160001904821115613d6857613d68613c50565b80851615613d7557918102915b93841c9390800290613d4c565b509250929050565b600082613d995750600161075f565b81613da65750600061075f565b8160018114613dbc5760028114613dc657613de2565b600191505061075f565b60ff841115613dd757613dd7613c50565b50506001821b61075f565b5060208310610133831016604e8410600b8410161715613e05575081810a61075f565b613e0f8383613d47565b8060001904821115613e2357613e23613c50565b029392505050565b600061179a63ffffffff841683613d8a565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613e75816017850160208801613a41565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613ea6816028840160208801613a41565b01602801949350505050565b60208152600061179a6020830184613a65565b634e487b7160e01b600052603260045260246000fd5b600081613eea57613eea613c50565b50600019019056fea26469706673582212209c43f57c0dd1006c072e8f92e225af31218e9f25bbe1ec52ab9d5018d8b2df3764736f6c63430008110033559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473eb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e",
    "sourceMap": "271:4567:46:-:0;;;671:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:20;719:10:36;936:18:20;:32::i;:::-;824:36:49;443:23;-1:-1:-1;;;;;;;;;;;824:13:49;:36::i;:::-;908:34;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;908:13:49;:34::i;:::-;993:35;443:23;719:10:36;993::49;:35::i;:::-;1079;-1:-1:-1;;;;;;;;;;;719:10:36;993::49;:35::i;1079:::-;1164:33;-1:-1:-1;;;;;;;;;;;719:10:36;993::49;:35::i;1164:33::-;710:7:46;:25;;-1:-1:-1;;;;;;710:25:46;-1:-1:-1;;;;;710:25:46;;;;;;;;;;271:4567;;2426:187:20;2518:6;;;-1:-1:-1;;;;;2534:17:20;;;-1:-1:-1;;;;;;2534:17:20;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;7172:247:18:-;7255:25;4604:12;;;:6;:12;;;;;;:22;;;;7311:34;;;;7360:52;;4604:22;;7311:34;;4604:22;;:12;;7360:52;;7255:25;7360:52;7245:174;7172:247;;:::o;6937:110::-;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;7587:233::-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;7740:4;7708:36;;;7790:12;719:10:36;;640:96;7790:12:18;-1:-1:-1;;;;;7763:40:18;7781:7;-1:-1:-1;;;;;7763:40:18;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;14:290:56:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:56;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:56:o;:::-;271:4567:46;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101ee5760003560e01c80638703ba2b1161010d578063bb7fde71116100a0578063e58378bb1161006f578063e58378bb1461066e578063f23a6e61146106a2578063f2fde38b146106ce578063f7c24aa3146106ee578063f9dfa79f1461070e57600080fd5b8063bb7fde71146105fa578063bc197c811461060e578063d35c9a071461062e578063d547741f1461064e57600080fd5b80639785207e116100dc5780639785207e1461056b578063a217fddf1461058b578063a68aede0146105a0578063ac346a1f146105cd57600080fd5b80638703ba2b146104d65780638da5cb5b1461050357806391d148541461052b57806396c817e71461054b57600080fd5b806334771e62116101855780636394f6e6116101545780636394f6e61461040c5780636c83fc341461044057806370dcbfc614610460578063715018a6146104c157600080fd5b806334771e621461038257806336568abe14610398578063444bbb54146103b857806359f1da6c146103ec57600080fd5b8063248a9ca3116101c1578063248a9ca3146102bb57806326cbd26b146102f957806327a99cb11461030c5780632f2ff15d1461036257600080fd5b806301ffc9a7146101f3578063150b7a021461022857806316762eed1461026c57806322eb79311461028e575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046132eb565b61072e565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b506102536102433660046133e8565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161021f565b34801561027857600080fd5b5061028c610287366004613450565b610765565b005b34801561029a57600080fd5b506102ae6102a93660046134aa565b6109b3565b60405161021f919061352f565b3480156102c757600080fd5b506102eb6102d636600461353d565b60009081526003602052604090206001015490565b60405190815260200161021f565b61028c610307366004613556565b6109d0565b34801561031857600080fd5b5061032c6103273660046135c8565b610b76565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a00161021f565b34801561036e57600080fd5b5061028c61037d366004613604565b610ca3565b34801561038e57600080fd5b506102eb61271081565b3480156103a457600080fd5b5061028c6103b3366004613604565b610ccd565b3480156103c457600080fd5b506102eb7f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e81565b3480156103f857600080fd5b5061028c610407366004613627565b610d4b565b34801561041857600080fd5b506102eb7fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7281565b34801561044c57600080fd5b506102ae61045b3660046134aa565b610f42565b34801561046c57600080fd5b5061048061047b3660046135c8565b610f5c565b60408051968752602087019590955263ffffffff909316938501939093526001600160a01b03166060840152608083019190915260a082015260c00161021f565b3480156104cd57600080fd5b5061028c6110bd565b3480156104e257600080fd5b506104f66104f13660046134aa565b6110d1565b60405161021f9190613696565b34801561050f57600080fd5b506002546040516001600160a01b03909116815260200161021f565b34801561053757600080fd5b50610213610546366004613604565b611103565b34801561055757600080fd5b5061028c6105663660046136bc565b61112e565b34801561057757600080fd5b506102ae6105863660046134aa565b611655565b34801561059757600080fd5b506102eb600081565b3480156105ac57600080fd5b506105c06105bb3660046135c8565b611672565b60405161021f9190613729565b3480156105d957600080fd5b506105ed6105e83660046134aa565b6117a1565b60405161021f9190613793565b61028c6106083660046137f9565b50505050565b34801561061a57600080fd5b506102536106293660046138c2565b6117b3565b34801561063a57600080fd5b5061028c61064936600461396c565b6117c5565b34801561065a57600080fd5b5061028c610669366004613604565b6118c8565b34801561067a57600080fd5b506102eb7fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e81565b3480156106ae57600080fd5b506102536106bd366004613996565b63f23a6e6160e01b95945050505050565b3480156106da57600080fd5b5061028c6106e93660046139fb565b6118ed565b3480156106fa57600080fd5b5061028c6107093660046139fb565b611966565b34801561071a57600080fd5b5061028c61072936600461396c565b611a06565b60006001600160e01b03198216637965db0b60e01b148061075f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61076d611ce9565b6001600160a01b0381166107b75760405162461bcd60e51b815260206004820152600c60248201526b32b939103932b1b2b4bb32b960a11b60448201526064015b60405180910390fd5b6001600160a01b038416610801576040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156107fb573d6000803e3d6000fd5b50610962565b8260000361087c5760405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af1158015610858573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190613a24565b81156108f95760408051602081018252600081529051637921219560e11b81526001600160a01b0386169163f242432a916108c291309186918991899190600401613a91565b600060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b50505050610962565b6040516323b872dd60e01b81523060048201526001600160a01b038281166024830152604482018590528516906323b872dd90606401600060405180830381600087803b15801561094957600080fd5b505af115801561095d573d6000803e3d6000fd5b505050505b60408051338152602081018590526001600160a01b03808416928592918816917ffb80d861da582b723be2d19507ce3e03851820c464abea89156ec77e089b1ad9910160405180910390a450505050565b6109bb613226565b6109c58383611d43565b602001519392505050565b848460006109df338484611f3e565b3360009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff1690811115610a4c57610a4c6134dd565b6002811115610a5d57610a5d6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115610aac57610aac6134dd565b6004811115610abd57610abd6134dd565b8152600391909101546020918201529082526007830154908201526008909101546040909101529050600081606001516002811115610afe57610afe6134dd565b14610b445760405162461bcd60e51b8152602060048201526016602482015275283632b233b4b7339037b910283632b233b2b217171760511b60448201526064016107ae565b610b5289898989308a611f82565b63ffffffff851615610b6b57610b6b338a8a8a8961212d565b505050505050505050565b600080600080600080610b8a89898961237b565b6040805160e081018252825481526001830154602082015260028084015463ffffffff8116938301939093529092916060840191600160201b90910460ff1690811115610bd957610bd96134dd565b6002811115610bea57610bea6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115610c3957610c396134dd565b6004811115610c4a57610c4a6134dd565b81526003919091015460209182015290825260078301549082015260089091015460409182015281519082015160808301515160a084015160c090940151929d63ffffffff9092169c509a509198509650945050505050565b600082815260036020526040902060010154610cbe816125ed565b610cc883836125f7565b505050565b6001600160a01b0381163314610d3d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016107ae565b610d47828261267d565b5050565b808063ffffffff1660071480610d6757508063ffffffff16601e145b80610d7857508063ffffffff16605a145b80610d8957508063ffffffff1660b4145b610dce5760405162461bcd60e51b815260206004820152601660248201527504d75737420626520372c33302c36302c39302c3138360541b60448201526064016107ae565b84846000610ddd338484611f3e565b3360009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff1690811115610e4a57610e4a6134dd565b6002811115610e5b57610e5b6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115610eaa57610eaa6134dd565b6004811115610ebb57610ebb6134dd565b8152600391909101546020918201529082526007830154908201526008909101546040909101529050600081606001516002811115610efc57610efc6134dd565b14610b6b5760405162461bcd60e51b8152602060048201526016602482015275283632b233b4b7339037b910283632b233b2b217171760511b60448201526064016107ae565b610f4a613226565b610f548383611d43565b519392505050565b6000806000806000806000610f728a8a8a6126e4565b6001600160a01b038b1660009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff1690811115610fe857610fe86134dd565b6002811115610ff957610ff96134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff1690811115611048576110486134dd565b6004811115611059576110596134dd565b815260200160038201548152505081526020016007820154815260200160088201548152505090508060000151816020015182604001518360800151600001518460a001518560c00151975097509750975097509750505093975093979195509350565b6110c5611ce9565b6110cf60006126f1565b565b60408051606081018252600080825260208201819052918101919091526110f88383611d43565b606001519392505050565b60009182526003602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6111587f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e33611103565b6111945760405162461bcd60e51b815260206004820152600d60248201526c27b7363c9036b0b730b3b2b93f60991b60448201526064016107ae565b60006111d26111a660208801886139fb565b836040516020016111b8929190613acb565b604051602081830303815290604052805160209091012090565b6000818152602081905260409020549091506001600160a01b0316156112255760405162461bcd60e51b8152602060048201526008602482015267657869737465642160c01b60448201526064016107ae565b60026112376060880160408901613b09565b6004811115611248576112486134dd565b1480611274575060036112616060880160408901613b09565b6004811115611272576112726134dd565b145b156112f25760006112886020850185613b33565b6002811115611299576112996134dd565b036112f25760405162461bcd60e51b8152602060048201526024808201527f4e465420706c65646765206d75737420757365205061795072696365506572206044820152637479706560e01b60648201526084016107ae565b60026113016020850185613b33565b6002811115611312576113126134dd565b036113a65761132460208501856139fb565b6001600160a01b031661133a60208701876139fb565b6001600160a01b0316146113a65760405162461bcd60e51b815260206004820152602d60248201527f50726f666974547970652e50617950726963655065723d3e706179546f6b656e60448201526c1e9eb83937b334ba2a37b5b2b760991b60648201526084016107ae565b6040518060a00160405280878036038101906113c29190613b4e565b81526020016113d636889003880188613b4e565b81526020016113ea36879003870187613b4e565b81526020016113fe36869003860186613bc0565b815263ffffffff841660209182015260008381528082526040908190208351805182546001600160a01b0319166001600160a01b039091161782559283015160018083019190915591830151600282018054929493859360ff19169083600481111561146c5761146c6134dd565b0217905550606091909101516003909101556020828101518051600484810180546001600160a01b0319166001600160a01b039093169290921782559282015160058501556040820151600685018054939492939192909160ff19169060019084908111156114dd576114dd6134dd565b02179055506060919091015160039091015560408281015180516008840180546001600160a01b0319166001600160a01b039092169190911781556020820151600985015591810151600a8401805492939260ff19166001836004811115611547576115476134dd565b02179055506060918201516003909101558201518051600c83018054909190829060ff19166001836002811115611580576115806134dd565b021790555060208281015182549015156101000261ff001990911617825560409092015160019091015560809290920151600e909101805463ffffffff90921663ffffffff199092169190911790556115db908501856139fb565b6001600160a01b03166115f160208701876139fb565b6001600160a01b031661160760208901896139fb565b60405163ffffffff861681526001600160a01b0391909116907f643d00b13444c16cafc3114d2cb054886ff44b5fe7c0f1b4eddcaf26983cbeb79060200160405180910390a4505050505050565b61165d613226565b6116678383611d43565b604001519392505050565b61167a61324e565b60006116878585856126e4565b6001600160a01b03861660009081526001602081815260408084208585528252808420815160e08101835281548152938101549284019290925260028083015463ffffffff8116928501929092529495509293919290916060840191600160201b900460ff16908111156116fd576116fd6134dd565b600281111561170e5761170e6134dd565b8152604080516080810182526003840180546001600160a01b031682526004808601546020848101919091526005870154950194929391929184019160ff169081111561175d5761175d6134dd565b600481111561176e5761176e6134dd565b815260039190910154602091820152908252600783015490820152600890910154604090910152925050505b9392505050565b6117a9613291565b61179a8383611d43565b63bc197c8160e01b5b95945050505050565b60006117d233848461237b565b60028101549091506000906117ee90859063ffffffff16611d43565b90506001600283810154600160201b900460ff1690811115611812576118126134dd565b0361185a5780606001516020015161185a5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08195e1c1a5c995960aa1b60448201526064016107ae565b6008820154806118a05760405162461bcd60e51b81526020600482015260116024820152702737ba3434b733903bb4ba34323930bbbf60791b60448201526064016107ae565b6040808301516000600886015580519181015190916118c0918785612743565b505050505050565b6000828152600360205260409020600101546118e3816125ed565b610cc8838361267d565b6118f5611ce9565b6001600160a01b03811661195a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ae565b611963816126f1565b50565b61196e611ce9565b6001600160a01b0381166119b35760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016107ae565b600480546001600160a01b038381166001600160a01b031983168117909355604051911691829133907facfdf2068f2b4dda3f4970ef49a4cad3a0a7735a3badb3577bcabb3a8898073890600090a45050565b6000611a1333848461237b565b905060028082810154600160201b900460ff1690811115611a3657611a366134dd565b14611a785760405162461bcd60e51b8152602060048201526012602482015271506c6564676520756e66696e69736865642160701b60448201526064016107ae565b6008810180546000918290556002830154909190611a9d90869063ffffffff16611d43565b8051604001516003850154600586015492935090916001600160a01b039091169060ff168415611ad357611ad382828988612743565b6001836004811115611ae757611ae76134dd565b03611b635760405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0389169063a9059cbb906044016020604051808303816000875af1158015611b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5d9190613a24565b50611c73565b6002836004811115611b7757611b776134dd565b03611be7576040516323b872dd60e01b8152306004820152336024820152604481018890526001600160a01b038916906323b872dd90606401600060405180830381600087803b158015611bca57600080fd5b505af1158015611bde573d6000803e3d6000fd5b50505050611c73565b6002836004811115611bfb57611bfb6134dd565b03611c735760408051602081018252600081529051637921219560e11b81526001600160a01b038a169163f242432a91611c4091309133918d918c9190600401613a91565b600060405180830381600087803b158015611c5a57600080fd5b505af1158015611c6e573d6000803e3d6000fd5b505050505b855460038701546007880154604080518b815260208101949094526001600160a01b0392831690840152606083015289169033907f7f17ff0c099057bb0e700cc8906e38df4274727452016bb115c5fa3138a6de949060800160405180910390a3611cdf3389896128e9565b5050505050505050565b6002546001600160a01b031633146110cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ae565b611d4b613291565b6000611d6384846040516020016111b8929190613acb565b600081815260208190526040908190208151610120810190925280546001600160a01b031660a08301908152600182015460c08401526002820154939450919290918391839060e084019060ff166004811115611dc257611dc26134dd565b6004811115611dd357611dd36134dd565b81526003919091015460209182015290825260408051608081018252600485810180546001600160a01b031683526005870154838601526006870154959094019491939284019160ff1690811115611e2d57611e2d6134dd565b6004811115611e3e57611e3e6134dd565b815260039190910154602091820152908252604080516080810182526008850180546001600160a01b03168252600986015482850152600a860154949093019390929183019060ff166004811115611e9857611e986134dd565b6004811115611ea957611ea96134dd565b81526020016003820154815250508152602001600c82016040518060600160405290816000820160009054906101000a900460ff166002811115611eef57611eef6134dd565b6002811115611f0057611f006134dd565b81528154610100900460ff161515602080830191909152600190920154604090910152908252600e929092015463ffffffff16910152949350505050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b16603482015260488101829052600090611f7a906068016111b8565b949350505050565b6000611f8e8783611d43565b8051519091506001600160a01b0316611fe25760405162461bcd60e51b81526020600482015260166024820152756e6f74207468697320706c6564676520746f6b656e2160501b60448201526064016107ae565b611fef8160200151612975565b61203b5760405162461bcd60e51b815260206004820152601760248201527f706179546f6b656e2068616e646c65206661696c65642100000000000000000060448201526064016107ae565b805161204a9087878787612c31565b6120855760405162461bcd60e51b815260206004820152600c60248201526b6d696e74206661696c65642160a01b60448201526064016107ae565b6120928160400151612d71565b6120de5760405162461bcd60e51b815260206004820152601860248201527f61697244726f70546f6b656e20756e66696e697368656421000000000000000060448201526064016107ae565b85876001600160a01b03167fad2943b15836caf43698401a62af4738985fb33dd979844d99d37f5293f037d333888860405161211c93929190613c29565b60405180910390a350505050505050565b808063ffffffff166007148061214957508063ffffffff16601e145b8061215a57508063ffffffff16605a145b8061216b57508063ffffffff1660b4145b6121b05760405162461bcd60e51b815260206004820152601660248201527504d75737420626520372c33302c36302c39302c3138360541b60448201526064016107ae565b60006121bd878787611f3e565b905060006121cb8785611d43565b604080820151815160e08101835288815242602082015263ffffffff881692810192909252919250606081016001815260208082018490526000604080840182905260609384018290526001600160a01b038e16825260018084528183208984528452918190208551815592850151918301919091558301516002808301805463ffffffff90931663ffffffff19841681178255948601519394909264ffffffffff19161790600160201b908490811115612288576122886134dd565b0217905550608082015180516003830180546001600160a01b0319166001600160a01b03909216919091178155602082015160048085019190915560408301516005850180549192909160ff19169060019084908111156122eb576122eb6134dd565b021790555060608201518160030155505060a0820151816007015560c082015181600801559050508463ffffffff16886001600160a01b03168a6001600160a01b03167f7ea654199703f048d1efb719754a27859d7289ddb9088d0a8e14e413ada7192a8a8a604051612368929190918252602082015260400190565b60405180910390a4505050505050505050565b6000806123898585856126e4565b6001600160a01b03861660009081526001602090815260408083208484529091528120919250600282810154600160201b900460ff16908111156123cf576123cf6134dd565b036124075760405162461bcd60e51b8152602060048201526008602482015267556e506c6564676560c01b60448201526064016107ae565b60028082810154600160201b900460ff1690811115612428576124286134dd565b0361243657915061179a9050565b600281015463ffffffff1660006124508262015180613c66565b63ffffffff1683600101546124659190613c8e565b90506000814210612494575060028301805464ff00000000191664020000000017905563ffffffff82166124b5565b620151808460010154426124a89190613ca1565b6124b29190613cb4565b90505b600284015460009081906124d0908b9063ffffffff16611d43565b60608101519091506000815160028111156124ed576124ed6134dd565b0361251f57865460038801546040830151612518928e9290916001600160a01b039091169088612eb8565b92506125a6565b600181516002811115612534576125346134dd565b036125485760408101516125189085613cd6565b60028151600281111561255d5761255d6134dd565b036125a6576006870154600081900361257b57506020820151606001515b60408201516127109061258e8388613cd6565b6125989190613cd6565b6125a29190613cb4565b9350505b600787015460006125b78286613ca1565b9050848960070181905550808960080160008282546125d69190613c8e565b90915550989e9d5050505050505050505050505050565b611963813361301f565b6126018282611103565b610d475760008281526003602090815260408083206001600160a01b03851684529091529020805460ff191660011790556126393390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6126878282611103565b15610d475760008281526003602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611f7a848484611f3e565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001836004811115612757576127576134dd565b036127c2576040516340c10f1960e01b8152336004820152602481018290526001600160a01b038516906340c10f19906044015b600060405180830381600087803b1580156127a557600080fd5b505af11580156127b9573d6000803e3d6000fd5b505050506128ab565b60028360048111156127d6576127d66134dd565b0361281c576040516334ff261960e21b81523360048201526024810183905260606044820152600060648201526001600160a01b0385169063d3fc98649060840161278b565b6002836004811115612830576128306134dd565b036128ab5760405163bb7fde7160e01b8152336004820152602481018390526044810182905260806064820152600060848201526001600160a01b0385169063bb7fde719060a401600060405180830381600087803b15801561289257600080fd5b505af11580156128a6573d6000803e3d6000fd5b505050505b60405181906001600160a01b0386169033907f7d11196ad7aec5325589a029930cc3b3c650fa71f6d6bca14bd1c3f4454e99be90600090a450505050565b60006128f68484846126e4565b6001600160a01b03909416600090815260016020818152604080842097845296905294812081815594850181905560028501805464ffffffffff191690556003850180546001600160a01b03191690556004850181905560058501805460ff191690556006850181905560078501819055600890940193909355505050565b6000816060015160000361298b57506001919050565b81516001600160a01b03161580156129b857506004826040015160048111156129b6576129b66134dd565b145b15612a0b578160600151341015612a065760405162461bcd60e51b815260206004820152601260248201527136b9b3973b30b63ab2903a37b7903637bbbf60711b60448201526064016107ae565b612b66565b815160608301516040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015612a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8b9190613a24565b612ae55760405162461bcd60e51b815260206004820152602560248201527f4552433230207472616e73666572206661696c656421204d61796265206e6f74604482015264040c2eae8d60db1b60648201526084016107ae565b815160048054606085015160405163095ea7b360e01b81526001600160a01b039283169381019390935260248301529091169063095ea7b3906044016020604051808303816000875af1158015612b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b649190613a24565b505b600480548351606085015160405163b0aaeed960e01b81526001600160a01b03928316948101949094526024840152169063b0aaeed990349060440160206040518083038185885af1158015612bc0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612be59190613a24565b612c295760405162461bcd60e51b81526020600482015260156024820152746465706f736974496e636f6d65206661696c65642160581b60448201526064016107ae565b506001919050565b6000600186604001516004811115612c4b57612c4b6134dd565b03612cbb5785516040516340c10f1960e01b81526001600160a01b03848116600483015260248201879052909116906340c10f19906044015b600060405180830381600087803b158015612c9e57600080fd5b505af1158015612cb2573d6000803e3d6000fd5b50505050612d65565b600286604001516004811115612cd357612cd36134dd565b03612d0b5785516040516334ff261960e21b81526001600160a01b039091169063d3fc986490612c8490859089908890600401613c29565b600386604001516004811115612d2357612d236134dd565b03612d5d57855160405163bb7fde7160e01b81526001600160a01b039091169063bb7fde7190612c84908590899089908990600401613ced565b5060006117bc565b50600195945050505050565b60008160600151600003612d8757506001919050565b81516001600160a01b0316158015612db45750600482604001516004811115612db257612db26134dd565b145b15612e47578160600151341015612e0d5760405162461bcd60e51b815260206004820152601b60248201527f41697244726f703a206d73672e76616c756520746f6f206c6f777e000000000060448201526064016107ae565b60608201516040513391829181156108fc0291906000818181858888f19350505050158015612e40573d6000803e3d6000fd5b5050612c29565b815160608301516040516340c10f1960e01b815233600482015260248101919091526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015612e9857600080fd5b505af1158015612eac573d6000803e3d6000fd5b50505050506001919050565b600080866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f1d9190613d24565b60ff1690506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f869190613d24565b60ff16905063ffffffff8216819003612fc45761271084612fa7878a613cd6565b612fb19190613cd6565b612fbb9190613cb4565b925050506117bc565b6000612fd183600a613e2b565b612710612fdf84600a613e2b565b88612fea8c8a613cd6565b612ff49190613cd6565b612ffe9190613cd6565b6130089190613cb4565b6130129190613cb4565b9998505050505050505050565b6130298282611103565b610d475761303681613078565b61304183602061308a565b604051602001613052929190613e3d565b60408051601f198184030181529082905262461bcd60e51b82526107ae91600401613eb2565b606061075f6001600160a01b03831660145b60606000613099836002613cd6565b6130a4906002613c8e565b67ffffffffffffffff8111156130bc576130bc613331565b6040519080825280601f01601f1916602001820160405280156130e6576020820181803683370190505b509050600360fc1b8160008151811061310157613101613ec5565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061313057613130613ec5565b60200101906001600160f81b031916908160001a9053506000613154846002613cd6565b61315f906001613c8e565b90505b60018111156131d7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061319357613193613ec5565b1a60f81b8282815181106131a9576131a9613ec5565b60200101906001600160f81b031916908160001a90535060049490941c936131d081613edb565b9050613162565b50831561179a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107ae565b6040805160808101825260008082526020820181905290918201908152602001600081525090565b6040805160e081018252600080825260208201819052918101829052906060820190815260200161327d613226565b815260200160008152602001600081525090565b6040518060a001604052806132a4613226565b81526020016132b1613226565b81526020016132be613226565b81526040805160608101825260008082526020828101829052928201529101908152600060209091015290565b6000602082840312156132fd57600080fd5b81356001600160e01b03198116811461179a57600080fd5b80356001600160a01b038116811461332c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561337057613370613331565b604052919050565b600082601f83011261338957600080fd5b813567ffffffffffffffff8111156133a3576133a3613331565b6133b6601f8201601f1916602001613347565b8181528460208386010111156133cb57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156133fe57600080fd5b61340785613315565b935061341560208601613315565b925060408501359150606085013567ffffffffffffffff81111561343857600080fd5b61344487828801613378565b91505092959194509250565b6000806000806080858703121561346657600080fd5b61346f85613315565b9350602085013592506040850135915061348b60608601613315565b905092959194509250565b803563ffffffff8116811461332c57600080fd5b600080604083850312156134bd57600080fd5b6134c683613315565b91506134d460208401613496565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b80516001600160a01b031682526020808201519083015260408101516005811061351f5761351f6134dd565b6040830152606090810151910152565b6080810161075f82846134f3565b60006020828403121561354f57600080fd5b5035919050565b600080600080600060a0868803121561356e57600080fd5b61357786613315565b94506020860135935060408601359250606086013567ffffffffffffffff8111156135a157600080fd5b6135ad88828901613378565b9250506135bc60808701613496565b90509295509295909350565b6000806000606084860312156135dd57600080fd5b6135e684613315565b92506135f460208501613315565b9150604084013590509250925092565b6000806040838503121561361757600080fd5b823591506134d460208401613315565b6000806000806080858703121561363d57600080fd5b61364685613315565b9350602085013592506040850135915061348b60608601613496565b60038110611963576119636134dd565b805161367d81613662565b8252602081810151151590830152604090810151910152565b6060810161075f8284613672565b6000608082840312156136b657600080fd5b50919050565b60008060008060008587036102008112156136d657600080fd5b6136e088886136a4565b95506136ef88608089016136a4565b94506136ff8861010089016136a4565b9350606061017f198201121561371457600080fd5b50610180860191506135bc6101e08701613496565b600061014082019050825182526020830151602083015263ffffffff6040840151166040830152606083015161375e81613662565b80606084015250608083015161377760808401826134f3565b5060a083015161010083015260c0909201516101209091015290565b6000610200820190506137a78284516134f3565b60208301516137b960808401826134f3565b5060408301516137cd6101008401826134f3565b5060608301516137e1610180840182613672565b5063ffffffff6080840151166101e083015292915050565b6000806000806080858703121561380f57600080fd5b61381885613315565b93506020850135925060408501359150606085013567ffffffffffffffff81111561343857600080fd5b600082601f83011261385357600080fd5b8135602067ffffffffffffffff82111561386f5761386f613331565b8160051b61387e828201613347565b928352848101820192828101908785111561389857600080fd5b83870192505b848310156138b75782358252918301919083019061389e565b979650505050505050565b600080600080600060a086880312156138da57600080fd5b6138e386613315565b94506138f160208701613315565b9350604086013567ffffffffffffffff8082111561390e57600080fd5b61391a89838a01613842565b9450606088013591508082111561393057600080fd5b61393c89838a01613842565b9350608088013591508082111561395257600080fd5b5061395f88828901613378565b9150509295509295909350565b6000806040838503121561397f57600080fd5b61398883613315565b946020939093013593505050565b600080600080600060a086880312156139ae57600080fd5b6139b786613315565b94506139c560208701613315565b93506040860135925060608601359150608086013567ffffffffffffffff8111156139ef57600080fd5b61395f88828901613378565b600060208284031215613a0d57600080fd5b61179a82613315565b801515811461196357600080fd5b600060208284031215613a3657600080fd5b815161179a81613a16565b60005b83811015613a5c578181015183820152602001613a44565b50506000910152565b60008151808452613a7d816020860160208601613a41565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906138b790830184613a65565b60609290921b6bffffffffffffffffffffffff1916825260e01b6001600160e01b031916601482015260180190565b80356005811061332c57600080fd5b600060208284031215613b1b57600080fd5b61179a82613afa565b80356003811061332c57600080fd5b600060208284031215613b4557600080fd5b61179a82613b24565b600060808284031215613b6057600080fd5b6040516080810181811067ffffffffffffffff82111715613b8357613b83613331565b604052613b8f83613315565b815260208301356020820152613ba760408401613afa565b6040820152606083013560608201528091505092915050565b600060608284031215613bd257600080fd5b6040516060810181811067ffffffffffffffff82111715613bf557613bf5613331565b604052613c0183613b24565b81526020830135613c1181613a16565b60208201526040928301359281019290925250919050565b60018060a01b03841681528260208201526060604082015260006117bc6060830184613a65565b634e487b7160e01b600052601160045260246000fd5b63ffffffff818116838216028082169190828114613c8657613c86613c50565b505092915050565b8082018082111561075f5761075f613c50565b8181038181111561075f5761075f613c50565b600082613cd157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761075f5761075f613c50565b60018060a01b0385168152836020820152826040820152608060608201526000613d1a6080830184613a65565b9695505050505050565b600060208284031215613d3657600080fd5b815160ff8116811461179a57600080fd5b600181815b80851115613d82578160001904821115613d6857613d68613c50565b80851615613d7557918102915b93841c9390800290613d4c565b509250929050565b600082613d995750600161075f565b81613da65750600061075f565b8160018114613dbc5760028114613dc657613de2565b600191505061075f565b60ff841115613dd757613dd7613c50565b50506001821b61075f565b5060208310610133831016604e8410600b8410161715613e05575081810a61075f565b613e0f8383613d47565b8060001904821115613e2357613e23613c50565b029392505050565b600061179a63ffffffff841683613d8a565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613e75816017850160208801613a41565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613ea6816028840160208801613a41565b01602801949350505050565b60208152600061179a6020830184613a65565b634e487b7160e01b600052603260045260246000fd5b600081613eea57613eea613c50565b50600019019056fea26469706673582212209c43f57c0dd1006c072e8f92e225af31218e9f25bbe1ec52ab9d5018d8b2df3764736f6c63430008110033",
    "sourceMap": "271:4567:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:18;;;;;;;;;;-1:-1:-1;2732:202:18;;;;;:::i;:::-;;:::i;:::-;;;470:14:56;;463:22;445:41;;433:2;418:18;2732:202:18;;;;;;;;12177:158:47;;;;;;;;;;-1:-1:-1;12177:158:47;;;;;:::i;:::-;-1:-1:-1;;;12177:158:47;;;;;;;;;;-1:-1:-1;;;;;;2326:33:56;;;2308:52;;2296:2;2281:18;12177:158:47;2164:202:56;1426:722:49;;;;;;;;;;-1:-1:-1;1426:722:49;;;;;:::i;:::-;;:::i;:::-;;11585:161:47;;;;;;;;;;-1:-1:-1;11585:161:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4504:129:18:-;;;;;;;;;;-1:-1:-1;4504:129:18;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;:22;;;;4504:129;;;;4311:25:56;;;4299:2;4284:18;4504:129:18;4165:177:56;1352:360:46;;;;;;:::i;:::-;;:::i;7036:291:47:-;;;;;;;;;;-1:-1:-1;7036:291:47;;;;;:::i;:::-;;:::i;:::-;;;;5549:25:56;;;5605:2;5590:18;;5583:34;;;;-1:-1:-1;;;;;5653:32:56;;;5633:18;;;5626:60;;;;5717:2;5702:18;;5695:34;;;;5760:3;5745:19;;5738:35;5536:3;5521:19;7036:291:47;5290:489:56;4929:145:18;;;;;;;;;;-1:-1:-1;4929:145:18;;;;;:::i;:::-;;:::i;181:53:48:-;;;;;;;;;;;;229:5;181:53;;6038:214:18;;;;;;;;;;-1:-1:-1;6038:214:18;;;;;:::i;:::-;;:::i;492:56:49:-;;;;;;;;;;;;527:21;492:56;;1719:320:47;;;;;;;;;;-1:-1:-1;1719:320:47;;;;;:::i;:::-;;:::i;406:60:49:-;;;;;;;;;;;;443:23;406:60;;11412:167:47;;;;;;;;;;-1:-1:-1;11412:167:47;;;;;:::i;:::-;;:::i;6408:368::-;;;;;;;;;;-1:-1:-1;6408:368:47;;;;;:::i;:::-;;:::i;:::-;;;;6910:25:56;;;6966:2;6951:18;;6944:34;;;;7026:10;7014:23;;;6994:18;;;6987:51;;;;-1:-1:-1;;;;;7074:32:56;7069:2;7054:18;;7047:60;7138:3;7123:19;;7116:35;;;;7094:3;7167:19;;7160:35;6897:3;6882:19;6408:368:47;6625:576:56;1824:101:20;;;;;;;;;;;;;:::i;11925:175:47:-;;;;;;;;;;-1:-1:-1;11925:175:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1201:85:20:-;;;;;;;;;;-1:-1:-1;1273:6:20;;1201:85;;-1:-1:-1;;;;;1273:6:20;;;8036:51:56;;8024:2;8009:18;1201:85:20;7890:203:56;3021:145:18;;;;;;;;;;-1:-1:-1;3021:145:18;;;;;:::i;:::-;;:::i;10069:1336:47:-;;;;;;;;;;-1:-1:-1;10069:1336:47;;;;;:::i;:::-;;:::i;11752:167::-;;;;;;;;;;-1:-1:-1;11752:167:47;;;;;:::i;:::-;;:::i;2153:49:18:-;;;;;;;;;;-1:-1:-1;2153:49:18;2198:4;2153:49;;6783:246:47;;;;;;;;;;-1:-1:-1;6783:246:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2451:160:48:-;;;;;;;;;;-1:-1:-1;2451:160:48;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;935:174:46:-;;;;;;:::i;:::-;;;;;;12719:247:47;;;;;;;;;;-1:-1:-1;12719:247:47;;;;;:::i;:::-;;:::i;3691:608::-;;;;;;;;;;-1:-1:-1;3691:608:47;;;;;:::i;:::-;;:::i;5354:147:18:-;;;;;;;;;;-1:-1:-1;5354:147:18;;;;;:::i;:::-;;:::i;571:60:49:-;;;;;;;;;;;;608:23;571:60;;12415:219:47;;;;;;;;;;-1:-1:-1;12415:219:47;;;;;:::i;:::-;-1:-1:-1;;;12415:219:47;;;;;;;;2074:198:20;;;;;;;;;;-1:-1:-1;2074:198:20;;;;;:::i;:::-;;:::i;3189:252:46:-;;;;;;;;;;-1:-1:-1;3189:252:46;;;;;:::i;:::-;;:::i;4898:1195:47:-;;;;;;;;;;-1:-1:-1;4898:1195:47;;;;;:::i;:::-;;:::i;2732:202:18:-;2817:4;-1:-1:-1;;;;;;2840:47:18;;-1:-1:-1;;;2840:47:18;;:87;;-1:-1:-1;;;;;;;;;;937:40:38;;;2891:36:18;2833:94;2732:202;-1:-1:-1;;2732:202:18:o;1426:722:49:-;1094:13:20;:11;:13::i;:::-;-1:-1:-1;;;;;1545:22:49;::::1;1537:46;;;::::0;-1:-1:-1;;;1537:46:49;;13983:2:56;1537:46:49::1;::::0;::::1;13965:21:56::0;14022:2;14002:18;;;13995:30;-1:-1:-1;;;14041:18:56;;;14034:42;14093:18;;1537:46:49::1;;;;;;;;;-1:-1:-1::0;;;;;1596:23:49;::::1;1592:481;;1640:34;::::0;-1:-1:-1;;;;;1640:26:49;::::1;::::0;:34;::::1;;;::::0;1667:6;;1640:34:::1;::::0;;;1667:6;1640:26;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1592:481;;;1708:7;1719:1;1708:12:::0;1704:359:::1;;1748:43;::::0;-1:-1:-1;;;1748:43:49;;-1:-1:-1;;;;;14314:32:56;;;1748:43:49::1;::::0;::::1;14296:51:56::0;14363:18;;;14356:34;;;1748:26:49;::::1;::::0;::::1;::::0;14269:18:56;;1748:43:49::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1704:359::-;1814:10:::0;;1811:252:::1;;1928:9;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1928:9:49;;1853:85;;-1:-1:-1;;;1853:85:49;;-1:-1:-1;;;;;1853:36:49;::::1;::::0;::::1;::::0;:85:::1;::::0;1898:4:::1;::::0;1904:8;;1913:7;;1921:6;;1928:9;1853:85:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1811:252;;;1985:63;::::0;-1:-1:-1;;;1985:63:49;;2025:4:::1;1985:63;::::0;::::1;16109:34:56::0;-1:-1:-1;;;;;16179:15:56;;;16159:18;;;16152:43;16211:18;;;16204:34;;;1985:31:49;::::1;::::0;::::1;::::0;16044:18:56;;1985:63:49::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1811:252;2087:54;::::0;;2096:10:::1;14296:51:56::0;;14378:2;14363:18;;14356:34;;;-1:-1:-1;;;;;2087:54:49;;::::1;::::0;2117:6;;2087:54;;::::1;::::0;::::1;::::0;14269:18:56;2087:54:49::1;;;;;;;1426:722:::0;;;;:::o;11585:161:47:-;11663:13;;:::i;:::-;11695:35;11709:9;11719:10;11695:13;:35::i;:::-;:44;;;;11585:161;-1:-1:-1;;;11585:161:47:o;1352:360:46:-;1491:9;1501:7;2212:18:48;2233:44;2248:10;2259:9;2269:7;2233:14;:44::i;:::-;2323:10;2287:20;2310:24;;;:12;:24;;;;;;;;:36;;;;;;;;2287:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:36;;-1:-1:-1;2287:20:48;;:59;;2310:36;;2287:59;;;;-1:-1:-1;;;2287:59:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2287:59:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2364:6:48;:12;;;:36;;;;;;;;:::i;:::-;;2356:71;;;;-1:-1:-1;;;2356:71:48;;16451:2:56;2356:71:48;;;16433:21:56;16490:2;16470:18;;;16463:30;-1:-1:-1;;;16509:18:56;;;16502:52;16571:18;;2356:71:48;16249:346:56;2356:71:48;1519:65:46::1;1525:9;1535:7;1543:11;1555:3;1567:4;1573:10;1519:5;:65::i;:::-;1599:14;::::0;::::1;::::0;1595:111:::1;;1629:65;1642:10;1653:9;1663:7;1671:11;1683:10;1629:12;:65::i;:::-;2202:243:48::0;;1352:360:46;;;;;;;:::o;7036:291:47:-;7124:7;7132;7140;7148;7156;7175:15;7193:36;7207:3;7211:9;7221:7;7193:13;:36::i;:::-;7175:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7175:54:47;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7175:54:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7247:14;;7262:12;;;;7275:11;;;;:17;7293:13;;;;7307:12;;;;;7247:14;;7239:81;;;;;-1:-1:-1;7275:17:47;-1:-1:-1;7293:13:47;;-1:-1:-1;7307:12:47;-1:-1:-1;7036:291:47;-1:-1:-1;;;;;7036:291:47:o;4929:145:18:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:18;;719:10:36;6133:23:18;6125:83;;;;-1:-1:-1;;;6125:83:18;;16802:2:56;6125:83:18;;;16784:21:56;16841:2;16821:18;;;16814:30;16880:34;16860:18;;;16853:62;-1:-1:-1;;;16931:18:56;;;16924:45;16986:19;;6125:83:18;16600:411:56;6125:83:18;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;1719:320:47:-;1835:10;2022::48;:15;;2036:1;2022:15;:35;;;;2041:10;:16;;2055:2;2041:16;2022:35;:55;;;;2061:10;:16;;2075:2;2061:16;2022:55;:76;;;;2081:10;:17;;2095:3;2081:17;2022:76;2014:110;;;;-1:-1:-1;;;2014:110:48;;17218:2:56;2014:110:48;;;17200:21:56;17257:2;17237:18;;;17230:30;-1:-1:-1;;;17276:18:56;;;17269:52;17338:18;;2014:110:48;17016:346:56;2014:110:48;1857:9:47::1;1867:7;2212:18:48;2233:44;2248:10;2259:9;2269:7;2233:14;:44::i;:::-;2323:10;2287:20;2310:24:::0;;;:12:::1;:24;::::0;;;;;;;:36;;;;;;;;2287:59;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;2310:36;;-1:-1:-1;2287:20:48;;:59;;2310:36;;2287:59;;;;-1:-1:-1;;;2287:59:48;::::1;;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2287:59:48::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;;;;::::1;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;2364:6:48::1;:12;;;:36;;;;;;;;:::i;:::-;;2356:71;;;::::0;-1:-1:-1;;;2356:71:48;;16451:2:56;2356:71:48::1;::::0;::::1;16433:21:56::0;16490:2;16470:18;;;16463:30;-1:-1:-1;;;16509:18:56;;;16502:52;16571:18;;2356:71:48::1;16249:346:56::0;11412:167:47;11493:13;;:::i;:::-;11525:35;11539:9;11549:10;11525:13;:35::i;:::-;:47;;11412:167;-1:-1:-1;;;11412:167:47:o;6408:368::-;6498:7;6506;6514:6;6521:7;6529;6537;6556:17;6576:33;6587:3;6591:9;6601:7;6576:10;:33::i;:::-;-1:-1:-1;;;;;6638:17:47;;6619:15;6638:17;;;:12;:17;;;;;;;;:28;;;;;;;;6619:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6638:28;;-1:-1:-1;6619:15:47;;:47;;6638:28;;6619:47;;;;-1:-1:-1;;;6619:47:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6619:47:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6684:1;:14;;;6699:1;:11;;;6711:1;:12;;;6724:1;:11;;;:17;;;6742:1;:13;;;6756:1;:12;;;6676:93;;;;;;;;;;;;;;6408:368;;;;;;;;;;:::o;1824:101:20:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;11925:175:47:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;12045:35:47;12059:9;12069:10;12045:13;:35::i;:::-;:48;;;;11925:175;-1:-1:-1;;;11925:175:47:o;3021:145:18:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;;;;3021:145::o;10069:1336:47:-;1353:30:49;527:21;719:10:36;3021:145:18;:::i;1353:30:49:-;1345:55;;;;-1:-1:-1;;;1345:55:49;;17569:2:56;1345:55:49;;;17551:21:56;17608:2;17588:18;;;17581:30;-1:-1:-1;;;17627:18:56;;;17620:43;17680:18;;1345:55:49;17367:337:56;1345:55:49;10255:13:47::1;10271:62;10303:17;;::::0;::::1;:11:::0;:17:::1;:::i;:::-;10321:10;10286:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3178:15:48::0;;;;;;;;3083:117;10271:62:47::1;10402:1;10355:17:::0;;;::::1;::::0;;;;;;:35;10255:78;;-1:-1:-1;;;;;;10355:35:47::1;:49:::0;10347:69:::1;;;::::0;-1:-1:-1;;;10347:69:47;;18245:2:56;10347:69:47::1;::::0;::::1;18227:21:56::0;18284:1;18264:18;;;18257:29;-1:-1:-1;;;18302:18:56;;;18295:38;18350:18;;10347:69:47::1;18043:331:56::0;10347:69:47::1;10456:14;10433:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;:37;;;;;;;;:::i;:::-;;:79;;;-1:-1:-1::0;10497:15:47::1;10474:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;:38;;;;;;;;:::i;:::-;;10433:79;10430:286;;;10643:18;10616:23;;::::0;::::1;:12:::0;:23:::1;:::i;:::-;:45;;;;;;;;:::i;:::-;::::0;10608:93:::1;;;::::0;-1:-1:-1;;;10608:93:47;;19314:2:56;10608:93:47::1;::::0;::::1;19296:21:56::0;19353:2;19333:18;;;19326:30;19392:34;19372:18;;;19365:62;-1:-1:-1;;;19443:18:56;;;19436:34;19487:19;;10608:93:47::1;19112:400:56::0;10608:93:47::1;10891:22;10864:23;;::::0;::::1;:12:::0;:23:::1;:::i;:::-;:49;;;;;;;;:::i;:::-;::::0;10860:180:::1;;10959:17;;::::0;::::1;:11:::0;:17:::1;:::i;:::-;-1:-1:-1::0;;;;;10941:35:47::1;:14;;::::0;::::1;:8:::0;:14:::1;:::i;:::-;-1:-1:-1::0;;;;;10941:35:47::1;;10933:92;;;::::0;-1:-1:-1;;;10933:92:47;;19719:2:56;10933:92:47::1;::::0;::::1;19701:21:56::0;19758:2;19738:18;;;19731:30;19797:34;19777:18;;;19770:62;-1:-1:-1;;;19848:18:56;;;19841:43;19901:19;;10933:92:47::1;19517:409:56::0;10933:92:47::1;11074:229;;;;;;;;11115:11;11074:229;;;;;;;;;;:::i;:::-;::::0;;::::1;;;;::::0;;::::1;::::0;::::1;11154:8:::0;11074:229:::1;:::i;:::-;::::0;;::::1;;;;::::0;;::::1;::::0;::::1;11193:11:::0;11074:229:::1;:::i;:::-;::::0;;::::1;;;;::::0;;::::1;::::0;::::1;11236:12:::0;11074:229:::1;:::i;:::-;::::0;;::::1;::::0;::::1;;::::0;;::::1;::::0;-1:-1:-1;11054:17:47;;;;;;;;;;;:249;;;;;;-1:-1:-1;;;;;;11054:249:47::1;-1:-1:-1::0;;;;;11054:249:47;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;11054:249:47;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;:17;;:249;:17;;-1:-1:-1;;11054:249:47::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;11054:249:47::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;11054:249:47::1;-1:-1:-1::0;;;;;11054:249:47;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;-1:-1:-1;;11054:249:47::1;::::0;-1:-1:-1;;11054:249:47;;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;11054:249:47::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;11054:249:47::1;-1:-1:-1::0;;;;;11054:249:47;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;;11054:249:47::1;-1:-1:-1::0;11054:249:47;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;11054:249:47::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;11054:249:47::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;11054:249:47::1;::::0;;::::1;::::0;;;;::::1;;;;-1:-1:-1::0;;11054:249:47;;::::1;;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;11054:249:47;;::::1;::::0;;;::::1;::::0;;11369:17:::1;::::0;;::::1;:11:::0;:17:::1;:::i;:::-;-1:-1:-1::0;;;;;11323:75:47::1;11354:14;;::::0;::::1;:8:::0;:14:::1;:::i;:::-;-1:-1:-1::0;;;;;11323:75:47::1;11336:17;;::::0;::::1;:11:::0;:17:::1;:::i;:::-;11323:75;::::0;21424:10:56;21412:23;;21394:42;;-1:-1:-1;;;;;11323:75:47;;;::::1;::::0;::::1;::::0;21382:2:56;21367:18;11323:75:47::1;;;;;;;10241:1164;10069:1336:::0;;;;;:::o;11752:167::-;11833:13;;:::i;:::-;11865:35;11879:9;11889:10;11865:13;:35::i;:::-;:47;;;;11752:167;-1:-1:-1;;;11752:167:47:o;6783:246::-;6869:13;;:::i;:::-;6894:17;6914:33;6925:3;6929:9;6939:7;6914:10;:33::i;:::-;-1:-1:-1;;;;;6976:17:47;;6957:15;6976:17;;;:12;:17;;;;;;;;:28;;;;;;;;6957:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6976:28;;-1:-1:-1;6957:15:47;;:47;;6976:28;;6957:47;;;;-1:-1:-1;;;6957:47:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6957:47:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6783:246:47;;;;;;:::o;2451:160:48:-;2530:16;;:::i;:::-;2569:35;2583:9;2593:10;2569:13;:35::i;12719:247:47:-;-1:-1:-1;;;12719:247:47;;;;;;;;:::o;3691:608::-;3769:16;3788:45;3802:10;3813:11;3825:7;3788:13;:45::i;:::-;3893:12;;;;3769:64;;-1:-1:-1;3843:21:47;;3867:39;;3881:11;;3893:12;;3867:13;:39::i;:::-;3843:63;-1:-1:-1;3931:20:47;3920:7;;;;;-1:-1:-1;;;3920:7:47;;;;;:31;;;;;;;:::i;:::-;;3916:127;;3987:4;:17;;;:30;;;3979:53;;;;-1:-1:-1;;;3979:53:47;;21649:2:56;3979:53:47;;;21631:21:56;21688:2;21668:18;;;21661:30;-1:-1:-1;;;21707:18:56;;;21700:41;21758:18;;3979:53:47;21447:335:56;3979:53:47;4070:12;;;;4100:10;4092:40;;;;-1:-1:-1;;;4092:40:47;;21989:2:56;4092:40:47;;;21971:21:56;22028:2;22008:18;;;22001:30;-1:-1:-1;;;22047:18:56;;;22040:47;22104:18;;4092:40:47;21787:341:56;4092:40:47;4170:16;;;;;4142:25;4197:12;;;:16;4239:17;;4257:19;;;;4170:16;;4223:69;;4277:7;4285:6;4223:15;:69::i;:::-;3759:540;;;;3691:608;;:::o;5354:147:18:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;2074:198:20:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:20;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:20;;22335:2:56;2154:73:20::1;::::0;::::1;22317:21:56::0;22374:2;22354:18;;;22347:30;22413:34;22393:18;;;22386:62;-1:-1:-1;;;22464:18:56;;;22457:36;22510:19;;2154:73:20::1;22133:402:56::0;2154:73:20::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;3189:252:46:-;1094:13:20;:11;:13::i;:::-;-1:-1:-1;;;;;3262:20:46;::::1;3254:44;;;::::0;-1:-1:-1;;;3254:44:46;;22742:2:56;3254:44:46::1;::::0;::::1;22724:21:56::0;22781:2;22761:18;;;22754:30;-1:-1:-1;;;22800:18:56;;;22793:42;22852:18;;3254:44:46::1;22540:336:56::0;3254:44:46::1;3336:7;::::0;;-1:-1:-1;;;;;3354:24:46;;::::1;-1:-1:-1::0;;;;;;3354:24:46;::::1;::::0;::::1;::::0;;;3393:41:::1;::::0;3336:7;::::1;::::0;;;3406:10:::1;::::0;3393:41:::1;::::0;3308:17:::1;::::0;3393:41:::1;3244:197;3189:252:::0;:::o;4898:1195:47:-;4973:16;4992:42;5006:10;5017:8;5026:7;4992:13;:42::i;:::-;4973:61;-1:-1:-1;5063:19:47;5052:7;;;;;-1:-1:-1;;;5052:7:47;;;;;:30;;;;;;;:::i;:::-;;5044:60;;;;-1:-1:-1;;;5044:60:47;;23083:2:56;5044:60:47;;;23065:21:56;23122:2;23102:18;;;23095:30;-1:-1:-1;;;23141:18:56;;;23134:48;23199:18;;5044:60:47;22881:342:56;5044:60:47;5131:12;;;;;5114:14;5153:16;;;;5249:12;;;;5131;;5114:14;5226:36;;5240:8;;5249:12;;5226:13;:36::i;:::-;5292:16;;:24;;;5348:11;;;:17;5395:19;;;;5202:60;;-1:-1:-1;5292:24:47;;-1:-1:-1;;;;;5348:17:47;;;;5395:19;;5428:10;;5424:93;;5453:53;5469:11;5481:9;5491:7;5499:6;5453:15;:53::i;:::-;5569:13;5556:9;:26;;;;;;;;:::i;:::-;;5552:377;;5598:44;;-1:-1:-1;;;5598:44:47;;5624:10;5598:44;;;14296:51:56;14363:18;;;14356:34;;;-1:-1:-1;;;;;5598:25:47;;;;;14269:18:56;;5598:44:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5552:377;;;5675:14;5662:9;:27;;;;;;;;:::i;:::-;;5658:271;;5705:64;;-1:-1:-1;;;5705:64:47;;5744:4;5705:64;;;16109:34:56;5750:10:47;16159:18:56;;;16152:43;16211:18;;;16204:34;;;-1:-1:-1;;;;;5705:30:47;;;;;16044:18:56;;5705:64:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5658:271;;;5802:14;5789:9;:27;;;;;;;;:::i;:::-;;5785:144;;5908:9;;;;;;;;-1:-1:-1;5908:9:47;;5832:86;;-1:-1:-1;;;5832:86:47;;-1:-1:-1;;;;;5832:35:47;;;;;:86;;5876:4;;5882:10;;5893:7;;5901:6;;5908:9;5832:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5785:144;5987:14;;6002:11;;;:17;6020:13;;;;5944:90;;;23459:25:56;;;23515:2;23500:18;;23493:34;;;;-1:-1:-1;;;;;6002:17:47;;;23543:18:56;;;23536:60;23627:2;23612:18;;23605:34;5944:90:47;;;5959:10;;5944:90;;23446:3:56;23431:19;5944:90:47;;;;;;;6044:42;6058:10;6069:8;6078:7;6044:13;:42::i;:::-;4963:1130;;;;;;4898:1195;;:::o;1359:130:20:-;1273:6;;-1:-1:-1;;;;;1273:6:20;719:10:36;1422:23:20;1414:68;;;;-1:-1:-1;;;1414:68:20;;23852:2:56;1414:68:20;;;23834:21:56;;;23871:18;;;23864:30;23930:34;23910:18;;;23903:62;23982:18;;1414:68:20;23650:356:56;2621:229:48;2703:16;;:::i;:::-;2735:13;2751:54;2783:9;2793:10;2766:38;;;;;;;;;:::i;2751:54::-;2826:10;:17;;;;;;;;;;;;2819:24;;;;;;;;;;-1:-1:-1;;;;;2819:24:48;;;;;;;;;;;;;;;;;;;2735:70;;-1:-1:-1;2819:24:48;;2826:17;;2819:24;;2826:17;;2819:24;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2819:24:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2819:24:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2621:229;-1:-1:-1;;;;2621:229:48:o;3206:181::-;3340:39;;-1:-1:-1;;24266:2:56;24262:15;;;24258:24;;3340:39:48;;;24246:37:56;24317:15;;;24313:24;24299:12;;;24292:46;24354:12;;;24347:28;;;3299:7:48;;3325:55;;24391:12:56;;3340:39:48;24011:398:56;3325:55:48;3318:62;3206:181;-1:-1:-1;;;;3206:181:48:o;1720:668:46:-;1916:21;1940:35;1954:9;1964:10;1940:13;:35::i;:::-;1993:16;;:22;1916:59;;-1:-1:-1;;;;;;1993:36:46;1985:70;;;;-1:-1:-1;;;1985:70:46;;24616:2:56;1985:70:46;;;24598:21:56;24655:2;24635:18;;;24628:30;-1:-1:-1;;;24674:18:56;;;24667:52;24736:18;;1985:70:46;24414:346:56;1985:70:46;2073:32;2091:4;:13;;;2073:17;:32::i;:::-;2065:67;;;;-1:-1:-1;;;2065:67:46;;24967:2:56;2065:67:46;;;24949:21:56;25006:2;24986:18;;;24979:30;25045:25;25025:18;;;25018:53;25088:18;;2065:67:46;24765:347:56;2065:67:46;2164:16;;2150:64;;2181:7;2189:11;2201:3;2205:8;2150:13;:64::i;:::-;2142:88;;;;-1:-1:-1;;;2142:88:46;;25319:2:56;2142:88:46;;;25301:21:56;25358:2;25338:18;;;25331:30;-1:-1:-1;;;25377:18:56;;;25370:42;25429:18;;2142:88:46;25117:336:56;2142:88:46;2248:39;2270:4;:16;;;2248:21;:39::i;:::-;2240:75;;;;-1:-1:-1;;;2240:75:46;;25660:2:56;2240:75:46;;;25642:21:56;25699:2;25679:18;;;25672:30;25738:26;25718:18;;;25711:54;25782:18;;2240:75:46;25458:348:56;2240:75:46;2357:7;2347:9;-1:-1:-1;;;;;2330:51:46;;2335:10;2365:11;2377:3;2330:51;;;;;;;;:::i;:::-;;;;;;;;1852:536;1720:668;;;;;;:::o;2806:759:47:-;2933:10;2022::48;:15;;2036:1;2022:15;:35;;;;2041:10;:16;;2055:2;2041:16;2022:35;:55;;;;2061:10;:16;;2075:2;2061:16;2022:55;:76;;;;2081:10;:17;;2095:3;2081:17;2022:76;2014:110;;;;-1:-1:-1;;;2014:110:48;;17218:2:56;2014:110:48;;;17200:21:56;17257:2;17237:18;;;17230:30;-1:-1:-1;;;17276:18:56;;;17269:52;17338:18;;2014:110:48;17016:346:56;2014:110:48;2959:18:47::1;2980:37;2995:3;2999:9;3009:7;2980:14;:37::i;:::-;2959:58;;3031:21;3055:35;3069:9;3079:10;3055:13;:35::i;:::-;3132:16;::::0;;::::1;::::0;3194:292;;::::1;::::0;::::1;::::0;;;;;3313:15:::1;3194:292;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;3031:59;;-1:-1:-1;3194:292:47;;;3264:20:::1;3194:292:::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;3194:292:47;;;;;;;;;;;;;;-1:-1:-1;;;;;3162:17:47;::::1;::::0;;:12:::1;:17:::0;;;;;;:29;;;;;;;;;:324;;;;;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;3162:324:47;::::1;::::0;::::1;::::0;;;;::::1;::::0;:29;;:324;;-1:-1:-1;;3162:324:47;;;-1:-1:-1;;;3162:324:47;;;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;3162:324:47::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;3162:324:47::1;-1:-1:-1::0;;;;;3162:324:47;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;-1:-1:-1;;3162:324:47::1;::::0;-1:-1:-1;;3162:324:47;;;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:10;3506:52;;3522:9;-1:-1:-1::0;;;;;3506:52:47::1;3518:3;-1:-1:-1::0;;;;;3506:52:47::1;;3543:7;3551:6;3506:52;;;;;;26377:25:56::0;;;26433:2;26418:18;;26411:34;26365:2;26350:18;;26203:248;3506:52:47::1;;;;;;;;2945:620;;;2806:759:::0;;;;;;:::o;7333:2160::-;7420:14;7469:17;7489:33;7500:3;7504:9;7514:7;7489:10;:33::i;:::-;-1:-1:-1;;;;;7556:17:47;;7532:21;7556:17;;;:12;:17;;;;;;;;:28;;;;;;;;7469:53;;-1:-1:-1;7602:12:47;;;;;-1:-1:-1;;;7602:12:47;;;;;:36;;;;;;;:::i;:::-;;7594:56;;;;-1:-1:-1;;;7594:56:47;;26658:2:56;7594:56:47;;;26640:21:56;26697:1;26677:18;;;26670:29;-1:-1:-1;;;26715:18:56;;;26708:38;26763:18;;7594:56:47;26456:331:56;7594:56:47;7680:19;7664:12;;;;;-1:-1:-1;;;7664:12:47;;;;;:35;;;;;;;:::i;:::-;;7660:79;;7722:6;-1:-1:-1;7715:13:47;;-1:-1:-1;7715:13:47;7660:79;7768:17;;;;;;7748;7887:26;7768:17;7907:6;7887:26;:::i;:::-;7868:45;;:6;:16;;;:45;;;;:::i;:::-;7849:64;;7924:16;7977:8;7958:15;:27;7954:222;;-1:-1:-1;8060:19:47;8045:12;;:34;;-1:-1:-1;;8045:34:47;;;;;8001:21;;;7954:222;;;8159:6;8139;:16;;;8121:15;:34;;;;:::i;:::-;8120:45;;;;:::i;:::-;8109:56;;7954:222;8315:17;;;;8238:14;;;;8291:42;;8305:9;;8315:17;;8291:13;:42::i;:::-;8378:17;;;;8267:66;;-1:-1:-1;8343:32:47;8409:23;;:45;;;;;;;;:::i;:::-;;8405:846;;8633:19;;8653:16;;;:22;8676:19;;;;8614:91;;8623:9;;8633:19;;-1:-1:-1;;;;;8653:22:47;;;;8696:8;8614;:91::i;:::-;8605:100;;8405:846;;;8835:19;8808:23;;:46;;;;;;;;:::i;:::-;;8804:447;;8899:19;;;;8888:30;;:8;:30;:::i;8804:447::-;8965:22;8938:23;;:49;;;;;;;;:::i;:::-;;8934:317;;9045:23;;;;9029:13;9087:10;;;9083:75;;-1:-1:-1;9123:13:47;;;;:20;;;9083:75;9199:19;;;;229:5:48;;9180:16:47;9191:5;9180:8;:16;:::i;:::-;:38;;;;:::i;:::-;:60;;;;:::i;:::-;9171:69;;8988:263;8934:317;9311:18;;;;9290;9353:19;9311:18;9353:6;:19;:::i;:::-;9339:33;;9423:6;9402;:18;;:27;;;;9460:3;9439:6;:17;;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;9480:6:47;;7333:2160;-1:-1:-1;;;;;;;;;;;;;;7333:2160:47:o;3460:103:18:-;3526:30;3537:4;719:10:36;3526::18;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;7740:4;7708:36;;;7790:12;719:10:36;;640:96;7790:12:18;-1:-1:-1;;;;;7763:40:18;7781:7;-1:-1:-1;;;;;7763:40:18;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:18;;;;;;;;;;:37;;-1:-1:-1;;8112:37:18;;;8168:40;719:10:36;;8112:12:18;;8168:40;;8144:5;8168:40;7991:234;;:::o;1331:159:47:-;1420:7;1446:37;1461:3;1465:9;1475:7;1446:14;:37::i;2426:187:20:-;2518:6;;;-1:-1:-1;;;;;2534:17:20;;;-1:-1:-1;;;;;;2534:17:20;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;4307:548:47:-;4467:13;4454:9;:26;;;;;;;;:::i;:::-;;4450:331;;4496:45;;-1:-1:-1;;;4496:45:47;;4518:10;4496:45;;;14296:51:56;14363:18;;;14356:34;;;-1:-1:-1;;;;;4496:21:47;;;;;14269:18:56;;4496:45:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4450:331;;;4574:14;4561:9;:27;;;;;;;;:::i;:::-;;4557:224;;4604:45;;-1:-1:-1;;;4604:45:47;;4627:10;4604:45;;;28076:51:56;28143:18;;;28136:34;;;28206:2;28186:18;;;28179:30;-1:-1:-1;28225:18:56;;;28218:29;-1:-1:-1;;;;;4604:22:47;;;;;28264:19:56;;4604:45:47;27836:453:56;4557:224:47;4682:14;4669:9;:27;;;;;;;;:::i;:::-;;4665:116;;4712:58;;-1:-1:-1;;;4712:58:47;;4736:10;4712:58;;;28562:51:56;28629:18;;;28622:34;;;28672:18;;;28665:34;;;28735:3;28715:18;;;28708:31;-1:-1:-1;28755:19:56;;;28748:30;-1:-1:-1;;;;;4712:23:47;;;;;28795:19:56;;4712:58:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4665:116;4797:51;;4836:11;;-1:-1:-1;;;;;4797:51:47;;;4812:10;;4797:51;;;;;4307:548;;;;:::o;6099:194::-;6188:17;6208:32;6219:3;6223:8;6232:7;6208:10;:32::i;:::-;-1:-1:-1;;;;;6258:17:47;;;;;;;:12;:17;;;;;;;;:28;;;;;;;;;6251:35;;;;;;;;;;;;;;-1:-1:-1;;6251:35:47;;;;;;;;-1:-1:-1;;;;;;6251:35:47;;;;;;;;;;;;;;-1:-1:-1;;6251:35:47;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6099:194:47:o;2413:769:46:-;2481:4;2500:8;:15;;;2519:1;2500:20;2496:71;;-1:-1:-1;2553:4:46;;2413:769;-1:-1:-1;2413:769:46:o;2496:71::-;2579:14;;-1:-1:-1;;;;;2579:28:46;;:63;;;;-1:-1:-1;2631:11:46;2611:8;:16;;;:31;;;;;;;;:::i;:::-;;2579:63;2575:468;;;2691:8;:15;;;2678:9;:28;;2670:58;;;;-1:-1:-1;;;2670:58:46;;29027:2:56;2670:58:46;;;29009:21:56;29066:2;29046:18;;;29039:30;-1:-1:-1;;;29085:18:56;;;29078:48;29143:18;;2670:58:46;28825:342:56;2670:58:46;2575:468;;;2844:14;;2898:15;;;;2837:77;;-1:-1:-1;;;2837:77:46;;2873:10;2837:77;;;16109:34:56;2892:4:46;16159:18:56;;;16152:43;16211:18;;;16204:34;;;;-1:-1:-1;;;;;2837:35:46;;;;;;16044:18:56;;2837:77:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2829:126;;;;-1:-1:-1;;;2829:126:46;;29374:2:56;2829:126:46;;;29356:21:56;29413:2;29393:18;;;29386:30;29452:34;29432:18;;;29425:62;-1:-1:-1;;;29503:18:56;;;29496:35;29548:19;;2829:126:46;29172:401:56;2829:126:46;2976:14;;3008:7;;;3017:15;;;;2969:64;;-1:-1:-1;;;2969:64:46;;-1:-1:-1;;;;;3008:7:46;;;2969:64;;;14296:51:56;;;;14363:18;;;14356:34;2969:30:46;;;;;;14269:18:56;;2969:64:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2575:468;3059:7;;;3099:14;;3114:15;;;;3059:71;;-1:-1:-1;;;3059:71:46;;-1:-1:-1;;;;;14314:32:56;;;3059:71:46;;;14296:51:56;;;;14363:18;;;14356:34;3059:7:46;;:21;;3088:9;;14269:18:56;;3059:71:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3051:104;;;;-1:-1:-1;;;3051:104:46;;29780:2:56;3051:104:46;;;29762:21:56;29819:2;29799:18;;;29792:30;-1:-1:-1;;;29838:18:56;;;29831:51;29899:18;;3051:104:46;29578:345:56;3051:104:46;-1:-1:-1;3171:4:46;;2413:769;-1:-1:-1;2413:769:46:o;3466:571::-;3597:4;3638:13;3617:9;:17;;;:34;;;;;;;;:::i;:::-;;3613:397;;3671:15;;3667:42;;-1:-1:-1;;;3667:42:46;;-1:-1:-1;;;;;14314:32:56;;;3667:42:46;;;14296:51:56;14363:18;;;14356:34;;;3667:25:46;;;;;;14269:18:56;;3667:42:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3613:397;;;3750:14;3729:9;:17;;;:35;;;;;;;;:::i;:::-;;3725:285;;3785:15;;3780:48;;-1:-1:-1;;;3780:48:46;;-1:-1:-1;;;;;3780:26:46;;;;;;:48;;3807:8;;3816:7;;3824:3;;3780:48;;;:::i;3725:285::-;3870:15;3849:9;:17;;;:36;;;;;;;;:::i;:::-;;3845:165;;3907:15;;3901:56;;-1:-1:-1;;;3901:56:46;;-1:-1:-1;;;;;3901:27:46;;;;;;:56;;3929:8;;3938:7;;3946:6;;3953:3;;3901:56;;;:::i;3845:165::-;-1:-1:-1;3994:5:46;3987:12;;3845:165;-1:-1:-1;4026:4:46;3466:571;;;;;;;:::o;4063:772::-;4137:4;4158:10;:17;;;4179:1;4158:22;4154:79;;-1:-1:-1;4219:4:46;;4063:772;-1:-1:-1;4063:772:46:o;4154:79::-;4245:16;;-1:-1:-1;;;;;4245:30:46;;:67;;;;-1:-1:-1;4301:11:46;4279:10;:18;;;:33;;;;;;;;:::i;:::-;;4245:67;4241:568;;;4361:10;:17;;;4348:9;:30;;4340:69;;;;-1:-1:-1;;;4340:69:46;;30595:2:56;4340:69:46;;;30577:21:56;30634:2;30614:18;;;30607:30;30673:29;30653:18;;;30646:57;30720:18;;4340:69:46;30393:351:56;4340:69:46;4503:17;;;;4484:37;;4459:10;;;;4484:37;;;;;4503:17;4423:25;4484:37;4423:25;4484:37;4503:17;4459:10;4484:37;;;;;;;;;;;;;;;;;;;;;4314:217;4241:568;;;4747:16;;4781:17;;;;4743:56;;-1:-1:-1;;;4743:56:46;;4770:10;4743:56;;;14296:51:56;14363:18;;;14356:34;;;;-1:-1:-1;;;;;4743:26:46;;;;;;14269:18:56;;4743:56:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4824:4:46;;4063:772;-1:-1:-1;4063:772:46:o;9500:559:47:-;9619:7;9639:15;9663:8;-1:-1:-1;;;;;9657:24:47;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9639:44;;;;9694:15;9718:8;-1:-1:-1;;;;;9712:24:47;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9694:44;;;-1:-1:-1;9753:20:47;;;;;;9749:106;;229:5:48;9816:4:47;9797:16;9809:4;9797:9;:16;:::i;:::-;:23;;;;:::i;:::-;9796:47;;;;:::i;:::-;9789:54;;;;;;9749:106;9938:11;10018:12;10022:8;10018:2;:12;:::i;:::-;229:5:48;9980:12:47;9984:8;9980:2;:12;:::i;:::-;9972:4;9953:16;9960:9;9953:4;:16;:::i;:::-;:23;;;;:::i;:::-;:40;;;;:::i;:::-;:62;;;;:::i;:::-;9952:79;;;;:::i;:::-;9938:93;9500:559;-1:-1:-1;;;;;;;;;9500:559:47:o;3844:479:18:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:18;;;;;;;;;;-1:-1:-1;;;3970:336:18;;;;;;;:::i;2407:149:37:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:37;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:37;;1918:47;;-1:-1:-1;;;1975:6:37;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:37;;;;;;;;;-1:-1:-1;;;2000:6:37;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:37;;;;;;;;-1:-1:-1;2030:9:37;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:37;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:37;;;;;;;;-1:-1:-1;2141:1:37;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:37;;2162:55;;;;-1:-1:-1;;;2162:55:37;;33933:2:56;2162:55:37;;;33915:21:56;;;33952:18;;;33945:30;34011:34;33991:18;;;33984:62;34063:18;;2162:55:37;33731:356:56;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:56:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:56;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:56;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:275;878:2;872:9;943:2;924:13;;-1:-1:-1;;920:27:56;908:40;;978:18;963:34;;999:22;;;960:62;957:88;;;1025:18;;:::i;:::-;1061:2;1054:22;807:275;;-1:-1:-1;807:275:56:o;1087:530::-;1129:5;1182:3;1175:4;1167:6;1163:17;1159:27;1149:55;;1200:1;1197;1190:12;1149:55;1236:6;1223:20;1262:18;1258:2;1255:26;1252:52;;;1284:18;;:::i;:::-;1328:55;1371:2;1352:13;;-1:-1:-1;;1348:27:56;1377:4;1344:38;1328:55;:::i;:::-;1408:2;1399:7;1392:19;1454:3;1447:4;1442:2;1434:6;1430:15;1426:26;1423:35;1420:55;;;1471:1;1468;1461:12;1420:55;1536:2;1529:4;1521:6;1517:17;1510:4;1501:7;1497:18;1484:55;1584:1;1559:16;;;1577:4;1555:27;1548:38;;;;1563:7;1087:530;-1:-1:-1;;;1087:530:56:o;1622:537::-;1717:6;1725;1733;1741;1794:3;1782:9;1773:7;1769:23;1765:33;1762:53;;;1811:1;1808;1801:12;1762:53;1834:29;1853:9;1834:29;:::i;:::-;1824:39;;1882:38;1916:2;1905:9;1901:18;1882:38;:::i;:::-;1872:48;;1967:2;1956:9;1952:18;1939:32;1929:42;;2022:2;2011:9;2007:18;1994:32;2049:18;2041:6;2038:30;2035:50;;;2081:1;2078;2071:12;2035:50;2104:49;2145:7;2136:6;2125:9;2121:22;2104:49;:::i;:::-;2094:59;;;1622:537;;;;;;;:::o;2371:397::-;2457:6;2465;2473;2481;2534:3;2522:9;2513:7;2509:23;2505:33;2502:53;;;2551:1;2548;2541:12;2502:53;2574:29;2593:9;2574:29;:::i;:::-;2564:39;;2650:2;2639:9;2635:18;2622:32;2612:42;;2701:2;2690:9;2686:18;2673:32;2663:42;;2724:38;2758:2;2747:9;2743:18;2724:38;:::i;:::-;2714:48;;2371:397;;;;;;;:::o;2773:163::-;2840:20;;2900:10;2889:22;;2879:33;;2869:61;;2926:1;2923;2916:12;2941:258;3008:6;3016;3069:2;3057:9;3048:7;3044:23;3040:32;3037:52;;;3085:1;3082;3075:12;3037:52;3108:29;3127:9;3108:29;:::i;:::-;3098:39;;3156:37;3189:2;3178:9;3174:18;3156:37;:::i;:::-;3146:47;;2941:258;;;;;:::o;3204:127::-;3265:10;3260:3;3256:20;3253:1;3246:31;3296:4;3293:1;3286:15;3320:4;3317:1;3310:15;3336:388;3412:12;;-1:-1:-1;;;;;3408:38:56;3396:51;;3496:4;3485:16;;;3479:23;3463:14;;;3456:47;3549:4;3538:16;;3532:23;3591:1;3574:19;;3564:53;;3597:18;;:::i;:::-;3642:4;3633:14;;3626:36;3711:4;3700:16;;;3694:23;3678:14;;3671:47;3336:388::o;3729:246::-;3913:3;3898:19;;3926:43;3902:9;3951:6;3926:43;:::i;3980:180::-;4039:6;4092:2;4080:9;4071:7;4067:23;4063:32;4060:52;;;4108:1;4105;4098:12;4060:52;-1:-1:-1;4131:23:56;;3980:180;-1:-1:-1;3980:180:56:o;4347:605::-;4451:6;4459;4467;4475;4483;4536:3;4524:9;4515:7;4511:23;4507:33;4504:53;;;4553:1;4550;4543:12;4504:53;4576:29;4595:9;4576:29;:::i;:::-;4566:39;;4652:2;4641:9;4637:18;4624:32;4614:42;;4703:2;4692:9;4688:18;4675:32;4665:42;;4758:2;4747:9;4743:18;4730:32;4785:18;4777:6;4774:30;4771:50;;;4817:1;4814;4807:12;4771:50;4840:49;4881:7;4872:6;4861:9;4857:22;4840:49;:::i;:::-;4830:59;;;4908:38;4941:3;4930:9;4926:19;4908:38;:::i;:::-;4898:48;;4347:605;;;;;;;;:::o;4957:328::-;5034:6;5042;5050;5103:2;5091:9;5082:7;5078:23;5074:32;5071:52;;;5119:1;5116;5109:12;5071:52;5142:29;5161:9;5142:29;:::i;:::-;5132:39;;5190:38;5224:2;5213:9;5209:18;5190:38;:::i;:::-;5180:48;;5275:2;5264:9;5260:18;5247:32;5237:42;;4957:328;;;;;:::o;5784:254::-;5852:6;5860;5913:2;5901:9;5892:7;5888:23;5884:32;5881:52;;;5929:1;5926;5919:12;5881:52;5965:9;5952:23;5942:33;;5994:38;6028:2;6017:9;6013:18;5994:38;:::i;6225:395::-;6310:6;6318;6326;6334;6387:3;6375:9;6366:7;6362:23;6358:33;6355:53;;;6404:1;6401;6394:12;6355:53;6427:29;6446:9;6427:29;:::i;:::-;6417:39;;6503:2;6492:9;6488:18;6475:32;6465:42;;6554:2;6543:9;6539:18;6526:32;6516:42;;6577:37;6610:2;6599:9;6595:18;6577:37;:::i;7206:115::-;7289:1;7282:5;7279:12;7269:46;;7295:18;;:::i;7326:291::-;7408:5;7402:12;7423:36;7456:2;7423:36;:::i;:::-;7468:15;;7546:4;7535:16;;;7529:23;7522:31;7515:39;7499:14;;;7492:63;7604:4;7593:16;;;7587:23;7571:14;;7564:47;7326:291::o;7622:263::-;7818:2;7803:18;;7830:49;7807:9;7861:6;7830:49;:::i;8098:155::-;8157:5;8202:3;8193:6;8188:3;8184:16;8180:26;8177:46;;;8219:1;8216;8209:12;8177:46;-1:-1:-1;8241:6:56;8098:155;-1:-1:-1;8098:155:56:o;8258:727::-;8466:6;8474;8482;8490;8498;8542:9;8533:7;8529:23;8572:3;8568:2;8564:12;8561:32;;;8589:1;8586;8579:12;8561:32;8612:53;8657:7;8646:9;8612:53;:::i;:::-;8602:63;;8684;8739:7;8733:3;8722:9;8718:19;8684:63;:::i;:::-;8674:73;;8766:63;8821:7;8815:3;8804:9;8800:19;8766:63;:::i;:::-;8756:73;-1:-1:-1;8864:2:56;-1:-1:-1;;8845:17:56;;8841:26;8838:46;;;8880:1;8877;8870:12;8838:46;;8918:3;8907:9;8903:19;8893:29;;8941:38;8974:3;8963:9;8959:19;8941:38;:::i;8990:793::-;9132:4;9174:3;9163:9;9159:19;9151:27;;9211:6;9205:13;9194:9;9187:32;9275:4;9267:6;9263:17;9257:24;9250:4;9239:9;9235:20;9228:54;9350:10;9342:4;9334:6;9330:17;9324:24;9320:41;9313:4;9302:9;9298:20;9291:71;9409:4;9401:6;9397:17;9391:24;9424:46;9457:12;9424:46;:::i;:::-;9508:12;9501:4;9490:9;9486:20;9479:42;;9570:4;9562:6;9558:17;9552:24;9585:62;9641:4;9630:9;9626:20;9610:14;9585:62;:::i;:::-;-1:-1:-1;9705:4:56;9693:17;;9687:24;9678:6;9663:22;;9656:56;9770:4;9758:17;;;9752:24;9743:6;9728:22;;;9721:56;8990:793;:::o;9788:725::-;9936:4;9978:3;9967:9;9963:19;9955:27;;9991:50;10031:9;10022:6;10016:13;9991:50;:::i;:::-;10088:4;10080:6;10076:17;10070:24;10103:60;10157:4;10146:9;10142:20;10128:12;10103:60;:::i;:::-;;10212:4;10204:6;10200:17;10194:24;10227:64;10283:6;10272:9;10268:22;10252:14;10227:64;:::i;:::-;;10340:4;10332:6;10328:17;10322:24;10355:70;10417:6;10406:9;10402:22;10386:14;10355:70;:::i;:::-;;10495:10;10487:4;10479:6;10475:17;10469:24;10465:41;10456:6;10445:9;10441:22;10434:73;9788:725;;;;:::o;10518:532::-;10614:6;10622;10630;10638;10691:3;10679:9;10670:7;10666:23;10662:33;10659:53;;;10708:1;10705;10698:12;10659:53;10731:29;10750:9;10731:29;:::i;:::-;10721:39;;10807:2;10796:9;10792:18;10779:32;10769:42;;10858:2;10847:9;10843:18;10830:32;10820:42;;10913:2;10902:9;10898:18;10885:32;10940:18;10932:6;10929:30;10926:50;;;10972:1;10969;10962:12;11055:712;11109:5;11162:3;11155:4;11147:6;11143:17;11139:27;11129:55;;11180:1;11177;11170:12;11129:55;11216:6;11203:20;11242:4;11265:18;11261:2;11258:26;11255:52;;;11287:18;;:::i;:::-;11333:2;11330:1;11326:10;11356:28;11380:2;11376;11372:11;11356:28;:::i;:::-;11418:15;;;11488;;;11484:24;;;11449:12;;;;11520:15;;;11517:35;;;11548:1;11545;11538:12;11517:35;11584:2;11576:6;11572:15;11561:26;;11596:142;11612:6;11607:3;11604:15;11596:142;;;11678:17;;11666:30;;11629:12;;;;11716;;;;11596:142;;;11756:5;11055:712;-1:-1:-1;;;;;;;11055:712:56:o;11772:943::-;11926:6;11934;11942;11950;11958;12011:3;11999:9;11990:7;11986:23;11982:33;11979:53;;;12028:1;12025;12018:12;11979:53;12051:29;12070:9;12051:29;:::i;:::-;12041:39;;12099:38;12133:2;12122:9;12118:18;12099:38;:::i;:::-;12089:48;;12188:2;12177:9;12173:18;12160:32;12211:18;12252:2;12244:6;12241:14;12238:34;;;12268:1;12265;12258:12;12238:34;12291:61;12344:7;12335:6;12324:9;12320:22;12291:61;:::i;:::-;12281:71;;12405:2;12394:9;12390:18;12377:32;12361:48;;12434:2;12424:8;12421:16;12418:36;;;12450:1;12447;12440:12;12418:36;12473:63;12528:7;12517:8;12506:9;12502:24;12473:63;:::i;:::-;12463:73;;12589:3;12578:9;12574:19;12561:33;12545:49;;12619:2;12609:8;12606:16;12603:36;;;12635:1;12632;12625:12;12603:36;;12658:51;12701:7;12690:8;12679:9;12675:24;12658:51;:::i;:::-;12648:61;;;11772:943;;;;;;;;:::o;12720:254::-;12788:6;12796;12849:2;12837:9;12828:7;12824:23;12820:32;12817:52;;;12865:1;12862;12855:12;12817:52;12888:29;12907:9;12888:29;:::i;:::-;12878:39;12964:2;12949:18;;;;12936:32;;-1:-1:-1;;;12720:254:56:o;12979:606::-;13083:6;13091;13099;13107;13115;13168:3;13156:9;13147:7;13143:23;13139:33;13136:53;;;13185:1;13182;13175:12;13136:53;13208:29;13227:9;13208:29;:::i;:::-;13198:39;;13256:38;13290:2;13279:9;13275:18;13256:38;:::i;:::-;13246:48;;13341:2;13330:9;13326:18;13313:32;13303:42;;13392:2;13381:9;13377:18;13364:32;13354:42;;13447:3;13436:9;13432:19;13419:33;13475:18;13467:6;13464:30;13461:50;;;13507:1;13504;13497:12;13461:50;13530:49;13571:7;13562:6;13551:9;13547:22;13530:49;:::i;13590:186::-;13649:6;13702:2;13690:9;13681:7;13677:23;13673:32;13670:52;;;13718:1;13715;13708:12;13670:52;13741:29;13760:9;13741:29;:::i;14401:118::-;14487:5;14480:13;14473:21;14466:5;14463:32;14453:60;;14509:1;14506;14499:12;14524:245;14591:6;14644:2;14632:9;14623:7;14619:23;14615:32;14612:52;;;14660:1;14657;14650:12;14612:52;14692:9;14686:16;14711:28;14733:5;14711:28;:::i;14774:250::-;14859:1;14869:113;14883:6;14880:1;14877:13;14869:113;;;14959:11;;;14953:18;14940:11;;;14933:39;14905:2;14898:10;14869:113;;;-1:-1:-1;;15016:1:56;14998:16;;14991:27;14774:250::o;15029:270::-;15070:3;15108:5;15102:12;15135:6;15130:3;15123:19;15151:76;15220:6;15213:4;15208:3;15204:14;15197:4;15190:5;15186:16;15151:76;:::i;:::-;15281:2;15260:15;-1:-1:-1;;15256:29:56;15247:39;;;;15288:4;15243:50;;15029:270;-1:-1:-1;;15029:270:56:o;15304:560::-;-1:-1:-1;;;;;15601:15:56;;;15583:34;;15653:15;;15648:2;15633:18;;15626:43;15700:2;15685:18;;15678:34;;;15743:2;15728:18;;15721:34;;;15563:3;15786;15771:19;;15764:32;;;15526:4;;15813:45;;15838:19;;15830:6;15813:45;:::i;17709:329::-;17884:2;17880:15;;;;-1:-1:-1;;17876:53:56;17864:66;;17986:3;17964:16;-1:-1:-1;;;;;;17960:43:56;17955:2;17946:12;;17939:65;18029:2;18020:12;;17709:329::o;18379:148::-;18452:20;;18501:1;18491:12;;18481:40;;18517:1;18514;18507:12;18532:204;18604:6;18657:2;18645:9;18636:7;18632:23;18628:32;18625:52;;;18673:1;18670;18663:12;18625:52;18696:34;18720:9;18696:34;:::i;18741:151::-;18817:20;;18866:1;18856:12;;18846:40;;18882:1;18879;18872:12;18897:210;18972:6;19025:2;19013:9;19004:7;19000:23;18996:32;18993:52;;;19041:1;19038;19031:12;18993:52;19064:37;19091:9;19064:37;:::i;19931:655::-;20015:6;20068:3;20056:9;20047:7;20043:23;20039:33;20036:53;;;20085:1;20082;20075:12;20036:53;20118:2;20112:9;20160:3;20152:6;20148:16;20230:6;20218:10;20215:22;20194:18;20182:10;20179:34;20176:62;20173:88;;;20241:18;;:::i;:::-;20277:2;20270:22;20316:29;20335:9;20316:29;:::i;:::-;20308:6;20301:45;20407:2;20396:9;20392:18;20379:32;20374:2;20366:6;20362:15;20355:57;20445:43;20484:2;20473:9;20469:18;20445:43;:::i;:::-;20440:2;20432:6;20428:15;20421:68;20550:2;20539:9;20535:18;20522:32;20517:2;20509:6;20505:15;20498:57;20574:6;20564:16;;;19931:655;;;;:::o;20591:654::-;20681:6;20734:2;20722:9;20713:7;20709:23;20705:32;20702:52;;;20750:1;20747;20740:12;20702:52;20783:2;20777:9;20825:2;20817:6;20813:15;20894:6;20882:10;20879:22;20858:18;20846:10;20843:34;20840:62;20837:88;;;20905:18;;:::i;:::-;20941:2;20934:22;20980:37;21007:9;20980:37;:::i;:::-;20972:6;20965:53;21068:2;21057:9;21053:18;21040:32;21081:28;21103:5;21081:28;:::i;:::-;21137:2;21125:15;;21118:30;21209:2;21194:18;;;21181:32;21164:15;;;21157:57;;;;-1:-1:-1;21129:6:56;20591:654;-1:-1:-1;20591:654:56:o;25811:387::-;26045:1;26041;26036:3;26032:11;26028:19;26020:6;26016:32;26005:9;25998:51;26085:6;26080:2;26069:9;26065:18;26058:34;26128:2;26123;26112:9;26108:18;26101:30;25979:4;26148:44;26188:2;26177:9;26173:18;26165:6;26148:44;:::i;26792:127::-;26853:10;26848:3;26844:20;26841:1;26834:31;26884:4;26881:1;26874:15;26908:4;26905:1;26898:15;26924:249;26995:10;27037;;;27049;;;27033:27;27080:20;;;;26995:10;27119:24;;;27109:58;;27147:18;;:::i;:::-;27109:58;;26924:249;;;;:::o;27178:125::-;27243:9;;;27264:10;;;27261:36;;;27277:18;;:::i;27308:128::-;27375:9;;;27396:11;;;27393:37;;;27410:18;;:::i;27441:217::-;27481:1;27507;27497:132;;27551:10;27546:3;27542:20;27539:1;27532:31;27586:4;27583:1;27576:15;27614:4;27611:1;27604:15;27497:132;-1:-1:-1;27643:9:56;;27441:217::o;27663:168::-;27736:9;;;27767;;27784:15;;;27778:22;;27764:37;27754:71;;27805:18;;:::i;29928:460::-;30190:1;30186;30181:3;30177:11;30173:19;30165:6;30161:32;30150:9;30143:51;30230:6;30225:2;30214:9;30210:18;30203:34;30273:6;30268:2;30257:9;30253:18;30246:34;30316:3;30311:2;30300:9;30296:18;30289:31;30124:4;30337:45;30377:3;30366:9;30362:19;30354:6;30337:45;:::i;:::-;30329:53;29928:460;-1:-1:-1;;;;;;29928:460:56:o;30749:273::-;30817:6;30870:2;30858:9;30849:7;30845:23;30841:32;30838:52;;;30886:1;30883;30876:12;30838:52;30918:9;30912:16;30968:4;30961:5;30957:16;30950:5;30947:27;30937:55;;30988:1;30985;30978:12;31027:422;31116:1;31159:5;31116:1;31173:270;31194:7;31184:8;31181:21;31173:270;;;31253:4;31249:1;31245:6;31241:17;31235:4;31232:27;31229:53;;;31262:18;;:::i;:::-;31312:7;31302:8;31298:22;31295:55;;;31332:16;;;;31295:55;31411:22;;;;31371:15;;;;31173:270;;;31177:3;31027:422;;;;;:::o;31454:806::-;31503:5;31533:8;31523:80;;-1:-1:-1;31574:1:56;31588:5;;31523:80;31622:4;31612:76;;-1:-1:-1;31659:1:56;31673:5;;31612:76;31704:4;31722:1;31717:59;;;;31790:1;31785:130;;;;31697:218;;31717:59;31747:1;31738:10;;31761:5;;;31785:130;31822:3;31812:8;31809:17;31806:43;;;31829:18;;:::i;:::-;-1:-1:-1;;31885:1:56;31871:16;;31900:5;;31697:218;;31999:2;31989:8;31986:16;31980:3;31974:4;31971:13;31967:36;31961:2;31951:8;31948:16;31943:2;31937:4;31934:12;31930:35;31927:77;31924:159;;;-1:-1:-1;32036:19:56;;;32068:5;;31924:159;32115:34;32140:8;32134:4;32115:34;:::i;:::-;32185:6;32181:1;32177:6;32173:19;32164:7;32161:32;32158:58;;;32196:18;;:::i;:::-;32234:20;;31454:806;-1:-1:-1;;;31454:806:56:o;32265:147::-;32324:5;32353:53;32394:10;32384:8;32380:25;32374:4;32353:53;:::i;32417:812::-;32828:25;32823:3;32816:38;32798:3;32883:6;32877:13;32899:75;32967:6;32962:2;32957:3;32953:12;32946:4;32938:6;32934:17;32899:75;:::i;:::-;-1:-1:-1;;;33033:2:56;32993:16;;;33025:11;;;33018:40;33083:13;;33105:76;33083:13;33167:2;33159:11;;33152:4;33140:17;;33105:76;:::i;:::-;33201:17;33220:2;33197:26;;32417:812;-1:-1:-1;;;;32417:812:56:o;33234:219::-;33383:2;33372:9;33365:21;33346:4;33403:44;33443:2;33432:9;33428:18;33420:6;33403:44;:::i;33458:127::-;33519:10;33514:3;33510:20;33507:1;33500:31;33550:4;33547:1;33540:15;33574:4;33571:1;33564:15;33590:136;33629:3;33657:5;33647:39;;33666:18;;:::i;:::-;-1:-1:-1;;;33702:18:56;;33590:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MGR_ROLE()": "444bbb54",
    "MINER_ROLE()": "6394f6e6",
    "OWNER_ROLE()": "e58378bb",
    "PLEDGE_RATE_DECIMAILS()": "34771e62",
    "getLatestPledge(address,address,uint256)": "27a99cb1",
    "getPayToken(address,uint32)": "22eb7931",
    "getPledge(address,address,uint256)": "a68aede0",
    "getPledgeCfg(address,uint32)": "ac346a1f",
    "getPledgeInfo(address,address,uint256)": "70dcbfc6",
    "getPledgeReturn(address,uint32)": "8703ba2b",
    "getPledgeToken(address,uint32)": "6c83fc34",
    "getProfitToken(address,uint32)": "9785207e",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "mint(address,uint256,uint256,string)": "bb7fde71",
    "mintPledge(address,uint256,uint256,string,uint32)": "26cbd26b",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "pledgeToken(address,uint256,uint256,uint32)": "59f1da6c",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setPledgeCfg((address,uint256,uint8,uint256),(address,uint256,uint8,uint256),(address,uint256,uint8,uint256),(uint8,bool,uint256),uint32)": "96c817e7",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "updateIncome(address)": "f7c24aa3",
    "withdraw(address,uint256,uint256,address)": "16762eed",
    "withdrawPledge(address,uint256)": "f9dfa79f",
    "withdrawProfit(address,uint256)": "d35c9a07"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"incAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PledgeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pledgeAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"profitAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"SetPledgeCfg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newIncome\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldIncome\",\"type\":\"address\"}],\"name\":\"UpdateIncome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pledgeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"profitToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawPledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"profitToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawProfit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLEDGE_RATE_DECIMAILS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getLatestPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPayToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPledge\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"},{\"internalType\":\"enum Store.PledgeState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"earnToken\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"earnRelease\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earnRemain\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.Pledge\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPledgeCfg\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"pledgeToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"payToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"profitToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"pledgeReturn\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"internalType\":\"struct Store.PledgeCfg\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPledgeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPledgeReturn\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPledgeToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getProfitToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"mintPledge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"pledgeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"pledgeToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"payToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"profitToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"pledgeReturn\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"setPledgeCfg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"income\",\"type\":\"address\"}],\"name\":\"updateIncome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plgToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawPledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pledgeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPledgeInfo(address,address,uint256)\":{\"returns\":{\"_0\":\"\\u8fd4\\u56de(\\u8d28\\u62bc\\u6570\\u91cf\\uff0c\\u8d28\\u62bc\\u65f6\\u95f4\\uff0c\\u5468\\u671f\\uff0c\\u6536\\u76catoken,\\u91ca\\u653e\\u6536\\u76ca,\\u5269\\u4f59\\u53ef\\u63d0\\u53d6\\u6536\\u76ca)\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256,uint256,string)\":{\"details\":\"\\u94f8\\u9020NFT(\\u672c\\u5408\\u7ea6\\u5fc5\\u987b\\u5148\\u6210\\u4e3aNFT\\u5408\\u7ea6miner)\",\"params\":{\"cid\":\"nft cid\",\"tokenAddr\":\"\\u5408\\u7ea6\\u5730\\u5740\",\"tokenAmount\":\"\\u6570\\u91cf\",\"tokenId\":\"tokenId\"}},\"mintPledge(address,uint256,uint256,string,uint32)\":{\"details\":\"\\u94f8\\u9020\\u5e76\\u8d28\\u62bctoken(\\u672c\\u5408\\u7ea6\\u5fc5\\u987b\\u5148\\u6210\\u4e3aNFT\\u5408\\u7ea6miner)\",\"params\":{\"cid\":\"nft cid\",\"pledgeDays\":\"\\u8d28\\u62bc\\u5929\\u6570\",\"tokenAddr\":\"\\u5408\\u7ea6\\u5730\\u5740\",\"tokenAmount\":\"\\u6570\\u91cf\",\"tokenId\":\"tokenId\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pledgeToken(address,uint256,uint256,uint32)\":{\"details\":\"\\u624b\\u52a8\\u8d28\\u62bc\",\"params\":{\"pledgeDays\":\"\\u8d28\\u62bc\\u5929\\u6570\\uff0c\\u652f\\u63017/30/90/180\",\"tokenAddr\":\"\\u8d28\\u62bcToken\\u5730\\u5740\",\"tokenAmount\":\"\\u8d28\\u62bc\\u6570\\u91cf 721 \\u4e3a1\",\"tokenId\":\"\\u8d28\\u62bcTokenId,ERC20 \\u4e3a0\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawProfit(address,uint256)\":{\"details\":\"\\u63d0\\u53d6\\u6536\\u76ca\",\"params\":{\"pledgeToken\":\"\\u88ab\\u8d28\\u62bc\\u7684token\",\"tokenId\":\"\\u8d28\\u62bc\\u7684tokenId,ERC20\\u4e3a0\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Moresol.sol\":\"Moresol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x7783f4c6240b60d2d0815cd71945633690121e4e9dccd0c643facab374b3ab45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8686b4e0cb952c12dbc910cfceb88f43d533e1b272b488ac76583c10302294e4\",\"dweb:/ipfs/QmNYBVoU3oY5mmCiucZ8U9voBKVRnkmuLMnvnQBTBpztjR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52\",\"dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df\",\"dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf\",\"dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Moresol.sol\":{\"keccak256\":\"0xf9dd151a643f5e463df376fa67c5e3c60d749e7401f630939baccb4a19d027ff\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a770f1c22af77c9d125a61ea621919c32af94bbc8994dadb562b29ebb328c50d\",\"dweb:/ipfs/QmRjSALUgeu4xJGPbdeoJwcY6agHYW7vBvNBxHZWuHppAo\"]},\"src/Pledge.sol\":{\"keccak256\":\"0x173e638e7e7fbc4db19b51e8c4aba5fbf45805635892404b3a685d7c3eafbbfe\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9a09b36ef76b0dbe92467e6c6c87b37579b2e03b5087a4a882e8fd811fb3a1a8\",\"dweb:/ipfs/QmSeR7wdL91aYfJHXyErFX8Wte8joquWfv4GTbZVzKfzJG\"]},\"src/Store.sol\":{\"keccak256\":\"0x7a3b7500138f439b8fb40a5e0fc929033be69ca6585ce80480bbecff39a78a3e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77635d403f6fe90a5060bd45427c84fc02e16473f4664b59183adbd9794d2559\",\"dweb:/ipfs/QmZTiYyqX1e69Jo5c91qHU8xAj3shGmwBVjCJP9rj9gVfB\"]},\"src/mgr/Mgr.sol\":{\"keccak256\":\"0x2cc87aeb7b2d14e29e95c900a7a398910767d1d0b293582fc20e62a93e9f9c25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15844fdc2b7f8f26d7bf57f3b9ce061c571922cc58d080c3b2a594df3c893398\",\"dweb:/ipfs/QmSh49aGRrrMLuwHbJTiDtopSoCPQ39SBNSqA3DRXW7J4z\"]},\"src/team/Income.sol\":{\"keccak256\":\"0xf4739ad894ebbbd83d71b0a4ec3ec628ba47d7660a957389eeb7b6f508d37da0\",\"urls\":[\"bzz-raw://0a6a928883135b1f0b9773a247484884c03bde851c205894ca5ea1b4fc6b32d4\",\"dweb:/ipfs/QmTecsXmcBNQsBJU4d9NJFgostSHQxosPe8asktvG9jszi\"]},\"src/token/T1155.sol\":{\"keccak256\":\"0x77a215f8fb53555fd45b63271258feb693ef90fee265aa978cbf467a4e572c50\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1caccee4c6a28f592b3f2e28a21bfce27bf700a9c9687c3c4a908272b0c4e105\",\"dweb:/ipfs/QmZ8v3YhpUAUQ1QCmCFUhwK9pUtD7UwqzW9WAX9R51yo2Z\"]},\"src/token/T20.sol\":{\"keccak256\":\"0x0f971cfba6d78f0f6abb1992bac871ecc110210eab6a2b39175e4ad54f9d3d0b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2c63ed94d14326681ea478b6df28c41d2ff9ccbc3711302c11c649627d92bc25\",\"dweb:/ipfs/QmfUs1Sfd1ErQShoBThyNL5Vh2XBv5HZ9bH1K1weq4pjTC\"]},\"src/token/T721.sol\":{\"keccak256\":\"0x0d5e2c73eeb4d77feab1804b4ae949e37657cd63c46a68c9ab7510704cf75bca\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://31cf266d9fe8f1d852e8f77107d3f52bb4c985c6bfca6caf7989d1b0be2d34e9\",\"dweb:/ipfs/QmVjqzodkZTw4WRRYaJGVXCuJzjpPL5XSTmDMmofMsKMPR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "incAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PledgeToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pledgeAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "profitAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetPledgeCfg",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newIncome",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldIncome",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdateIncome",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "pledgeToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pledgeAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "profitToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "profitAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawPledge",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "profitToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawProfit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OWNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PLEDGE_RATE_DECIMAILS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getLatestPledge",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPayToken",
          "outputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledge",
          "outputs": [
            {
              "internalType": "struct Store.Pledge",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pledgeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "pledgeDays",
                  "type": "uint32"
                },
                {
                  "internalType": "enum Store.PledgeState",
                  "name": "state",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Store.TokenX",
                  "name": "earnToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "earnRelease",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "earnRemain",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeCfg",
          "outputs": [
            {
              "internalType": "struct Store.PledgeCfg",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Store.TokenX",
                  "name": "pledgeToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Store.TokenX",
                  "name": "payToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Store.TokenX",
                  "name": "profitToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Store.PledgeReturn",
                  "name": "pledgeReturn",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum Store.ProfitType",
                      "name": "profitType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "isDayRelease",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "profit",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "pledgeDays",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeReturn",
          "outputs": [
            {
              "internalType": "struct Store.PledgeReturn",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeToken",
          "outputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProfitToken",
          "outputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintPledge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pledgeToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "pledgeToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.TokenX",
              "name": "payToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.TokenX",
              "name": "profitToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.PledgeReturn",
              "name": "pledgeReturn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPledgeCfg"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "income",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateIncome"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "plgToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPledge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pledgeToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawProfit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPledgeInfo(address,address,uint256)": {
            "returns": {
              "_0": "返回(质押数量，质押时间，周期，收益token,释放收益,剩余可提取收益)"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "mint(address,uint256,uint256,string)": {
            "details": "铸造NFT(本合约必须先成为NFT合约miner)",
            "params": {
              "cid": "nft cid",
              "tokenAddr": "合约地址",
              "tokenAmount": "数量",
              "tokenId": "tokenId"
            }
          },
          "mintPledge(address,uint256,uint256,string,uint32)": {
            "details": "铸造并质押token(本合约必须先成为NFT合约miner)",
            "params": {
              "cid": "nft cid",
              "pledgeDays": "质押天数",
              "tokenAddr": "合约地址",
              "tokenAmount": "数量",
              "tokenId": "tokenId"
            }
          },
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155Receiver-onERC1155BatchReceived}."
          },
          "onERC1155Received(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155Receiver-onERC1155Received}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pledgeToken(address,uint256,uint256,uint32)": {
            "details": "手动质押",
            "params": {
              "pledgeDays": "质押天数，支持7/30/90/180",
              "tokenAddr": "质押Token地址",
              "tokenAmount": "质押数量 721 为1",
              "tokenId": "质押TokenId,ERC20 为0"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawProfit(address,uint256)": {
            "details": "提取收益",
            "params": {
              "pledgeToken": "被质押的token",
              "tokenId": "质押的tokenId,ERC20为0"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Moresol.sol": "Moresol"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648",
        "urls": [
          "bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38",
          "dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x7783f4c6240b60d2d0815cd71945633690121e4e9dccd0c643facab374b3ab45",
        "urls": [
          "bzz-raw://8686b4e0cb952c12dbc910cfceb88f43d533e1b272b488ac76583c10302294e4",
          "dweb:/ipfs/QmNYBVoU3oY5mmCiucZ8U9voBKVRnkmuLMnvnQBTBpztjR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39",
        "urls": [
          "bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52",
          "dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
        "keccak256": "0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d",
        "urls": [
          "bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8",
          "dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b",
        "urls": [
          "bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df",
          "dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4",
        "urls": [
          "bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf",
          "dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Moresol.sol": {
        "keccak256": "0xf9dd151a643f5e463df376fa67c5e3c60d749e7401f630939baccb4a19d027ff",
        "urls": [
          "bzz-raw://a770f1c22af77c9d125a61ea621919c32af94bbc8994dadb562b29ebb328c50d",
          "dweb:/ipfs/QmRjSALUgeu4xJGPbdeoJwcY6agHYW7vBvNBxHZWuHppAo"
        ],
        "license": "BUSL-1.1"
      },
      "src/Pledge.sol": {
        "keccak256": "0x173e638e7e7fbc4db19b51e8c4aba5fbf45805635892404b3a685d7c3eafbbfe",
        "urls": [
          "bzz-raw://9a09b36ef76b0dbe92467e6c6c87b37579b2e03b5087a4a882e8fd811fb3a1a8",
          "dweb:/ipfs/QmSeR7wdL91aYfJHXyErFX8Wte8joquWfv4GTbZVzKfzJG"
        ],
        "license": "BUSL-1.1"
      },
      "src/Store.sol": {
        "keccak256": "0x7a3b7500138f439b8fb40a5e0fc929033be69ca6585ce80480bbecff39a78a3e",
        "urls": [
          "bzz-raw://77635d403f6fe90a5060bd45427c84fc02e16473f4664b59183adbd9794d2559",
          "dweb:/ipfs/QmZTiYyqX1e69Jo5c91qHU8xAj3shGmwBVjCJP9rj9gVfB"
        ],
        "license": "BUSL-1.1"
      },
      "src/mgr/Mgr.sol": {
        "keccak256": "0x2cc87aeb7b2d14e29e95c900a7a398910767d1d0b293582fc20e62a93e9f9c25",
        "urls": [
          "bzz-raw://15844fdc2b7f8f26d7bf57f3b9ce061c571922cc58d080c3b2a594df3c893398",
          "dweb:/ipfs/QmSh49aGRrrMLuwHbJTiDtopSoCPQ39SBNSqA3DRXW7J4z"
        ],
        "license": "BUSL-1.1"
      },
      "src/team/Income.sol": {
        "keccak256": "0xf4739ad894ebbbd83d71b0a4ec3ec628ba47d7660a957389eeb7b6f508d37da0",
        "urls": [
          "bzz-raw://0a6a928883135b1f0b9773a247484884c03bde851c205894ca5ea1b4fc6b32d4",
          "dweb:/ipfs/QmTecsXmcBNQsBJU4d9NJFgostSHQxosPe8asktvG9jszi"
        ],
        "license": null
      },
      "src/token/T1155.sol": {
        "keccak256": "0x77a215f8fb53555fd45b63271258feb693ef90fee265aa978cbf467a4e572c50",
        "urls": [
          "bzz-raw://1caccee4c6a28f592b3f2e28a21bfce27bf700a9c9687c3c4a908272b0c4e105",
          "dweb:/ipfs/QmZ8v3YhpUAUQ1QCmCFUhwK9pUtD7UwqzW9WAX9R51yo2Z"
        ],
        "license": "BUSL-1.1"
      },
      "src/token/T20.sol": {
        "keccak256": "0x0f971cfba6d78f0f6abb1992bac871ecc110210eab6a2b39175e4ad54f9d3d0b",
        "urls": [
          "bzz-raw://2c63ed94d14326681ea478b6df28c41d2ff9ccbc3711302c11c649627d92bc25",
          "dweb:/ipfs/QmfUs1Sfd1ErQShoBThyNL5Vh2XBv5HZ9bH1K1weq4pjTC"
        ],
        "license": "BUSL-1.1"
      },
      "src/token/T721.sol": {
        "keccak256": "0x0d5e2c73eeb4d77feab1804b4ae949e37657cd63c46a68c9ab7510704cf75bca",
        "urls": [
          "bzz-raw://31cf266d9fe8f1d852e8f77107d3f52bb4c985c6bfca6caf7989d1b0be2d34e9",
          "dweb:/ipfs/QmVjqzodkZTw4WRRYaJGVXCuJzjpPL5XSTmDMmofMsKMPR"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Moresol.sol",
    "id": 35048,
    "exportedSymbols": {
      "AccessControl": [
        28741
      ],
      "Address": [
        32978
      ],
      "Context": [
        33000
      ],
      "ERC1155": [
        30150
      ],
      "ERC1155Supply": [
        30470
      ],
      "ERC165": [
        33253
      ],
      "ERC20": [
        31072
      ],
      "ERC721": [
        32102
      ],
      "ERC721Enumerable": [
        32590
      ],
      "IAccessControl": [
        28814
      ],
      "IERC1155": [
        30272
      ],
      "IERC1155MetadataURI": [
        30485
      ],
      "IERC1155Receiver": [
        30313
      ],
      "IERC165": [
        33265
      ],
      "IERC20": [
        31150
      ],
      "IERC20Metadata": [
        31175
      ],
      "IERC721": [
        32218
      ],
      "IERC721Enumerable": [
        32621
      ],
      "IERC721Metadata": [
        32648
      ],
      "IERC721Receiver": [
        32236
      ],
      "Income": [
        37098
      ],
      "Math": [
        34131
      ],
      "Mgr": [
        36724
      ],
      "Moresol": [
        35047
      ],
      "Ownable": [
        28927
      ],
      "Pledge": [
        36284
      ],
      "SignedMath": [
        34236
      ],
      "Store": [
        36529
      ],
      "Strings": [
        33229
      ],
      "T1155": [
        37277
      ],
      "T20": [
        37325
      ],
      "T721": [
        37488
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4801:46",
    "nodes": [
      {
        "id": 34601,
        "nodeType": "PragmaDirective",
        "src": "37:24:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 34602,
        "nodeType": "ImportDirective",
        "src": "62:55:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35048,
        "sourceUnit": 31151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34603,
        "nodeType": "ImportDirective",
        "src": "119:22:46",
        "nodes": [],
        "absolutePath": "src/Pledge.sol",
        "file": "./Pledge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35048,
        "sourceUnit": 36285,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34604,
        "nodeType": "ImportDirective",
        "src": "142:26:46",
        "nodes": [],
        "absolutePath": "src/token/T721.sol",
        "file": "./token/T721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35048,
        "sourceUnit": 37489,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34605,
        "nodeType": "ImportDirective",
        "src": "169:25:46",
        "nodes": [],
        "absolutePath": "src/token/T20.sol",
        "file": "./token/T20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35048,
        "sourceUnit": 37326,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34606,
        "nodeType": "ImportDirective",
        "src": "195:27:46",
        "nodes": [],
        "absolutePath": "src/token/T1155.sol",
        "file": "./token/T1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35048,
        "sourceUnit": 37278,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34607,
        "nodeType": "ImportDirective",
        "src": "223:27:46",
        "nodes": [],
        "absolutePath": "src/team/Income.sol",
        "file": "./team/Income.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35048,
        "sourceUnit": 37099,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34608,
        "nodeType": "PragmaDirective",
        "src": "251:19:46",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 35047,
        "nodeType": "ContractDefinition",
        "src": "271:4567:46",
        "nodes": [
          {
            "id": 34613,
            "nodeType": "VariableDeclaration",
            "src": "309:22:46",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_income",
            "nameLocation": "324:7:46",
            "scope": 35047,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Income_$37098",
              "typeString": "contract Income"
            },
            "typeName": {
              "id": 34612,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34611,
                "name": "Income",
                "nameLocations": [
                  "309:6:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37098,
                "src": "309:6:46"
              },
              "referencedDeclaration": 37098,
              "src": "309:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Income_$37098",
                "typeString": "contract Income"
              }
            },
            "visibility": "private"
          },
          {
            "id": 34625,
            "nodeType": "EventDefinition",
            "src": "457:109:46",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ad2943b15836caf43698401a62af4738985fb33dd979844d99d37f5293f037d3",
            "name": "Mint",
            "nameLocation": "463:4:46",
            "parameters": {
              "id": 34624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34615,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "476:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34625,
                  "src": "468:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34617,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "500:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34625,
                  "src": "484:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34619,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "526:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34625,
                  "src": "510:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34621,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "542:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34625,
                  "src": "534:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34623,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "561:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34625,
                  "src": "554:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34622,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:98:46"
            }
          },
          {
            "id": 34633,
            "nodeType": "EventDefinition",
            "src": "571:95:46",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "acfdf2068f2b4dda3f4970ef49a4cad3a0a7735a3badb3577bcabb3a88980738",
            "name": "UpdateIncome",
            "nameLocation": "577:12:46",
            "parameters": {
              "id": 34632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34627,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "606:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34633,
                  "src": "590:22:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34629,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newIncome",
                  "nameLocation": "629:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34633,
                  "src": "613:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34631,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldIncome",
                  "nameLocation": "655:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34633,
                  "src": "639:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:76:46"
            }
          },
          {
            "id": 34645,
            "nodeType": "FunctionDefinition",
            "src": "671:71:46",
            "nodes": [],
            "body": {
              "id": 34644,
              "nodeType": "Block",
              "src": "700:42:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34638,
                      "name": "_income",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34613,
                      "src": "710:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$37098",
                        "typeString": "contract Income"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34640,
                          "name": "incAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34635,
                          "src": "727:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34639,
                        "name": "Income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37098,
                        "src": "720:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Income_$37098_$",
                          "typeString": "type(contract Income)"
                        }
                      },
                      "id": 34641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "720:15:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$37098",
                        "typeString": "contract Income"
                      }
                    },
                    "src": "710:25:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Income_$37098",
                      "typeString": "contract Income"
                    }
                  },
                  "id": 34643,
                  "nodeType": "ExpressionStatement",
                  "src": "710:25:46"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34635,
                  "mutability": "mutable",
                  "name": "incAddr",
                  "nameLocation": "691:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34645,
                  "src": "683:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "682:17:46"
            },
            "returnParameters": {
              "id": 34637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:0:46"
            },
            "scope": 35047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34658,
            "nodeType": "FunctionDefinition",
            "src": "935:174:46",
            "nodes": [],
            "body": {
              "id": 34657,
              "nodeType": "Block",
              "src": "1038:71:46",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 34646,
              "nodeType": "StructuredDocumentation",
              "src": "747:183:46",
              "text": "@dev 铸造NFT(本合约必须先成为NFT合约miner)\n@param tokenAddr 合约地址\n@param tokenId tokenId\n@param tokenAmount 数量\n@param cid nft cid"
            },
            "functionSelector": "bb7fde71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "944:4:46",
            "parameters": {
              "id": 34655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34648,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "957:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34658,
                  "src": "949:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34650,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "975:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34658,
                  "src": "967:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34652,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "991:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34658,
                  "src": "983:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34654,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1017:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34658,
                  "src": "1003:17:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34653,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:73:46"
            },
            "returnParameters": {
              "id": 34656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1038:0:46"
            },
            "scope": 35047,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34703,
            "nodeType": "FunctionDefinition",
            "src": "1352:360:46",
            "nodes": [],
            "body": {
              "id": 34702,
              "nodeType": "Block",
              "src": "1509:203:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34677,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34661,
                        "src": "1525:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34678,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34663,
                        "src": "1535:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34679,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34665,
                        "src": "1543:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34680,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34667,
                        "src": "1555:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34683,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1567:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Moresol_$35047",
                              "typeString": "contract Moresol"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Moresol_$35047",
                              "typeString": "contract Moresol"
                            }
                          ],
                          "id": 34682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1559:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1559:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1559:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34685,
                        "name": "pledgeDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34669,
                        "src": "1573:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 34676,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34776,
                      "src": "1519:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,string memory,address,uint32)"
                      }
                    },
                    "id": 34686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:65:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34687,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:65:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 34690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34688,
                      "name": "pledgeDays",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34669,
                      "src": "1599:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1612:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1599:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34701,
                  "nodeType": "IfStatement",
                  "src": "1595:111:46",
                  "trueBody": {
                    "id": 34700,
                    "nodeType": "Block",
                    "src": "1615:91:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 34692,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1642:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1646:6:46",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1642:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34694,
                              "name": "tokenAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34661,
                              "src": "1653:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34695,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34663,
                              "src": "1663:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34696,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34665,
                              "src": "1671:11:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34697,
                              "name": "pledgeDays",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34669,
                              "src": "1683:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 34691,
                            "name": "_pledgeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35310,
                            "src": "1629:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint32)"
                            }
                          },
                          "id": 34698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1629:65:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34699,
                        "nodeType": "ExpressionStatement",
                        "src": "1629:65:46"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 34659,
              "nodeType": "StructuredDocumentation",
              "src": "1115:232:46",
              "text": "@dev 铸造并质押token(本合约必须先成为NFT合约miner)\n@param tokenAddr 合约地址\n@param tokenId tokenId\n@param tokenAmount 数量\n@param cid nft cid\n@param pledgeDays 质押天数"
            },
            "functionSelector": "26cbd26b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34672,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34661,
                    "src": "1491:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 34673,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34663,
                    "src": "1501:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34674,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34671,
                  "name": "canPledge",
                  "nameLocations": [
                    "1481:9:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36427,
                  "src": "1481:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1481:28:46"
              }
            ],
            "name": "mintPledge",
            "nameLocation": "1361:10:46",
            "parameters": {
              "id": 34670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34661,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "1380:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34703,
                  "src": "1372:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34663,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1398:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34703,
                  "src": "1390:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34665,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1414:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34703,
                  "src": "1406:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34667,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1440:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34703,
                  "src": "1426:17:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34669,
                  "mutability": "mutable",
                  "name": "pledgeDays",
                  "nameLocation": "1452:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34703,
                  "src": "1445:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 34668,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:92:46"
            },
            "returnParameters": {
              "id": 34675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:46"
            },
            "scope": 35047,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34776,
            "nodeType": "FunctionDefinition",
            "src": "1720:668:46",
            "nodes": [],
            "body": {
              "id": 34775,
              "nodeType": "Block",
              "src": "1852:536:46",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34720,
                      "mutability": "mutable",
                      "name": "pCfg",
                      "nameLocation": "1933:4:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 34775,
                      "src": "1916:21:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeCfg_$36333_memory_ptr",
                        "typeString": "struct Store.PledgeCfg"
                      },
                      "typeName": {
                        "id": 34719,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34718,
                          "name": "PledgeCfg",
                          "nameLocations": [
                            "1916:9:46"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36333,
                          "src": "1916:9:46"
                        },
                        "referencedDeclaration": 36333,
                        "src": "1916:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PledgeCfg_$36333_storage_ptr",
                          "typeString": "struct Store.PledgeCfg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34725,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34722,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34705,
                        "src": "1954:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34723,
                        "name": "pledgeDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34715,
                        "src": "1964:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 34721,
                      "name": "_getPledgeCfg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36468,
                      "src": "1940:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_PledgeCfg_$36333_memory_ptr_$",
                        "typeString": "function (address,uint32) view returns (struct Store.PledgeCfg memory)"
                      }
                    },
                    "id": 34724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PledgeCfg_$36333_memory_ptr",
                      "typeString": "struct Store.PledgeCfg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1916:59:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 34727,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34720,
                              "src": "1993:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$36333_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 34728,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1998:11:46",
                            "memberName": "pledgeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36321,
                            "src": "1993:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          },
                          "id": 34729,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2010:5:46",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36310,
                          "src": "1993:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2027:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2019:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2019:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2019:10:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1993:36:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74207468697320706c6564676520746f6b656e21",
                        "id": 34735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56057fcda83d8b011257f82c3c6871a3113ab8b52357320c4318a590a5780443",
                          "typeString": "literal_string \"not this pledge token!\""
                        },
                        "value": "not this pledge token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56057fcda83d8b011257f82c3c6871a3113ab8b52357320c4318a590a5780443",
                          "typeString": "literal_string \"not this pledge token!\""
                        }
                      ],
                      "id": 34726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1985:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34737,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:70:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 34740,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34720,
                              "src": "2091:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$36333_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 34741,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2096:8:46",
                            "memberName": "payToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36324,
                            "src": "2091:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          ],
                          "id": 34739,
                          "name": "_payTokenFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34865,
                          "src": "2073:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenX_$36318_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Store.TokenX memory) returns (bool)"
                          }
                        },
                        "id": 34742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2073:32:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706179546f6b656e2068616e646c65206661696c656421",
                        "id": 34743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2106:25:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a972aab3e60c5d29c4545c4e73a014c23cf099f38900d1503ac4d91c8d54dbcd",
                          "typeString": "literal_string \"payToken handle failed!\""
                        },
                        "value": "payToken handle failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a972aab3e60c5d29c4545c4e73a014c23cf099f38900d1503ac4d91c8d54dbcd",
                          "typeString": "literal_string \"payToken handle failed!\""
                        }
                      ],
                      "id": 34738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2065:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:67:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34745,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:67:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 34748,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34720,
                              "src": "2164:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$36333_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 34749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2169:11:46",
                            "memberName": "pledgeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36321,
                            "src": "2164:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          },
                          {
                            "id": 34750,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34707,
                            "src": "2181:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34751,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34709,
                            "src": "2189:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 34752,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34711,
                            "src": "2201:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 34753,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34713,
                            "src": "2205:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34747,
                          "name": "_mintFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34976,
                          "src": "2150:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenX_$36318_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct Store.TokenX memory,uint256,uint256,string memory,address) returns (bool)"
                          }
                        },
                        "id": 34754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2150:64:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206661696c656421",
                        "id": 34755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30e5e57c980d287aa6c6e93b449609052f55209b6bb045baf032dc14bda5e49f",
                          "typeString": "literal_string \"mint failed!\""
                        },
                        "value": "mint failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30e5e57c980d287aa6c6e93b449609052f55209b6bb045baf032dc14bda5e49f",
                          "typeString": "literal_string \"mint failed!\""
                        }
                      ],
                      "id": 34746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2142:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:88:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34757,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:88:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 34760,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34720,
                              "src": "2270:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$36333_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 34761,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2275:11:46",
                            "memberName": "profitToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36327,
                            "src": "2270:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          ],
                          "id": 34759,
                          "name": "_airDropTokenFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35046,
                          "src": "2248:21:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenX_$36318_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Store.TokenX memory) returns (bool)"
                          }
                        },
                        "id": 34762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2248:39:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61697244726f70546f6b656e20756e66696e697368656421",
                        "id": 34763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2288:26:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ecce54e61e8595b34a82a0197161330fe39975ca2a3d5266d7f559c85eb6ee3",
                          "typeString": "literal_string \"airDropToken unfinished!\""
                        },
                        "value": "airDropToken unfinished!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ecce54e61e8595b34a82a0197161330fe39975ca2a3d5266d7f559c85eb6ee3",
                          "typeString": "literal_string \"airDropToken unfinished!\""
                        }
                      ],
                      "id": 34758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2240:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:75:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34765,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:75:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34767,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2335:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2339:6:46",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2335:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34769,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34705,
                        "src": "2347:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34770,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34707,
                        "src": "2357:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34771,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34709,
                        "src": "2365:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34772,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34711,
                        "src": "2377:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34766,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34625,
                      "src": "2330:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,string memory)"
                      }
                    },
                    "id": 34773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2330:51:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34774,
                  "nodeType": "EmitStatement",
                  "src": "2325:56:46"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1729:5:46",
            "parameters": {
              "id": 34716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34705,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "1743:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34776,
                  "src": "1735:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34707,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1761:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34776,
                  "src": "1753:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34709,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1777:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34776,
                  "src": "1769:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34711,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1803:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34776,
                  "src": "1789:17:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34713,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1815:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34776,
                  "src": "1807:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34715,
                  "mutability": "mutable",
                  "name": "pledgeDays",
                  "nameLocation": "1831:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34776,
                  "src": "1824:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 34714,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:108:46"
            },
            "returnParameters": {
              "id": 34717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:46"
            },
            "scope": 35047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34865,
            "nodeType": "FunctionDefinition",
            "src": "2413:769:46",
            "nodes": [],
            "body": {
              "id": 34864,
              "nodeType": "Block",
              "src": "2486:696:46",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34784,
                        "name": "payToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34779,
                        "src": "2500:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                          "typeString": "struct Store.TokenX memory"
                        }
                      },
                      "id": 34785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2509:6:46",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36317,
                      "src": "2500:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2519:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2500:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34791,
                  "nodeType": "IfStatement",
                  "src": "2496:71:46",
                  "trueBody": {
                    "id": 34790,
                    "nodeType": "Block",
                    "src": "2522:45:46",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 34788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2553:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 34783,
                        "id": 34789,
                        "nodeType": "Return",
                        "src": "2546:11:46"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 34798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34792,
                          "name": "payToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34779,
                          "src": "2579:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 34793,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2588:5:46",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36310,
                        "src": "2579:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 34796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2605:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 34795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2597:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2597:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2597:10:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2579:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ERCType_$36308",
                        "typeString": "enum Store.ERCType"
                      },
                      "id": 34803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34799,
                          "name": "payToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34779,
                          "src": "2611:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 34800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2620:7:46",
                        "memberName": "ercType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36315,
                        "src": "2611:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 34801,
                          "name": "ERCType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36308,
                          "src": "2631:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ERCType_$36308_$",
                            "typeString": "type(enum Store.ERCType)"
                          }
                        },
                        "id": 34802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2639:3:46",
                        "memberName": "Eth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36307,
                        "src": "2631:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "src": "2611:31:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2579:63:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 34846,
                    "nodeType": "Block",
                    "src": "2743:300:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 34821,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2873:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 34822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2877:6:46",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2873:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 34825,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2892:4:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Moresol_$35047",
                                        "typeString": "contract Moresol"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Moresol_$35047",
                                        "typeString": "contract Moresol"
                                      }
                                    ],
                                    "id": 34824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2884:7:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 34823,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2884:7:46",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 34826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2884:13:46",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 34827,
                                    "name": "payToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34779,
                                    "src": "2898:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                      "typeString": "struct Store.TokenX memory"
                                    }
                                  },
                                  "id": 34828,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2907:6:46",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36317,
                                  "src": "2898:15:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 34817,
                                        "name": "payToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34779,
                                        "src": "2844:8:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                          "typeString": "struct Store.TokenX memory"
                                        }
                                      },
                                      "id": 34818,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2853:5:46",
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36310,
                                      "src": "2844:14:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 34816,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31150,
                                    "src": "2837:6:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$31150_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 34819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2837:22:46",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$31150",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 34820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2860:12:46",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31149,
                                "src": "2837:35:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 34829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2837:77:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c656421204d61796265206e6f742061757468",
                              "id": 34830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2915:39:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1aa4f0dfbf49bee71f8601de71c1ee95250c54cc01f3e3dc1ab2fb2c1539445e",
                                "typeString": "literal_string \"ERC20 transfer failed! Maybe not auth\""
                              },
                              "value": "ERC20 transfer failed! Maybe not auth"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1aa4f0dfbf49bee71f8601de71c1ee95250c54cc01f3e3dc1ab2fb2c1539445e",
                                "typeString": "literal_string \"ERC20 transfer failed! Maybe not auth\""
                              }
                            ],
                            "id": 34815,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2829:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 34831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2829:126:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34832,
                        "nodeType": "ExpressionStatement",
                        "src": "2829:126:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 34840,
                                  "name": "_income",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34613,
                                  "src": "3008:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Income_$37098",
                                    "typeString": "contract Income"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Income_$37098",
                                    "typeString": "contract Income"
                                  }
                                ],
                                "id": 34839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3000:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34838,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3000:7:46",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3000:16:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 34842,
                                "name": "payToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34779,
                                "src": "3017:8:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                  "typeString": "struct Store.TokenX memory"
                                }
                              },
                              "id": 34843,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3026:6:46",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36317,
                              "src": "3017:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 34834,
                                    "name": "payToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34779,
                                    "src": "2976:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                      "typeString": "struct Store.TokenX memory"
                                    }
                                  },
                                  "id": 34835,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2985:5:46",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36310,
                                  "src": "2976:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 34833,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31150,
                                "src": "2969:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$31150_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 34836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2969:22:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$31150",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 34837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2992:7:46",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31137,
                            "src": "2969:30:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 34844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2969:64:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 34845,
                        "nodeType": "ExpressionStatement",
                        "src": "2969:64:46"
                      }
                    ]
                  },
                  "id": 34847,
                  "nodeType": "IfStatement",
                  "src": "2575:468:46",
                  "trueBody": {
                    "id": 34814,
                    "nodeType": "Block",
                    "src": "2644:94:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 34810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 34806,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2678:3:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 34807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2682:5:46",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2678:9:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 34808,
                                  "name": "payToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34779,
                                  "src": "2691:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                    "typeString": "struct Store.TokenX memory"
                                  }
                                },
                                "id": 34809,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2700:6:46",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36317,
                                "src": "2691:15:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2678:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d73672e76616c756520746f6f206c6f777e",
                              "id": 34811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2707:20:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6494f19a7550bf92bc5d7447b761a8fc930998613b8b8e53a30371d4a248aaf7",
                                "typeString": "literal_string \"msg.value too low~\""
                              },
                              "value": "msg.value too low~"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6494f19a7550bf92bc5d7447b761a8fc930998613b8b8e53a30371d4a248aaf7",
                                "typeString": "literal_string \"msg.value too low~\""
                              }
                            ],
                            "id": 34805,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2670:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 34812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2670:58:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34813,
                        "nodeType": "ExpressionStatement",
                        "src": "2670:58:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 34854,
                              "name": "payToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34779,
                              "src": "3099:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                "typeString": "struct Store.TokenX memory"
                              }
                            },
                            "id": 34855,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3108:5:46",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36310,
                            "src": "3099:14:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 34856,
                              "name": "payToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34779,
                              "src": "3114:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                "typeString": "struct Store.TokenX memory"
                              }
                            },
                            "id": 34857,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3123:6:46",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36317,
                            "src": "3114:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 34849,
                              "name": "_income",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34613,
                              "src": "3059:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Income_$37098",
                                "typeString": "contract Income"
                              }
                            },
                            "id": 34850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3067:13:46",
                            "memberName": "depositIncome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37037,
                            "src": "3059:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) payable external returns (bool)"
                            }
                          },
                          "id": 34853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "id": 34851,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3088:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3092:5:46",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3088:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "3059:39:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_bool_$value",
                            "typeString": "function (address,uint256) payable external returns (bool)"
                          }
                        },
                        "id": 34858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:71:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974496e636f6d65206661696c656421",
                        "id": 34859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3131:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfbbcc8e20cb44284ffdd1c605d0755dad81aaca377090d19892fea36cb0c3a7",
                          "typeString": "literal_string \"depositIncome failed!\""
                        },
                        "value": "depositIncome failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfbbcc8e20cb44284ffdd1c605d0755dad81aaca377090d19892fea36cb0c3a7",
                          "typeString": "literal_string \"depositIncome failed!\""
                        }
                      ],
                      "id": 34848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3051:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:104:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34861,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:104:46"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 34862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3171:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 34783,
                  "id": 34863,
                  "nodeType": "Return",
                  "src": "3164:11:46"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payTokenFinished",
            "nameLocation": "2422:17:46",
            "parameters": {
              "id": 34780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34779,
                  "mutability": "mutable",
                  "name": "payToken",
                  "nameLocation": "2454:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34865,
                  "src": "2440:22:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                    "typeString": "struct Store.TokenX"
                  },
                  "typeName": {
                    "id": 34778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34777,
                      "name": "TokenX",
                      "nameLocations": [
                        "2440:6:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36318,
                      "src": "2440:6:46"
                    },
                    "referencedDeclaration": 36318,
                    "src": "2440:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenX_$36318_storage_ptr",
                      "typeString": "struct Store.TokenX"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2439:24:46"
            },
            "returnParameters": {
              "id": 34783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34782,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34865,
                  "src": "2481:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34781,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:6:46"
            },
            "scope": 35047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 34903,
            "nodeType": "FunctionDefinition",
            "src": "3189:252:46",
            "nodes": [],
            "body": {
              "id": 34902,
              "nodeType": "Block",
              "src": "3244:197:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34873,
                          "name": "income",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34867,
                          "src": "3262:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3280:1:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3272:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34874,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3272:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3272:10:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3262:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f2061646472657373",
                        "id": 34879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3283:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
                          "typeString": "literal_string \"zero address\""
                        },
                        "value": "zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
                          "typeString": "literal_string \"zero address\""
                        }
                      ],
                      "id": 34872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3254:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3254:44:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34881,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:44:46"
                },
                {
                  "assignments": [
                    34883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34883,
                      "mutability": "mutable",
                      "name": "oldIncome",
                      "nameLocation": "3316:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 34902,
                      "src": "3308:17:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34882,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3308:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34888,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34886,
                        "name": "_income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34613,
                        "src": "3336:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Income_$37098",
                          "typeString": "contract Income"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Income_$37098",
                          "typeString": "contract Income"
                        }
                      ],
                      "id": 34885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3328:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 34884,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3328:7:46",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 34887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3328:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3308:36:46"
                },
                {
                  "expression": {
                    "id": 34893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34889,
                      "name": "_income",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34613,
                      "src": "3354:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$37098",
                        "typeString": "contract Income"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34891,
                          "name": "income",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34867,
                          "src": "3371:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34890,
                        "name": "Income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37098,
                        "src": "3364:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Income_$37098_$",
                          "typeString": "type(contract Income)"
                        }
                      },
                      "id": 34892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3364:14:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$37098",
                        "typeString": "contract Income"
                      }
                    },
                    "src": "3354:24:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Income_$37098",
                      "typeString": "contract Income"
                    }
                  },
                  "id": 34894,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:24:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3406:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3410:6:46",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3406:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34898,
                        "name": "income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34867,
                        "src": "3417:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34899,
                        "name": "oldIncome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34883,
                        "src": "3424:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34895,
                      "name": "UpdateIncome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34633,
                      "src": "3393:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 34900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:41:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34901,
                  "nodeType": "EmitStatement",
                  "src": "3388:46:46"
                }
              ]
            },
            "functionSelector": "f7c24aa3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34870,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34869,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3234:9:46"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28846,
                  "src": "3234:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "3234:9:46"
              }
            ],
            "name": "updateIncome",
            "nameLocation": "3198:12:46",
            "parameters": {
              "id": 34868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34867,
                  "mutability": "mutable",
                  "name": "income",
                  "nameLocation": "3219:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34903,
                  "src": "3211:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3210:16:46"
            },
            "returnParameters": {
              "id": 34871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3244:0:46"
            },
            "scope": 35047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34976,
            "nodeType": "FunctionDefinition",
            "src": "3466:571:46",
            "nodes": [],
            "body": {
              "id": 34975,
              "nodeType": "Block",
              "src": "3603:434:46",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ERCType_$36308",
                      "typeString": "enum Store.ERCType"
                    },
                    "id": 34923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34919,
                        "name": "mintToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34906,
                        "src": "3617:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                          "typeString": "struct Store.TokenX memory"
                        }
                      },
                      "id": 34920,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3627:7:46",
                      "memberName": "ercType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36315,
                      "src": "3617:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ERCType_$36308",
                        "typeString": "enum Store.ERCType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 34921,
                        "name": "ERCType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36308,
                        "src": "3638:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ERCType_$36308_$",
                          "typeString": "type(enum Store.ERCType)"
                        }
                      },
                      "id": 34922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3646:5:46",
                      "memberName": "Erc20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36304,
                      "src": "3638:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ERCType_$36308",
                        "typeString": "enum Store.ERCType"
                      }
                    },
                    "src": "3617:34:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ERCType_$36308",
                        "typeString": "enum Store.ERCType"
                      },
                      "id": 34938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34934,
                          "name": "mintToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34906,
                          "src": "3729:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 34935,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3739:7:46",
                        "memberName": "ercType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36315,
                        "src": "3729:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 34936,
                          "name": "ERCType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36308,
                          "src": "3750:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ERCType_$36308_$",
                            "typeString": "type(enum Store.ERCType)"
                          }
                        },
                        "id": 34937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3758:6:46",
                        "memberName": "Erc721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36305,
                        "src": "3750:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "src": "3729:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        },
                        "id": 34954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34950,
                            "name": "mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34906,
                            "src": "3849:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          },
                          "id": 34951,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3859:7:46",
                          "memberName": "ercType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36315,
                          "src": "3849:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ERCType_$36308",
                            "typeString": "enum Store.ERCType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 34952,
                            "name": "ERCType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36308,
                            "src": "3870:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ERCType_$36308_$",
                              "typeString": "type(enum Store.ERCType)"
                            }
                          },
                          "id": 34953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3878:7:46",
                          "memberName": "Erc1155",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36306,
                          "src": "3870:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ERCType_$36308",
                            "typeString": "enum Store.ERCType"
                          }
                        },
                        "src": "3849:36:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 34969,
                        "nodeType": "Block",
                        "src": "3973:37:46",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 34967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3994:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 34918,
                            "id": 34968,
                            "nodeType": "Return",
                            "src": "3987:12:46"
                          }
                        ]
                      },
                      "id": 34970,
                      "nodeType": "IfStatement",
                      "src": "3845:165:46",
                      "trueBody": {
                        "id": 34966,
                        "nodeType": "Block",
                        "src": "3887:81:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 34960,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34914,
                                  "src": "3929:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 34961,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34908,
                                  "src": "3938:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 34962,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34910,
                                  "src": "3946:6:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 34963,
                                  "name": "cid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34912,
                                  "src": "3953:3:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 34956,
                                        "name": "mintToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34906,
                                        "src": "3907:9:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                          "typeString": "struct Store.TokenX memory"
                                        }
                                      },
                                      "id": 34957,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3917:5:46",
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36310,
                                      "src": "3907:15:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 34955,
                                    "name": "T1155",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37277,
                                    "src": "3901:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_T1155_$37277_$",
                                      "typeString": "type(contract T1155)"
                                    }
                                  },
                                  "id": 34958,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3901:22:46",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_T1155_$37277",
                                    "typeString": "contract T1155"
                                  }
                                },
                                "id": 34959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3924:4:46",
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37160,
                                "src": "3901:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (address,uint256,uint256,string memory) external"
                                }
                              },
                              "id": 34964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3901:56:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 34965,
                            "nodeType": "ExpressionStatement",
                            "src": "3901:56:46"
                          }
                        ]
                      }
                    },
                    "id": 34971,
                    "nodeType": "IfStatement",
                    "src": "3725:285:46",
                    "trueBody": {
                      "id": 34949,
                      "nodeType": "Block",
                      "src": "3766:74:46",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34944,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34914,
                                "src": "3807:8:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 34945,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34908,
                                "src": "3816:7:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 34946,
                                "name": "cid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34912,
                                "src": "3824:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 34940,
                                      "name": "mintToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34906,
                                      "src": "3785:9:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                        "typeString": "struct Store.TokenX memory"
                                      }
                                    },
                                    "id": 34941,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3795:5:46",
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36310,
                                    "src": "3785:15:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 34939,
                                  "name": "T721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37488,
                                  "src": "3780:4:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_T721_$37488_$",
                                    "typeString": "type(contract T721)"
                                  }
                                },
                                "id": 34942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3780:21:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_T721_$37488",
                                  "typeString": "contract T721"
                                }
                              },
                              "id": 34943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3802:4:46",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37380,
                              "src": "3780:26:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (address,uint256,string memory) external"
                              }
                            },
                            "id": 34947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3780:48:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34948,
                          "nodeType": "ExpressionStatement",
                          "src": "3780:48:46"
                        }
                      ]
                    }
                  },
                  "id": 34972,
                  "nodeType": "IfStatement",
                  "src": "3613:397:46",
                  "trueBody": {
                    "id": 34933,
                    "nodeType": "Block",
                    "src": "3653:67:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34929,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34914,
                              "src": "3693:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 34930,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34910,
                              "src": "3702:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 34925,
                                    "name": "mintToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34906,
                                    "src": "3671:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                      "typeString": "struct Store.TokenX memory"
                                    }
                                  },
                                  "id": 34926,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3681:5:46",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36310,
                                  "src": "3671:15:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 34924,
                                "name": "T20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37325,
                                "src": "3667:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_T20_$37325_$",
                                  "typeString": "type(contract T20)"
                                }
                              },
                              "id": 34927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3667:20:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_T20_$37325",
                                "typeString": "contract T20"
                              }
                            },
                            "id": 34928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3688:4:46",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37312,
                            "src": "3667:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 34931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3667:42:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34932,
                        "nodeType": "ExpressionStatement",
                        "src": "3667:42:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 34973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4026:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 34918,
                  "id": 34974,
                  "nodeType": "Return",
                  "src": "4019:11:46"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintFinished",
            "nameLocation": "3475:13:46",
            "parameters": {
              "id": 34915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34906,
                  "mutability": "mutable",
                  "name": "mintToken",
                  "nameLocation": "3503:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34976,
                  "src": "3489:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                    "typeString": "struct Store.TokenX"
                  },
                  "typeName": {
                    "id": 34905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34904,
                      "name": "TokenX",
                      "nameLocations": [
                        "3489:6:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36318,
                      "src": "3489:6:46"
                    },
                    "referencedDeclaration": 36318,
                    "src": "3489:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenX_$36318_storage_ptr",
                      "typeString": "struct Store.TokenX"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34908,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3521:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34976,
                  "src": "3513:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3513:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34910,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3537:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34976,
                  "src": "3529:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34912,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "3558:3:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34976,
                  "src": "3544:17:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34911,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34914,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3570:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34976,
                  "src": "3562:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3488:91:46"
            },
            "returnParameters": {
              "id": 34918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34976,
                  "src": "3597:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3596:6:46"
            },
            "scope": 35047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35046,
            "nodeType": "FunctionDefinition",
            "src": "4063:772:46",
            "nodes": [],
            "body": {
              "id": 35045,
              "nodeType": "Block",
              "src": "4143:692:46",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34984,
                        "name": "aDropToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34979,
                        "src": "4158:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                          "typeString": "struct Store.TokenX memory"
                        }
                      },
                      "id": 34985,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4169:6:46",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36317,
                      "src": "4158:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4179:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4158:22:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34991,
                  "nodeType": "IfStatement",
                  "src": "4154:79:46",
                  "trueBody": {
                    "id": 34990,
                    "nodeType": "Block",
                    "src": "4182:51:46",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 34988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4219:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 34983,
                        "id": 34989,
                        "nodeType": "Return",
                        "src": "4212:11:46"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 35004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 34998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34992,
                          "name": "aDropToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34979,
                          "src": "4245:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 34993,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4256:5:46",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36310,
                        "src": "4245:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 34996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4273:1:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 34995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4265:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4265:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4265:10:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4245:30:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ERCType_$36308",
                        "typeString": "enum Store.ERCType"
                      },
                      "id": 35003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 34999,
                          "name": "aDropToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34979,
                          "src": "4279:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 35000,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4290:7:46",
                        "memberName": "ercType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36315,
                        "src": "4279:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 35001,
                          "name": "ERCType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36308,
                          "src": "4301:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ERCType_$36308_$",
                            "typeString": "type(enum Store.ERCType)"
                          }
                        },
                        "id": 35002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4309:3:46",
                        "memberName": "Eth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36307,
                        "src": "4301:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$36308",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "src": "4279:33:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4245:67:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 35041,
                    "nodeType": "Block",
                    "src": "4536:273:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35035,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4770:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4774:6:46",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4770:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 35037,
                                "name": "aDropToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34979,
                                "src": "4781:10:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                  "typeString": "struct Store.TokenX memory"
                                }
                              },
                              "id": 35038,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4792:6:46",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36317,
                              "src": "4781:17:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 35031,
                                    "name": "aDropToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34979,
                                    "src": "4747:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                      "typeString": "struct Store.TokenX memory"
                                    }
                                  },
                                  "id": 35032,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4758:5:46",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36310,
                                  "src": "4747:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35030,
                                "name": "T20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37325,
                                "src": "4743:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_T20_$37325_$",
                                  "typeString": "type(contract T20)"
                                }
                              },
                              "id": 35033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4743:21:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_T20_$37325",
                                "typeString": "contract T20"
                              }
                            },
                            "id": 35034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4765:4:46",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37312,
                            "src": "4743:26:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 35039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4743:56:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35040,
                        "nodeType": "ExpressionStatement",
                        "src": "4743:56:46"
                      }
                    ]
                  },
                  "id": 35042,
                  "nodeType": "IfStatement",
                  "src": "4241:568:46",
                  "trueBody": {
                    "id": 35029,
                    "nodeType": "Block",
                    "src": "4314:217:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 35006,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4348:3:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 35007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4352:5:46",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "4348:9:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 35008,
                                  "name": "aDropToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34979,
                                  "src": "4361:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                    "typeString": "struct Store.TokenX memory"
                                  }
                                },
                                "id": 35009,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4372:6:46",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36317,
                                "src": "4361:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4348:30:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41697244726f703a206d73672e76616c756520746f6f206c6f777e",
                              "id": 35011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4379:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e16635c5804e772baca509ef52a876cd9fb5db63e31b949b4416fa86faf32787",
                                "typeString": "literal_string \"AirDrop: msg.value too low~\""
                              },
                              "value": "AirDrop: msg.value too low~"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e16635c5804e772baca509ef52a876cd9fb5db63e31b949b4416fa86faf32787",
                                "typeString": "literal_string \"AirDrop: msg.value too low~\""
                              }
                            ],
                            "id": 35005,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4340:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 35012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4340:69:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35013,
                        "nodeType": "ExpressionStatement",
                        "src": "4340:69:46"
                      },
                      {
                        "assignments": [
                          35015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35015,
                            "mutability": "mutable",
                            "name": "paySender",
                            "nameLocation": "4439:9:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 35029,
                            "src": "4423:25:46",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 35014,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4423:15:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35021,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35018,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4459:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4463:6:46",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4459:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 35017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4451:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 35016,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4451:8:46",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4451:19:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4423:47:46"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35025,
                                "name": "aDropToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34979,
                                "src": "4503:10:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                                  "typeString": "struct Store.TokenX memory"
                                }
                              },
                              "id": 35026,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4514:6:46",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36317,
                              "src": "4503:17:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 35022,
                              "name": "paySender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35015,
                              "src": "4484:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 35024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4494:8:46",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4484:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 35027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4484:37:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35028,
                        "nodeType": "ExpressionStatement",
                        "src": "4484:37:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 35043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4824:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 34983,
                  "id": 35044,
                  "nodeType": "Return",
                  "src": "4817:11:46"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_airDropTokenFinished",
            "nameLocation": "4072:21:46",
            "parameters": {
              "id": 34980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34979,
                  "mutability": "mutable",
                  "name": "aDropToken",
                  "nameLocation": "4108:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 35046,
                  "src": "4094:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenX_$36318_memory_ptr",
                    "typeString": "struct Store.TokenX"
                  },
                  "typeName": {
                    "id": 34978,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34977,
                      "name": "TokenX",
                      "nameLocations": [
                        "4094:6:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36318,
                      "src": "4094:6:46"
                    },
                    "referencedDeclaration": 36318,
                    "src": "4094:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenX_$36318_storage_ptr",
                      "typeString": "struct Store.TokenX"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4093:26:46"
            },
            "returnParameters": {
              "id": 34983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34982,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35046,
                  "src": "4137:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4137:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4136:6:46"
            },
            "scope": 35047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34609,
              "name": "Pledge",
              "nameLocations": [
                "291:6:46"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36284,
              "src": "291:6:46"
            },
            "id": 34610,
            "nodeType": "InheritanceSpecifier",
            "src": "291:6:46"
          }
        ],
        "canonicalName": "Moresol",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35047,
          36284,
          30313,
          32236,
          36724,
          28741,
          33253,
          33265,
          28814,
          28927,
          33000,
          36529
        ],
        "name": "Moresol",
        "nameLocation": "280:7:46",
        "scope": 35048,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 46
}