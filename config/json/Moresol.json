{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "incAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PledgeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newIncome",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldIncome",
          "type": "address"
        }
      ],
      "name": "UpdateIncome",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pledgeAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "payAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "profitAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "UpdatePledgeCfg",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pledgeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pledgeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "profitToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profitAmount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawPledge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "profitToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawProfit",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OWNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PLEDGE_RATE_DECIMAILS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getLatestPledge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPayToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPledge",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pledgeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            },
            {
              "internalType": "enum Store.PledgeState",
              "name": "state",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "earnToken",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "earnRelease",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "earnRemain",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.Pledge",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPledgeCfg",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "pledgeToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "payToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.TokenX",
              "name": "profitToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Store.PledgeReturn",
              "name": "pledgeReturn",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "internalType": "struct Store.PledgeCfg",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "acc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPledgeInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPledgeReturn",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Store.ProfitType",
              "name": "profitType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isDayRelease",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.PledgeReturn",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getPledgeToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "getProfitToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "mintPledge",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "pledgeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "pledgeToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "payToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "profitToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum Store.ProfitType",
              "name": "profitType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isDayRelease",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.PledgeReturn",
          "name": "pledgeReturn",
          "type": "tuple"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "setPledgeCfg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "income",
          "type": "address"
        }
      ],
      "name": "updateIncome",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "pledgeToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "payToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "enum Store.ERCType",
              "name": "ercType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.TokenX",
          "name": "profitToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum Store.ProfitType",
              "name": "profitType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isDayRelease",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "internalType": "struct Store.PledgeReturn",
          "name": "pledgeReturn",
          "type": "tuple"
        },
        {
          "internalType": "uint32",
          "name": "pledgeDays",
          "type": "uint32"
        }
      ],
      "name": "updatePledgeCfg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "plgToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawPledge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pledgeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080346200027657601f6200346638819003918201601f1916830192916001600160401b038411838510176200027b57808392604095865283396020928391810103126200027657516001600160a01b038082169290918390036200027657600280546001600160a01b0319808216339081179093559360009291167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a37fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e7291828252600390818152600191828885200154947fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e9081858b88200155817fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9782898980a4818a7f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e8099818a52838980858d200154948c2001558980a4808652898620338752845260ff8a87205416156200023d575b50808552818352888520338652835260ff89862054161562000204575b50848452808252878420338552825260ff888520541615620001c9575b8787876004541617600455516131b49081620002928239f35b848452815286832090338452528582209060ff19825416179055339160008051602062003446833981519152339280a43880808080620001b0565b80855281835288852033865283528885208460ff1982541617905533903390600080516020620034468339815191528780a43862000193565b80865282845289862033875284528986208560ff1982541617905533903390600080516020620034468339815191528880a43862000176565b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714611c4f57508063039ce10614611bcb578063150b7a0214611b7557806316762eed146118e557806322eb7931146118c4578063248a9ca31461189757806326cbd26b146113eb57806327a99cb1146113395780632f2ff15d1461128657806334771e621461126957806336568abe146111d6578063444bbb541461119b57806359f1da6c146110805780636394f6e6146110455780636c83fc341461101857806370dcbfc614610f41578063715018a614610ee35780638703ba2b14610ea35780638da5cb5b14610e7a57806391d1485414610e2e57806396c817e7146109a85780639785207e14610965578063a217fddf14610949578063a68aede014610820578063ac346a1f14610791578063bb7fde7114610758578063bc197c81146106cf578063d35c9a07146105b3578063d547741f14610572578063e58378bb14610537578063f23a6e61146104dd578063f2fde38b14610417578063f7c24aa31461036a5763f9dfa79f1461019757600080fd5b34610367576040366003190112610367576101b0611d75565b90602435916101c0838233612c2d565b92600284015491602092600260ff82861c166101db81611ff6565b0361032d5761020560406101fe63ffffffff60088a01948986549655168561306c565b51016125a6565b9061023a600388019260018060a01b039283855416908760ff60058d0154168261031b575b505050503390868a549187612a4c565b156102de578660078261029597989954945416910154906040519386855288850152604084015260608301528216907f7f17ff0c099057bb0e700cc8906e38df4274727452016bb115c5fa3138a6de9460803392a333613121565b9033835260018152604083209183525280600860408220828155826001820155826002820155826003820155826004820155826005820155826006820155826007820155015580f35b60405162461bcd60e51b81526004810186905260156024820152741dda5d1a191c985dd41b195919d94819985a5b1959605a1b6044820152606490fd5b61032493612996565b3880878161022a565b60405162461bcd60e51b8152600481018590526012602482015271506c6564676520756e66696e69736865642160701b6044820152606490fd5b80fd5b5034610367576020366003190112610367576004356001600160a01b03818116918290036104135761039a61243a565b81156103df57600454826001600160601b0360a01b8216176004551690337facfdf2068f2b4dda3f4970ef49a4cad3a0a7735a3badb3577bcabb3a889807388480a480f35b60405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606490fd5b8280fd5b503461036757602036600319011261036757610431611d75565b61043961243a565b6001600160a01b0390811690811561048957600254826001600160601b0360a01b821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346103675760a0366003190112610367576104f7611d75565b50610500611d8b565b506084356001600160401b03811161053357610520903690600401611f20565b5060405163f23a6e6160e01b8152602090f35b5080fd5b503461036757806003193601126103675760206040517fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e8152f35b5034610367576040366003190112610367576105b0600435610592611d8b565b9080845260036020526105ab600160408620015461208a565b6123c4565b80f35b5034610367576040366003190112610367576105cd611d75565b90602435916105dd838233612c2d565b600160ff6105f760028401549463ffffffff86169061306c565b9360201c1661060581611ff6565b1461068f575b600801928354918215610656576040849101519455604060018060a01b038551169401516005811015610642576105b09394612996565b634e487b7160e01b84526021600452602484fd5b60405162461bcd60e51b81526020600482015260116024820152702737ba3434b733903bb4ba34323930bbbf60791b6044820152606490fd5b60206060830151015161060b5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08195e1c1a5c995960aa1b6044820152606490fd5b50346103675760a0366003190112610367576106e9611d75565b506106f2611d8b565b506001600160401b0360443581811161041357610713903690600401612024565b506064358181116104135761072c903690600401612024565b5060843590811161053357610745903690600401611f20565b5060405163bc197c8160e01b8152602090f35b5060803660031901126103675761076d611d75565b506064356001600160401b0381116105335761078d903690600401611f20565b5080f35b5034610367576040366003190112610367576102006107c86107b1611d75565b6107b9611da1565b906107c2613025565b5061306c565b63ffffffff6080604051926107de848251611f76565b6107ef602082015183860190611f76565b6108026040820151610100860190611f76565b6108156060820151610180860190612000565b0151166101e0820152f35b50346103675761087960406101409261083836611fc1565b8451959161084587611ce8565b8487528460c0602098828a8201528289820152826060820152610866612bfb565b60808201528260a0820152015283613121565b6001600160a01b0390911682526001845282822090825283522060405191906108a183611ce8565b805483526109396001820154928085019384526002830154604086019060ff63ffffffff918281168452841c169160608801926108dd81611ff6565b83526108eb600387016124ef565b9360808901948552600860078801549760a08b0198895201549760c08a0198895260405199518a525190890152511660408701525161092981611ff6565b6060860152516080850190611f76565b5161010083015251610120820152f35b5034610367578060031936011261036757602090604051908152f35b50346103675760403660031901126103675760806040610997610986611d75565b61098e611da1565b906107c2612bfb565b01516109a66040518092611f76565bf35b5034610367576109b736611db4565b93907f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e93929380875260036020526040872033600052602052610a0160ff60406000205416612f98565b8251604051919060208301908390610a24908a906001600160a01b031684612fd4565b0392610a38601f1994858101835282611d54565b5190208852602088905260408820546001600160a01b0316610dfe57875260036020526040872033600052602052610a7760ff60406000205416612f98565b60018060a01b0383511690610aa56040519182610a998a602083019687612fd4565b03908101835282611d54565b5190206040830180516005811015610ce757600214908115610dd5575b50610d6c575b60028251610ad581611ff6565b610ade81611ff6565b14610cfb575b60405191610af183611ca4565b838352846020840152856040840152606083015263ffffffff8616608083015286528560205260408620815160018060a01b038151166001600160601b0360a01b8354161782556020810151600183015560408101516005811015610ce75790606091600284019060ff80198354169116179055015160038201556004810160208301519060018060a01b038251166001600160601b0360a01b8254161790556020810151600583015560408101516005811015610ce75790606091600684019060ff80198354169116179055015160078201556008810160408301519060018060a01b038251166001600160601b0360a01b82541617905560208101516009830155600a820160408201516005811015610cd357600e7f503a67cd493984ff3a6495c853a044d67761c1b50b5042507c813e773075e37c969460606020979563ffffffff9560809560ff801983541691161790550151600b8201556040600c82016060870151908151610c6481611ff6565b610c6d81611ff6565b815460ff61ff008d860151151560081b1692169061ffff1916171790550151600d820155019201511663ffffffff1982541617905560018060a01b039051169260018060a01b039051169360018060a01b039051169463ffffffff60405191168152a480f35b634e487b7160e01b8a52602160045260248afd5b634e487b7160e01b89526021600452602489fd5b835185516001600160a01b03908116911614610ae45760405162461bcd60e51b815260206004820152602d60248201527f50726f666974547970652e50617950726963655065723d3e706179546f6b656e60448201526c1e9eb83937b334ba2a37b5b2b760991b6064820152608490fd5b8151610d7781611ff6565b610d8081611ff6565b610ac85760405162461bcd60e51b8152602060048201526024808201527f4e465420706c65646765206d75737420757365205061795072696365506572206044820152637479706560e01b6064820152608490fd5b9050516005811015610dea5760031438610ac2565b634e487b7160e01b88526021600452602488fd5b60405162461bcd60e51b8152602060048201526008602482015267657869737465642160c01b6044820152606490fd5b5034610367576040366003190112610367576040610e4a611d8b565b9160043581526003602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346103675780600319360112610367576002546040516001600160a01b039091168152602090f35b503461036757604036600319011261036757606080610ed4610ec3611d75565b610ecb611da1565b906107c2613006565b01516109a66040518092612000565b5034610367578060031936011261036757610efc61243a565b600280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461036757610f61604060c092610f5836611fc1565b90829592613121565b6001600160a01b03938416825260016020908152838320918352522060405190610f8a82611ce8565b80548252600181015492602083019384526002820154604084019160ff63ffffffff92838116855260201c16610fbf81611ff6565b6060860152610fd0600385016124ef565b9182608087015260086007860154958660a0890152015495868982015251965193511691511691604051958652602086015260408501526060840152608083015260a0820152f35b5034610367576040366003190112610367576080611037610986611d75565b516109a66040518092611f76565b503461036757806003193601126103675760206040517fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e728152f35b50346103675760803660031901126103675761109a611d75565b60643563ffffffff90818116809103611196576105b0926110d88260076110e2941490811561118b575b8115611180575b8115611175575b50612951565b6024359033613121565b338452600160205260408420908452602052604083209060c0600860ff6040519361110c85611ce8565b85548552600186015460208601526002860154908116604086015260201c1693606084019461113a81611ff6565b8552611148600382016124ef565b6080850152600781015460a085015201549101525161116681611ff6565b61116f81611ff6565b1561253a565b60b4915014386110d2565b605a811491506110cb565b601e811491506110c4565b600080fd5b503461036757806003193601126103675760206040517f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e8152f35b5034610367576040366003190112610367576111f0611d8b565b336001600160a01b0382160361120c576105b0906004356123c4565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461036757806003193601126103675760206040516127108152f35b5034610367576040366003190112610367576004356112a3611d8b565b81835260036020526112bb600160408520015461208a565b8183526003602052604083209060018060a01b0316908160005260205260ff60406000205416156112ea578280f35b818352600360205260408320816000526020526040600020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b50346103675760a061135361134d36611fc1565b91612c2d565b60405161135f81611ce8565b8154815260018201546020820152600282015491604082019260ff63ffffffff91828116865260201c1661139281611ff6565b60608401526113a3600383016124ef565b90816080850152600860078401549384888701520154938460c08201525194511690600180871b03905116906040519485526020850152604084015260608301526080820152f35b5060a036600319011261036757611400611d75565b6064356001600160401b0381116104135761141f903690600401611f20565b63ffffffff60843516608435036111965761143d6024358333613121565b33845260016020526040842090845260205261149a6040842060405161146281611ce8565b815481526001820154602082015260c0600860ff600285015463ffffffff8116604086015260201c1693606084019461113a81611ff6565b6114a66084358361306c565b8051516001600160a01b031615611859576114c460208201516125cb565b15611814576114db308360443560243585516127c6565b156117e05760406114ed910151612918565b1561179b57604051602435916001600160a01b038416917fad2943b15836caf43698401a62af4738985fb33dd979844d99d37f5293f037d391819061153690604435338461257f565b0390a3600763ffffffff60843516148015611789575b8015611777575b8015611765575b61156390612951565b6044356115736024358333613121565b61157f6084358461306c565b61158c60408251016125a6565b6005811015611751576002146116fa575b6040015190604051916115af83611ce8565b83835242602084015263ffffffff6084351660408401526001606084015260808301528460a08301528460c0830152338552600160205260408520908552602052604084209080518255602081015160018301556002820163ffffffff60408301511681549064ff00000000606085015161162981611ff6565b61163281611ff6565b60201b169164ffffffffff1916171790556003820160808201519060018060a01b038251166001600160601b0360a01b825416179055602081015160048401556005830160408201516005811015610dea5760c0926008949260609260ff801983541691161790550151600685015560a081015160078501550151910155604051906024358252602082015263ffffffff608435169160018060a01b0316907f7ea654199703f048d1efb719754a27859d7289ddb9088d0a8e14e413ada7192a60403392a480f35b91506024351561170c5760019161159d565b60405162461bcd60e51b815260206004820152601860248201527f696e7661696c65642045524337323120746f6b656e49647e00000000000000006044820152606490fd5b634e487b7160e01b86526021600452602486fd5b5060843563ffffffff1660b41461155a565b50605a63ffffffff6084351614611553565b50601e63ffffffff608435161461154c565b60405162461bcd60e51b815260206004820152601860248201527f61697244726f70546f6b656e20756e66696e69736865642100000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b6d696e74206661696c65642160a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f706179546f6b656e2068616e646c65206661696c6564210000000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152756e6f74207468697320706c6564676520746f6b656e2160501b6044820152606490fd5b50346103675760203660031901126103675760016040602092600435815260038452200154604051908152f35b50346103675760403660031901126103675760806020610997610986611d75565b5034610367576080366003190112610367576118ff611d75565b6001600160a01b0360643581811692604435926024359190858403611b715761192661243a565b8515611b3d571691839083611993575085908582821561198a575b839283928392f11561197f5761197960008051602061315f833981519152915b60408051338152602081019290925290918291820190565b0390a480f35b6040513d86823e3d90fd5b506108fc611941565b8683611a2a575060405163a9059cbb60e01b81526001600160a01b0391909116600482015260248101919091529060208260448189875af1908115611a1f5760008051602061315f83398151915292611979926119f1575b50611961565b611a119060203d8111611a18575b611a098183611d54565b8101906125b3565b50386119eb565b503d6119ff565b6040513d88823e3d90fd5b9115611ab95760405190611a3d82611d39565b828252843b1561041357838391611a6b88946040519586948594637921219560e11b86523060048701612a19565b038183885af18015611aae57611a96575b505061197960008051602061315f83398151915291611961565b611a9f90611cd5565b611aaa578438611a7c565b8480fd5b6040513d84823e3d90fd5b90833b15610367576040516323b872dd60e01b81523060048201526001600160a01b03929092166024830152604482018390528160648183875af18015611a1f57611b18575b5061197960008051602061315f83398151915291611961565b60008051602061315f8339815191529195611b3561197992611cd5565b959150611aff565b60405162461bcd60e51b815260206004820152600c60248201526b32b939103932b1b2b4bb32b960a11b6044820152606490fd5b8680fd5b503461036757608036600319011261036757611b8f611d75565b50611b98611d8b565b506064356001600160401b03811161053357611bb8903690600401611f20565b50604051630a85bd0160e11b8152602090f35b503461036757611bda36611db4565b93907f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e8694939452600360205260408620338752602052611c2160ff604088205416612f98565b60018060a01b03825116604051610aa581611c4189602083019586612fd4565b03601f198101835282611d54565b9050346105335760203660031901126105335760043563ffffffff60e01b81168091036104135760209250637965db0b60e01b8114908115611c93575b5015158152f35b6301ffc9a760e01b14905038611c8c565b60a081019081106001600160401b03821117611cbf57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611cbf57604052565b60e081019081106001600160401b03821117611cbf57604052565b608081019081106001600160401b03821117611cbf57604052565b606081019081106001600160401b03821117611cbf57604052565b602081019081106001600160401b03821117611cbf57604052565b90601f801991011681019081106001600160401b03821117611cbf57604052565b600435906001600160a01b038216820361119657565b602435906001600160a01b038216820361119657565b6024359063ffffffff8216820361119657565b600319810191906102008312611196576080809312611196576040805192906001600160401b039085850182811186821017611cbf5781526001600160a01b039460043586811681036111965781526024356020820152604435600581101561119657828201526064356060820152958060831986011261119657815181810181811085821117611cbf578352608435878116810361119657815260a435602082015260c4356005811015611196578382015260e435606082015295816101031987011261119657825191820182811085821117611cbf578352610104359081168103611196578152610124356020820152610144359060058210156111965760609183820152610164358282015294610183190112611196578051916060830190811183821017611cbf5781526101843560038110156111965782526101a43580151581036111965760208301526101c43590820152906101e43563ffffffff811681036111965790565b81601f82011215611196578035906001600160401b038211611cbf5760405192611f54601f8401601f191660200185611d54565b8284526020838301011161119657816000926020809301838601378301015290565b80516001600160a01b031682526020808201519083015260408101516005811015611fab576040830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b6060906003190112611196576001600160a01b0390600435828116810361119657916024359081168103611196579060443590565b60031115611fab57565b60408091805161200f81611ff6565b84526020810151151560208501520151910152565b9080601f83011215611196578135906001600160401b038211611cbf578160051b6040519360209361205885840187611d54565b85528380860192820101928311611196578301905b82821061207b575050505090565b8135815290830190830161206d565b60009080825260209060038252604092838120338252835260ff8482205416156120b45750505050565b338451926120c184611d1e565b602a845284840190863683378451156123685760308253845192600193841015612354576078602187015360295b8481116122ea57506122a85786519261210784611d03565b60428452868401946060368737845115612294576030865384518210156122945790607860218601536041915b818311612226575050506121e4576121e09386936121c4936121b560489461218c9a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061237c565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061237c565b01036028810187520185611d54565b5192839262461bcd60e51b84526004840152602483019061239f565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015612280576f181899199a1a9b1b9c1cb0b131b232b360811b901a61225685886124c8565b5360041c92801561226c57600019019190612134565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b60648688519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015612340576f181899199a1a9b1b9c1cb0b131b232b360811b901a61231883896124c8565b5360041c90801561232c57600019016120ef565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b84526032600452602484fd5b60005b83811061238f5750506000910152565b818101518382015260200161237f565b906020916123b88151809281855285808601910161237c565b601f01601f1916010190565b906000918083526003602052604083209160018060a01b03169182845260205260ff6040842054166123f557505050565b8083526003602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b6002546001600160a01b0316330361244e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b818102929181159184041417156124a557565b634e487b7160e01b600052601160045260246000fd5b919082018092116124a557565b9081518110156124d9570160200190565b634e487b7160e01b600052603260045260246000fd5b906040516124fc81611d03565b82546001600160a01b031681526001830154602082015260028301549092839160ff166005811015611fab5760609160039160408501520154910152565b1561254157565b60405162461bcd60e51b8152602060048201526016602482015275283632b233b4b7339037b910283632b233b2b217171760511b6044820152606490fd5b6125a3939260609260018060a01b031682526020820152816040820152019061239f565b90565b516005811015611fab5790565b90816020910312611196575180151581036111965790565b606081018051156127bf57600480546001600160a01b03929083168015612787578151600381029080820460031490151715612772576005900494848151161580612747575b1561268a5750505134106126515760008093819382935416828215612648575bf11561263c57600190565b6040513d6000823e3d90fd5b506108fc612631565b60649060206040519162461bcd60e51b8352820152601260248201527136b9b3973b30b63ab2903a37b7903637bbbf60711b6044820152fd5b51604080516323b872dd60e01b8152338187019081526001600160a01b039094166020858101919091529184019790975293959485935016908290600090829060600103925af190811561263c57600091612729575b50156126ec5750600190565b60649060206040519162461bcd60e51b835282015260166024820152754552433230207472616e73666572206661696c65642160501b6044820152fd5b612741915060203d8111611a1857611a098183611d54565b386126e0565b506040810151600581101561275d578414612611565b602185634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b60405162461bcd60e51b81526020818501526011602482015270696e636f6d6520616464723d7a65726f2160781b6044820152606490fd5b5050600190565b9093919360409384830180516005811015611fab5760010361285957505090516001600160a01b0316939050833b156111965782516340c10f1960e01b81526001600160a01b0390921660048301526024820152916000908390818381604481015b03925af190811561284f5750612840575b505b600190565b61284990611cd5565b38612839565b513d6000823e3d90fd5b809691939296516005811015611fab576002036128a7575050516001600160a01b0316803b156111965761282894600080948651978895869485936334ff261960e21b85526004850161257f565b9592919095516005811015611fab5760030361290d57516001600160a01b0390811691823b156111965760009461282886928851998a978896879563bb7fde7160e01b87521660048601526024850152604484015260806064840152608483019061239f565b505050505050600090565b606081018051156127bf57815160408301516001600160a01b03909116916005821015611fab5760206125a39401519051913393612a4c565b1561295857565b60405162461bcd60e51b815260206004820152601660248201527504d75737420626520372c33302c36302c39302c3138360541b6044820152606490fd5b9190836129a592339285612a4c565b156129db576001600160a01b0316337f7d11196ad7aec5325589a029930cc3b3c650fa71f6d6bca14bd1c3f4454e99be600080a4565b60405162461bcd60e51b8152602060048201526016602482015275776974686472617750726f666974206661696c65642160501b6044820152606490fd5b91926125a395949160a094600180871b03809216855216602084015260408301526060820152816080820152019061239f565b91906005811015611fab5760018103612ac657505060405163a9059cbb60e01b81526001600160a01b0393841660048201526024810192909252909160209183916044918391600091165af1801561263c57612aa85750600190565b612abf9060203d8111611a1857611a098183611d54565b5038612839565b9093929060028103612b2d5750506001600160a01b031691823b15611196576040516323b872dd60e01b81523060048201526001600160a01b039290921660248301526044820152906000908290606490829084905af1801561263c576128405750600190565b60038196959392949614600014612baf575060405192906001600160a01b0316612b5684611d39565b600092838552813b15612bab578380959697612b8960405198899687958694637921219560e11b86523060048701612a19565b03925af1908115612b9f57506128405750600190565b604051903d90823e3d90fd5b8380fd5b93949293600414159150612bf49050576000808093819382908215612bea575b6001600160a01b031690f161283b576040513d6000823e3d90fd5b6108fc9150612bcf565b5050600090565b60405190612c0882611d03565b60006060838281528260208201528260408201520152565b919082039182116124a557565b91612c39908284613121565b9160018060a01b039182600092168252600160205260409384832090835260205283822093600285019384549360ff8560201c16612c7681611ff6565b8015612e005780612c88600292611ff6565b14612df75763ffffffff9081861660018901546201518090818302858116908103612de357612cb790826124bb565b4210612dc957505064ff0000000019909616640200000000178755612ce191905b9654168461306c565b916060830151928351612cf381611ff6565b612cfc81611ff6565b612d3e5750612d18955086549160038801541692015192612e5c565b6007820190612d28825482612c20565b9155612d39600883019182546124bb565b905590565b9150939491925060018351612d5281611ff6565b612d5b81611ff6565b03612d725750500151612d6d91612492565b612d18565b60028394929451612d8281611ff6565b612d8b81611ff6565b14612d9b575b5050509050612d18565b612dbf93506127109460606020612db6930151015190612492565b91015190612492565b0480388080612d91565b612ce194939850612ddc91925042612c20565b0495612cd8565b634e487b7160e01b85526011600452602485fd5b50505050505090565b835162461bcd60e51b8152602060048201526008602482015267556e506c6564676560c01b6044820152606490fd5b90816020910312611196575160ff811681036111965790565b63ffffffff16604d81116124a557600a0a90565b6001600160a01b0390811694939216848114612f8457604051908163313ce56760e01b9687825281600460209586935afa90811561263c57839160ff91600091612f67575b50169660046040518094819382525afa90811561263c5760ff92600092612f3a575b50501692838514612f225792612ef4612eee61271094612ee9612efa95612f0198612492565b612492565b91612e48565b90612492565b0491612e48565b908115612f0c570490565b634e487b7160e01b600052601260045260246000fd5b916127109450612f369350612ee991612492565b0490565b612f599250803d10612f60575b612f518183611d54565b810190612e2f565b3880612ec3565b503d612f47565b612f7e9150833d8511612f6057612f518183611d54565b38612ea1565b506127109350612f369291612ee991612492565b15612f9f57565b60405162461bcd60e51b815260206004820152600d60248201526c27b7363c9036b0b730b3b2b93f60991b6044820152606490fd5b60609190911b6bffffffffffffffffffffffff1916815260e09190911b6001600160e01b031916601482015260180190565b6040519061301382611d1e565b60006040838281528260208201520152565b6040519061303282611ca4565b600060808361303f612bfb565b8152613049612bfb565b6020820152613056612bfb565b6040820152613063613006565b60608201520152565b613074613025565b50611c4161308e6040938451928391602083019586612fd4565b519020600052600060205263ffffffff600e826000208351936130b085611ca4565b6130b9826124ef565b85526130c7600483016124ef565b60208601526130d8600883016124ef565b818601528051906130e882611d1e565b60ff600c8401548181166130fb81611ff6565b845260081c1615156020830152600d830154908201526060850152015416608082015290565b90916040519160208301936001600160601b0319809260601b16855260601b16603483015260488201526048815261315881611d03565b5190209056fefb80d861da582b723be2d19507ce3e03851820c464abea89156ec77e089b1ad9a264697066735822122046311053717bd200414b217e4a99558bc931eb01b16f40a42a7deaf46ec2ac7064736f6c634300081100332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
    "sourceMap": "271:4055:49:-:0;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;2518:6:20;271:4055:49;;-1:-1:-1;;;;;;271:4055:49;;;719:10:36;271:4055:49;;;;;;;-1:-1:-1;;719:10:36;271:4055:49;2566:40:20;-1:-1:-1;;2566:40:20;443:23:52;271:4055:49;;;;4604:6:18;271:4055:49;;;;;;;;;;4604:22:18;271:4055:49;608:23:52;;271:4055:49;;;;;;7311:22:18;271:4055:49;7360:52:18;;;;;;;;527:21:52;;;271:4055:49;;;;;;;;;;;4604:22:18;271:4055:49;;;;7311:22:18;271:4055:49;7360:52:18;;;271:4055:49;;;;;;719:10:36;271:4055:49;;;;;;;;;;7669:23:18;7665:149;;-1:-1:-1;271:4055:49;;;;;;;;;;719:10:36;271:4055:49;;;;;;;;;;7669:23:18;7665:149;;-1:-1:-1;271:4055:49;;;;;;;;;;719:10:36;271:4055:49;;;;;;;;;;7669:23:18;7665:149;;-1:-1:-1;271:4055:49;;;718:25;271:4055;;;718:25;271:4055;;;;;;;;;7665:149:18;271:4055:49;;;;;;;;719:10:36;;271:4055:49;;;;;;;;;;;;;;;719:10:36;;-1:-1:-1;;;;;;;;;;;719:10:36;7763:40:18;;;7665:149;;;;;;;;271:4055:49;;;;;;;;;719:10:36;271:4055:49;;;;;;;;;;;;;;;;719:10:36;;;7763:40:18;-1:-1:-1;;;;;;;;;;;7763:40:18;;;7665:149;;;;271:4055:49;;;;;;;;;719:10:36;271:4055:49;;;;;;;;;;;;;;;;719:10:36;;;7763:40:18;-1:-1:-1;;;;;;;;;;;7763:40:18;;;7665:149;;;271:4055:49;-1:-1:-1;271:4055:49;;;;;;-1:-1:-1;271:4055:49;;;;;-1:-1:-1;271:4055:49",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714611c4f57508063039ce10614611bcb578063150b7a0214611b7557806316762eed146118e557806322eb7931146118c4578063248a9ca31461189757806326cbd26b146113eb57806327a99cb1146113395780632f2ff15d1461128657806334771e621461126957806336568abe146111d6578063444bbb541461119b57806359f1da6c146110805780636394f6e6146110455780636c83fc341461101857806370dcbfc614610f41578063715018a614610ee35780638703ba2b14610ea35780638da5cb5b14610e7a57806391d1485414610e2e57806396c817e7146109a85780639785207e14610965578063a217fddf14610949578063a68aede014610820578063ac346a1f14610791578063bb7fde7114610758578063bc197c81146106cf578063d35c9a07146105b3578063d547741f14610572578063e58378bb14610537578063f23a6e61146104dd578063f2fde38b14610417578063f7c24aa31461036a5763f9dfa79f1461019757600080fd5b34610367576040366003190112610367576101b0611d75565b90602435916101c0838233612c2d565b92600284015491602092600260ff82861c166101db81611ff6565b0361032d5761020560406101fe63ffffffff60088a01948986549655168561306c565b51016125a6565b9061023a600388019260018060a01b039283855416908760ff60058d0154168261031b575b505050503390868a549187612a4c565b156102de578660078261029597989954945416910154906040519386855288850152604084015260608301528216907f7f17ff0c099057bb0e700cc8906e38df4274727452016bb115c5fa3138a6de9460803392a333613121565b9033835260018152604083209183525280600860408220828155826001820155826002820155826003820155826004820155826005820155826006820155826007820155015580f35b60405162461bcd60e51b81526004810186905260156024820152741dda5d1a191c985dd41b195919d94819985a5b1959605a1b6044820152606490fd5b61032493612996565b3880878161022a565b60405162461bcd60e51b8152600481018590526012602482015271506c6564676520756e66696e69736865642160701b6044820152606490fd5b80fd5b5034610367576020366003190112610367576004356001600160a01b03818116918290036104135761039a61243a565b81156103df57600454826001600160601b0360a01b8216176004551690337facfdf2068f2b4dda3f4970ef49a4cad3a0a7735a3badb3577bcabb3a889807388480a480f35b60405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606490fd5b8280fd5b503461036757602036600319011261036757610431611d75565b61043961243a565b6001600160a01b0390811690811561048957600254826001600160601b0360a01b821617600255167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b50346103675760a0366003190112610367576104f7611d75565b50610500611d8b565b506084356001600160401b03811161053357610520903690600401611f20565b5060405163f23a6e6160e01b8152602090f35b5080fd5b503461036757806003193601126103675760206040517fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e8152f35b5034610367576040366003190112610367576105b0600435610592611d8b565b9080845260036020526105ab600160408620015461208a565b6123c4565b80f35b5034610367576040366003190112610367576105cd611d75565b90602435916105dd838233612c2d565b600160ff6105f760028401549463ffffffff86169061306c565b9360201c1661060581611ff6565b1461068f575b600801928354918215610656576040849101519455604060018060a01b038551169401516005811015610642576105b09394612996565b634e487b7160e01b84526021600452602484fd5b60405162461bcd60e51b81526020600482015260116024820152702737ba3434b733903bb4ba34323930bbbf60791b6044820152606490fd5b60206060830151015161060b5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08195e1c1a5c995960aa1b6044820152606490fd5b50346103675760a0366003190112610367576106e9611d75565b506106f2611d8b565b506001600160401b0360443581811161041357610713903690600401612024565b506064358181116104135761072c903690600401612024565b5060843590811161053357610745903690600401611f20565b5060405163bc197c8160e01b8152602090f35b5060803660031901126103675761076d611d75565b506064356001600160401b0381116105335761078d903690600401611f20565b5080f35b5034610367576040366003190112610367576102006107c86107b1611d75565b6107b9611da1565b906107c2613025565b5061306c565b63ffffffff6080604051926107de848251611f76565b6107ef602082015183860190611f76565b6108026040820151610100860190611f76565b6108156060820151610180860190612000565b0151166101e0820152f35b50346103675761087960406101409261083836611fc1565b8451959161084587611ce8565b8487528460c0602098828a8201528289820152826060820152610866612bfb565b60808201528260a0820152015283613121565b6001600160a01b0390911682526001845282822090825283522060405191906108a183611ce8565b805483526109396001820154928085019384526002830154604086019060ff63ffffffff918281168452841c169160608801926108dd81611ff6565b83526108eb600387016124ef565b9360808901948552600860078801549760a08b0198895201549760c08a0198895260405199518a525190890152511660408701525161092981611ff6565b6060860152516080850190611f76565b5161010083015251610120820152f35b5034610367578060031936011261036757602090604051908152f35b50346103675760403660031901126103675760806040610997610986611d75565b61098e611da1565b906107c2612bfb565b01516109a66040518092611f76565bf35b5034610367576109b736611db4565b93907f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e93929380875260036020526040872033600052602052610a0160ff60406000205416612f98565b8251604051919060208301908390610a24908a906001600160a01b031684612fd4565b0392610a38601f1994858101835282611d54565b5190208852602088905260408820546001600160a01b0316610dfe57875260036020526040872033600052602052610a7760ff60406000205416612f98565b60018060a01b0383511690610aa56040519182610a998a602083019687612fd4565b03908101835282611d54565b5190206040830180516005811015610ce757600214908115610dd5575b50610d6c575b60028251610ad581611ff6565b610ade81611ff6565b14610cfb575b60405191610af183611ca4565b838352846020840152856040840152606083015263ffffffff8616608083015286528560205260408620815160018060a01b038151166001600160601b0360a01b8354161782556020810151600183015560408101516005811015610ce75790606091600284019060ff80198354169116179055015160038201556004810160208301519060018060a01b038251166001600160601b0360a01b8254161790556020810151600583015560408101516005811015610ce75790606091600684019060ff80198354169116179055015160078201556008810160408301519060018060a01b038251166001600160601b0360a01b82541617905560208101516009830155600a820160408201516005811015610cd357600e7f503a67cd493984ff3a6495c853a044d67761c1b50b5042507c813e773075e37c969460606020979563ffffffff9560809560ff801983541691161790550151600b8201556040600c82016060870151908151610c6481611ff6565b610c6d81611ff6565b815460ff61ff008d860151151560081b1692169061ffff1916171790550151600d820155019201511663ffffffff1982541617905560018060a01b039051169260018060a01b039051169360018060a01b039051169463ffffffff60405191168152a480f35b634e487b7160e01b8a52602160045260248afd5b634e487b7160e01b89526021600452602489fd5b835185516001600160a01b03908116911614610ae45760405162461bcd60e51b815260206004820152602d60248201527f50726f666974547970652e50617950726963655065723d3e706179546f6b656e60448201526c1e9eb83937b334ba2a37b5b2b760991b6064820152608490fd5b8151610d7781611ff6565b610d8081611ff6565b610ac85760405162461bcd60e51b8152602060048201526024808201527f4e465420706c65646765206d75737420757365205061795072696365506572206044820152637479706560e01b6064820152608490fd5b9050516005811015610dea5760031438610ac2565b634e487b7160e01b88526021600452602488fd5b60405162461bcd60e51b8152602060048201526008602482015267657869737465642160c01b6044820152606490fd5b5034610367576040366003190112610367576040610e4a611d8b565b9160043581526003602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346103675780600319360112610367576002546040516001600160a01b039091168152602090f35b503461036757604036600319011261036757606080610ed4610ec3611d75565b610ecb611da1565b906107c2613006565b01516109a66040518092612000565b5034610367578060031936011261036757610efc61243a565b600280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461036757610f61604060c092610f5836611fc1565b90829592613121565b6001600160a01b03938416825260016020908152838320918352522060405190610f8a82611ce8565b80548252600181015492602083019384526002820154604084019160ff63ffffffff92838116855260201c16610fbf81611ff6565b6060860152610fd0600385016124ef565b9182608087015260086007860154958660a0890152015495868982015251965193511691511691604051958652602086015260408501526060840152608083015260a0820152f35b5034610367576040366003190112610367576080611037610986611d75565b516109a66040518092611f76565b503461036757806003193601126103675760206040517fa952726ef2588ad078edf35b066f7c7406e207cb0003bbaba8cb53eba9553e728152f35b50346103675760803660031901126103675761109a611d75565b60643563ffffffff90818116809103611196576105b0926110d88260076110e2941490811561118b575b8115611180575b8115611175575b50612951565b6024359033613121565b338452600160205260408420908452602052604083209060c0600860ff6040519361110c85611ce8565b85548552600186015460208601526002860154908116604086015260201c1693606084019461113a81611ff6565b8552611148600382016124ef565b6080850152600781015460a085015201549101525161116681611ff6565b61116f81611ff6565b1561253a565b60b4915014386110d2565b605a811491506110cb565b601e811491506110c4565b600080fd5b503461036757806003193601126103675760206040517f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e8152f35b5034610367576040366003190112610367576111f0611d8b565b336001600160a01b0382160361120c576105b0906004356123c4565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461036757806003193601126103675760206040516127108152f35b5034610367576040366003190112610367576004356112a3611d8b565b81835260036020526112bb600160408520015461208a565b8183526003602052604083209060018060a01b0316908160005260205260ff60406000205416156112ea578280f35b818352600360205260408320816000526020526040600020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b50346103675760a061135361134d36611fc1565b91612c2d565b60405161135f81611ce8565b8154815260018201546020820152600282015491604082019260ff63ffffffff91828116865260201c1661139281611ff6565b60608401526113a3600383016124ef565b90816080850152600860078401549384888701520154938460c08201525194511690600180871b03905116906040519485526020850152604084015260608301526080820152f35b5060a036600319011261036757611400611d75565b6064356001600160401b0381116104135761141f903690600401611f20565b63ffffffff60843516608435036111965761143d6024358333613121565b33845260016020526040842090845260205261149a6040842060405161146281611ce8565b815481526001820154602082015260c0600860ff600285015463ffffffff8116604086015260201c1693606084019461113a81611ff6565b6114a66084358361306c565b8051516001600160a01b031615611859576114c460208201516125cb565b15611814576114db308360443560243585516127c6565b156117e05760406114ed910151612918565b1561179b57604051602435916001600160a01b038416917fad2943b15836caf43698401a62af4738985fb33dd979844d99d37f5293f037d391819061153690604435338461257f565b0390a3600763ffffffff60843516148015611789575b8015611777575b8015611765575b61156390612951565b6044356115736024358333613121565b61157f6084358461306c565b61158c60408251016125a6565b6005811015611751576002146116fa575b6040015190604051916115af83611ce8565b83835242602084015263ffffffff6084351660408401526001606084015260808301528460a08301528460c0830152338552600160205260408520908552602052604084209080518255602081015160018301556002820163ffffffff60408301511681549064ff00000000606085015161162981611ff6565b61163281611ff6565b60201b169164ffffffffff1916171790556003820160808201519060018060a01b038251166001600160601b0360a01b825416179055602081015160048401556005830160408201516005811015610dea5760c0926008949260609260ff801983541691161790550151600685015560a081015160078501550151910155604051906024358252602082015263ffffffff608435169160018060a01b0316907f7ea654199703f048d1efb719754a27859d7289ddb9088d0a8e14e413ada7192a60403392a480f35b91506024351561170c5760019161159d565b60405162461bcd60e51b815260206004820152601860248201527f696e7661696c65642045524337323120746f6b656e49647e00000000000000006044820152606490fd5b634e487b7160e01b86526021600452602486fd5b5060843563ffffffff1660b41461155a565b50605a63ffffffff6084351614611553565b50601e63ffffffff608435161461154c565b60405162461bcd60e51b815260206004820152601860248201527f61697244726f70546f6b656e20756e66696e69736865642100000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b6d696e74206661696c65642160a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f706179546f6b656e2068616e646c65206661696c6564210000000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152756e6f74207468697320706c6564676520746f6b656e2160501b6044820152606490fd5b50346103675760203660031901126103675760016040602092600435815260038452200154604051908152f35b50346103675760403660031901126103675760806020610997610986611d75565b5034610367576080366003190112610367576118ff611d75565b6001600160a01b0360643581811692604435926024359190858403611b715761192661243a565b8515611b3d571691839083611993575085908582821561198a575b839283928392f11561197f5761197960008051602061315f833981519152915b60408051338152602081019290925290918291820190565b0390a480f35b6040513d86823e3d90fd5b506108fc611941565b8683611a2a575060405163a9059cbb60e01b81526001600160a01b0391909116600482015260248101919091529060208260448189875af1908115611a1f5760008051602061315f83398151915292611979926119f1575b50611961565b611a119060203d8111611a18575b611a098183611d54565b8101906125b3565b50386119eb565b503d6119ff565b6040513d88823e3d90fd5b9115611ab95760405190611a3d82611d39565b828252843b1561041357838391611a6b88946040519586948594637921219560e11b86523060048701612a19565b038183885af18015611aae57611a96575b505061197960008051602061315f83398151915291611961565b611a9f90611cd5565b611aaa578438611a7c565b8480fd5b6040513d84823e3d90fd5b90833b15610367576040516323b872dd60e01b81523060048201526001600160a01b03929092166024830152604482018390528160648183875af18015611a1f57611b18575b5061197960008051602061315f83398151915291611961565b60008051602061315f8339815191529195611b3561197992611cd5565b959150611aff565b60405162461bcd60e51b815260206004820152600c60248201526b32b939103932b1b2b4bb32b960a11b6044820152606490fd5b8680fd5b503461036757608036600319011261036757611b8f611d75565b50611b98611d8b565b506064356001600160401b03811161053357611bb8903690600401611f20565b50604051630a85bd0160e11b8152602090f35b503461036757611bda36611db4565b93907f559ed53715d3bb4e833868d1befaf5d894eb100353e9c04fc83767f0f381473e8694939452600360205260408620338752602052611c2160ff604088205416612f98565b60018060a01b03825116604051610aa581611c4189602083019586612fd4565b03601f198101835282611d54565b9050346105335760203660031901126105335760043563ffffffff60e01b81168091036104135760209250637965db0b60e01b8114908115611c93575b5015158152f35b6301ffc9a760e01b14905038611c8c565b60a081019081106001600160401b03821117611cbf57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611cbf57604052565b60e081019081106001600160401b03821117611cbf57604052565b608081019081106001600160401b03821117611cbf57604052565b606081019081106001600160401b03821117611cbf57604052565b602081019081106001600160401b03821117611cbf57604052565b90601f801991011681019081106001600160401b03821117611cbf57604052565b600435906001600160a01b038216820361119657565b602435906001600160a01b038216820361119657565b6024359063ffffffff8216820361119657565b600319810191906102008312611196576080809312611196576040805192906001600160401b039085850182811186821017611cbf5781526001600160a01b039460043586811681036111965781526024356020820152604435600581101561119657828201526064356060820152958060831986011261119657815181810181811085821117611cbf578352608435878116810361119657815260a435602082015260c4356005811015611196578382015260e435606082015295816101031987011261119657825191820182811085821117611cbf578352610104359081168103611196578152610124356020820152610144359060058210156111965760609183820152610164358282015294610183190112611196578051916060830190811183821017611cbf5781526101843560038110156111965782526101a43580151581036111965760208301526101c43590820152906101e43563ffffffff811681036111965790565b81601f82011215611196578035906001600160401b038211611cbf5760405192611f54601f8401601f191660200185611d54565b8284526020838301011161119657816000926020809301838601378301015290565b80516001600160a01b031682526020808201519083015260408101516005811015611fab576040830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b6060906003190112611196576001600160a01b0390600435828116810361119657916024359081168103611196579060443590565b60031115611fab57565b60408091805161200f81611ff6565b84526020810151151560208501520151910152565b9080601f83011215611196578135906001600160401b038211611cbf578160051b6040519360209361205885840187611d54565b85528380860192820101928311611196578301905b82821061207b575050505090565b8135815290830190830161206d565b60009080825260209060038252604092838120338252835260ff8482205416156120b45750505050565b338451926120c184611d1e565b602a845284840190863683378451156123685760308253845192600193841015612354576078602187015360295b8481116122ea57506122a85786519261210784611d03565b60428452868401946060368737845115612294576030865384518210156122945790607860218601536041915b818311612226575050506121e4576121e09386936121c4936121b560489461218c9a519a8b957f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008c880152518092603788019061237c565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061237c565b01036028810187520185611d54565b5192839262461bcd60e51b84526004840152602483019061239f565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015612280576f181899199a1a9b1b9c1cb0b131b232b360811b901a61225685886124c8565b5360041c92801561226c57600019019190612134565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b60648688519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015612340576f181899199a1a9b1b9c1cb0b131b232b360811b901a61231883896124c8565b5360041c90801561232c57600019016120ef565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b84526032600452602484fd5b60005b83811061238f5750506000910152565b818101518382015260200161237f565b906020916123b88151809281855285808601910161237c565b601f01601f1916010190565b906000918083526003602052604083209160018060a01b03169182845260205260ff6040842054166123f557505050565b8083526003602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b6002546001600160a01b0316330361244e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b818102929181159184041417156124a557565b634e487b7160e01b600052601160045260246000fd5b919082018092116124a557565b9081518110156124d9570160200190565b634e487b7160e01b600052603260045260246000fd5b906040516124fc81611d03565b82546001600160a01b031681526001830154602082015260028301549092839160ff166005811015611fab5760609160039160408501520154910152565b1561254157565b60405162461bcd60e51b8152602060048201526016602482015275283632b233b4b7339037b910283632b233b2b217171760511b6044820152606490fd5b6125a3939260609260018060a01b031682526020820152816040820152019061239f565b90565b516005811015611fab5790565b90816020910312611196575180151581036111965790565b606081018051156127bf57600480546001600160a01b03929083168015612787578151600381029080820460031490151715612772576005900494848151161580612747575b1561268a5750505134106126515760008093819382935416828215612648575bf11561263c57600190565b6040513d6000823e3d90fd5b506108fc612631565b60649060206040519162461bcd60e51b8352820152601260248201527136b9b3973b30b63ab2903a37b7903637bbbf60711b6044820152fd5b51604080516323b872dd60e01b8152338187019081526001600160a01b039094166020858101919091529184019790975293959485935016908290600090829060600103925af190811561263c57600091612729575b50156126ec5750600190565b60649060206040519162461bcd60e51b835282015260166024820152754552433230207472616e73666572206661696c65642160501b6044820152fd5b612741915060203d8111611a1857611a098183611d54565b386126e0565b506040810151600581101561275d578414612611565b602185634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b60405162461bcd60e51b81526020818501526011602482015270696e636f6d6520616464723d7a65726f2160781b6044820152606490fd5b5050600190565b9093919360409384830180516005811015611fab5760010361285957505090516001600160a01b0316939050833b156111965782516340c10f1960e01b81526001600160a01b0390921660048301526024820152916000908390818381604481015b03925af190811561284f5750612840575b505b600190565b61284990611cd5565b38612839565b513d6000823e3d90fd5b809691939296516005811015611fab576002036128a7575050516001600160a01b0316803b156111965761282894600080948651978895869485936334ff261960e21b85526004850161257f565b9592919095516005811015611fab5760030361290d57516001600160a01b0390811691823b156111965760009461282886928851998a978896879563bb7fde7160e01b87521660048601526024850152604484015260806064840152608483019061239f565b505050505050600090565b606081018051156127bf57815160408301516001600160a01b03909116916005821015611fab5760206125a39401519051913393612a4c565b1561295857565b60405162461bcd60e51b815260206004820152601660248201527504d75737420626520372c33302c36302c39302c3138360541b6044820152606490fd5b9190836129a592339285612a4c565b156129db576001600160a01b0316337f7d11196ad7aec5325589a029930cc3b3c650fa71f6d6bca14bd1c3f4454e99be600080a4565b60405162461bcd60e51b8152602060048201526016602482015275776974686472617750726f666974206661696c65642160501b6044820152606490fd5b91926125a395949160a094600180871b03809216855216602084015260408301526060820152816080820152019061239f565b91906005811015611fab5760018103612ac657505060405163a9059cbb60e01b81526001600160a01b0393841660048201526024810192909252909160209183916044918391600091165af1801561263c57612aa85750600190565b612abf9060203d8111611a1857611a098183611d54565b5038612839565b9093929060028103612b2d5750506001600160a01b031691823b15611196576040516323b872dd60e01b81523060048201526001600160a01b039290921660248301526044820152906000908290606490829084905af1801561263c576128405750600190565b60038196959392949614600014612baf575060405192906001600160a01b0316612b5684611d39565b600092838552813b15612bab578380959697612b8960405198899687958694637921219560e11b86523060048701612a19565b03925af1908115612b9f57506128405750600190565b604051903d90823e3d90fd5b8380fd5b93949293600414159150612bf49050576000808093819382908215612bea575b6001600160a01b031690f161283b576040513d6000823e3d90fd5b6108fc9150612bcf565b5050600090565b60405190612c0882611d03565b60006060838281528260208201528260408201520152565b919082039182116124a557565b91612c39908284613121565b9160018060a01b039182600092168252600160205260409384832090835260205283822093600285019384549360ff8560201c16612c7681611ff6565b8015612e005780612c88600292611ff6565b14612df75763ffffffff9081861660018901546201518090818302858116908103612de357612cb790826124bb565b4210612dc957505064ff0000000019909616640200000000178755612ce191905b9654168461306c565b916060830151928351612cf381611ff6565b612cfc81611ff6565b612d3e5750612d18955086549160038801541692015192612e5c565b6007820190612d28825482612c20565b9155612d39600883019182546124bb565b905590565b9150939491925060018351612d5281611ff6565b612d5b81611ff6565b03612d725750500151612d6d91612492565b612d18565b60028394929451612d8281611ff6565b612d8b81611ff6565b14612d9b575b5050509050612d18565b612dbf93506127109460606020612db6930151015190612492565b91015190612492565b0480388080612d91565b612ce194939850612ddc91925042612c20565b0495612cd8565b634e487b7160e01b85526011600452602485fd5b50505050505090565b835162461bcd60e51b8152602060048201526008602482015267556e506c6564676560c01b6044820152606490fd5b90816020910312611196575160ff811681036111965790565b63ffffffff16604d81116124a557600a0a90565b6001600160a01b0390811694939216848114612f8457604051908163313ce56760e01b9687825281600460209586935afa90811561263c57839160ff91600091612f67575b50169660046040518094819382525afa90811561263c5760ff92600092612f3a575b50501692838514612f225792612ef4612eee61271094612ee9612efa95612f0198612492565b612492565b91612e48565b90612492565b0491612e48565b908115612f0c570490565b634e487b7160e01b600052601260045260246000fd5b916127109450612f369350612ee991612492565b0490565b612f599250803d10612f60575b612f518183611d54565b810190612e2f565b3880612ec3565b503d612f47565b612f7e9150833d8511612f6057612f518183611d54565b38612ea1565b506127109350612f369291612ee991612492565b15612f9f57565b60405162461bcd60e51b815260206004820152600d60248201526c27b7363c9036b0b730b3b2b93f60991b6044820152606490fd5b60609190911b6bffffffffffffffffffffffff1916815260e09190911b6001600160e01b031916601482015260180190565b6040519061301382611d1e565b60006040838281528260208201520152565b6040519061303282611ca4565b600060808361303f612bfb565b8152613049612bfb565b6020820152613056612bfb565b6040820152613063613006565b60608201520152565b613074613025565b50611c4161308e6040938451928391602083019586612fd4565b519020600052600060205263ffffffff600e826000208351936130b085611ca4565b6130b9826124ef565b85526130c7600483016124ef565b60208601526130d8600883016124ef565b818601528051906130e882611d1e565b60ff600c8401548181166130fb81611ff6565b845260081c1615156020830152600d830154908201526060850152015416608082015290565b90916040519160208301936001600160601b0319809260601b16855260601b16603483015260488201526048815261315881611d03565b5190209056fefb80d861da582b723be2d19507ce3e03851820c464abea89156ec77e089b1ad9a264697066735822122046311053717bd200414b217e4a99558bc931eb01b16f40a42a7deaf46ec2ac7064736f6c63430008110033",
    "sourceMap": "271:4055:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12724:48:50;271:4055:49;12724:48:50;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;5528:10:50;5514:42;5528:10;;;5514:42;:::i;:::-;5574:7;;;;271:4055:49;;;;5574:7:50;271:4055:49;;;;;;;;:::i;:::-;5574:30:50;271:4055:49;;5814:24:50;271:4055:49;5748:36:50;271:4055:49;5653:12:50;;;271:4055:49;;;;;;;5748:36:50;;:::i;:::-;5814:16;:24;;:::i;:::-;5870:11;6056:68;271:4055:49;5870:11:50;;271:4055:49;;;;;;;;;;;5917:19:50;;271:4055:49;5917:19:50;;;271:4055:49;;5950:10:50;5946:93;;271:4055:49;5528:10:50;;;;;271:4055:49;;;;6056:68:50;;;:::i;:::-;271:4055:49;;;;6240:13:50;271:4055:49;1320:37:50;271:4055:49;;;;;;;6240:13:50;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;5528:10:50;6164:90;271:4055:49;5528:10:50;6164:90;;5528:10;1320:37;:::i;:::-;5528:10;;271:4055:49;;;;;;;;;;;;;5653:12:50;271:4055:49;;;;;;;;;;;;5574:7:50;271:4055:49;;;;;;;;;;;;;;5917:19:50;271:4055:49;;;;;;;;;6240:13:50;271:4055:49;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;5946:93:50;6021:6;;;:::i;:::-;5946:93;;;;;;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;1063:62:20;;:::i;:::-;3232:20:49;;271:4055;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;3376:10;;3363:41;;;;271:4055;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;1063:62:20;;:::i;:::-;-1:-1:-1;;;;;271:4055:49;;;;2162:22:20;;271:4055:49;;2518:6:20;271:4055:49;;-1:-1:-1;;;;;271:4055:49;;;;;2518:6:20;271:4055:49;;2566:40:20;271:4055:49;2566:40:20;;271:4055:49;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;:::i;:::-;-1:-1:-1;271:4055:49;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;608:23:52;271:4055:49;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;5486:7:18;271:4055:49;;;;:::i;:::-;;;;;;;;2642:4:18;271:4055:49;;;;4604:22:18;271:4055:49;2642:4:18;:::i;:::-;5486:7;:::i;:::-;271:4055:49;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;3846:10:50;3832:45;3846:10;;;3832:45;:::i;:::-;271:4055:49;;3911:39:50;3937:12;;;271:4055:49;;;;;3911:39:50;;:::i;:::-;271:4055:49;;;;;;;:::i;:::-;3964:31:50;3960:127;;271:4055:49;4114:12:50;;271:4055:49;;;4144:10:50;;;271:4055:49;;;4214:16:50;;;;271:4055:49;;;;;;;;;;;4301:19:50;;271:4055:49;;;;;;;4329:6:50;;;;:::i;271:4055:49:-;-1:-1:-1;;;271:4055:49;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;3960:127:50;271:4055:49;4031:17:50;;;;:30;271:4055:49;3960:127:50;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;271:4055:49;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;271:4055:49;;-1:-1:-1;;;271:4055:49;;;;;;-1:-1:-1;271:4055:49;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;2569:35:51;271:4055:49;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;2569:35:51;:::i;:::-;271:4055:49;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1320:37:50;271:4055:49;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1320:37:50;;:::i;:::-;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;12544:35:50;271:4055:49;;:::i;:::-;;;:::i;:::-;;;;:::i;12544:35:50:-;:47;;271:4055:49;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;527:21:52;;;;;;271:4055:49;;;3130:6:18;271:4055:49;;;;;719:10:36;271:4055:49;;;;1345:55:52;271:4055:49;;;;;;1345:55:52;:::i;:::-;271:4055:49;;;;;;;10521:46:50;;;271:4055:49;;10521:46:50;;;;-1:-1:-1;;;;;271:4055:49;10521:46:50;;:::i;:::-;;10964;10521;10964;;10521;;;;;;;;:::i;:::-;271:4055:49;3178:15:51;;271:4055:49;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;3130:6:18;271:4055:49;;;;;719:10:36;271:4055:49;;;;1345:55:52;271:4055:49;;;;;;1345:55:52;:::i;:::-;271:4055:49;;;;;;;;;10964:46:50;271:4055:49;;10964:46:50;;;;271:4055:49;10964:46:50;;;;;:::i;:::-;;;;;;;;;:::i;:::-;271:4055:49;3178:15:51;;271:4055:49;11113:19:50;;271:4055:49;;;;;;;;11136:14:50;11113:37;:79;;;;;271:4055:49;11110:286:50;;;271:4055:49;11136:14:50;271:4055:49;;;;;:::i;:::-;;;;:::i;:::-;11544:49:50;11540:180;;271:4055:49;;;;;;;:::i;:::-;;;;11754:229:50;271:4055:49;11754:229:50;;271:4055:49;11754:229:50;271:4055:49;11754:229:50;;271:4055:49;11754:229:50;;;271:4055:49;;;;11754:229:50;;;271:4055:49;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;11754:229:50;271:4055:49;11136:14:50;271:4055:49;;;;;;;;;;;;;;;;3130:6:18;271:4055:49;;;;;;;11754:229:50;;271:4055:49;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;11754:229:50;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;11754:229:50;;271:4055:49;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11999:78:50;271:4055:49;;11754:229:50;271:4055:49;;;;;11754:229:50;271:4055:49;;;;;;;;;;;;;;;;;;;;;;11754:229:50;;;271:4055:49;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11754:229:50;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11999:78:50;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;11540:180:50;271:4055:49;;;;-1:-1:-1;;;;;271:4055:49;;;;;11621:35:50;11540:180;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;11110:286:50;271:4055:49;;;;;:::i;:::-;;;;:::i;:::-;11110:286:50;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;11113:79:50;271:4055:49;;;;;;;;;3130:6:18;11154:38:50;11113:79;;;271:4055:49;-1:-1:-1;;;271:4055:49;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:6:20;271:4055:49;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;12724:48:50;271:4055:49;12724:35:50;271:4055:49;;:::i;:::-;;;:::i;:::-;;;;:::i;12724:35:50:-;:48;;271:4055:49;;;;;;:::i;:::-;;;;;;;;;;;;;1063:62:20;;:::i;:::-;2518:6;271:4055:49;;-1:-1:-1;;;;;;271:4055:49;;;;;;;-1:-1:-1;;;;;271:4055:49;2566:40:20;271:4055:49;;2566:40:20;271:4055:49;;;;;;;1320:37:50;271:4055:49;;;;;;:::i;:::-;1320:37:50;;;;;:::i;:::-;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;12204:35:50;271:4055:49;;:::i;12204:35:50:-;:47;271:4055:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;443:23:52;271:4055:49;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;;;;;;;;;;2356:71:51;2022:15;2014:110;2022:15;2036:1;2233:44;2022:15;;:35;;;;;271:4055:49;2022:55:51;;;;271:4055:49;2022:76:51;;;;271:4055:49;2014:110:51;;:::i;:::-;271:4055:49;;2248:10:51;;2233:44;:::i;:::-;2248:10;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2036:1:51;271:4055:49;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;2364:36:51;2356:71;:::i;2022:76::-;2095:3;2081:17;;;2022:76;;;:55;2075:2;2061:16;;;-1:-1:-1;2022:55:51;;:35;2055:2;2041:16;;;-1:-1:-1;2022:35:51;;271:4055:49;;;;;;;;;;;;;;;;;;;;527:21:52;271:4055:49;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;719:10:36;-1:-1:-1;;;;;271:4055:49;;6133:23:18;271:4055:49;;6237:7:18;271:4055:49;;;6237:7:18;:::i;271:4055:49:-;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;229:5:51;271:4055:49;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;;;:::i;:::-;;;;;;;2642:4:18;271:4055:49;;;;4604:22:18;271:4055:49;2642:4:18;:::i;:::-;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;7669:23:18;7665:149;;271:4055:49;;;7665:149:18;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;719:10:36;7763:40:18;;;;;7665:149;;271:4055:49;;;;;;;;;7413:36:50;271:4055:49;;;:::i;:::-;7413:36:50;;:::i;:::-;271:4055:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;271:4055:49;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;:::i;:::-;;;;;;;;;;2233:44:51;271:4055:49;;2248:10:51;;2233:44;:::i;:::-;2248:10;271:4055:49;;;;;;;;;;;;;2356:71:51;271:4055:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2356:71:51:-;1913:35:49;271:4055;;1913:35;;:::i;:::-;1966:16;;271:4055;-1:-1:-1;;;;;271:4055:49;1966:36;271:4055;;2046:32;271:4055;2064:13;;;2046:32;:::i;:::-;271:4055;;;2123:64;1575:4;271:4055;;;;;2137:16;;2123:64;:::i;:::-;271:4055;;;;2221:39;2243:16;;;2221:39;:::i;:::-;271:4055;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;2303:51;;271:4055;;2303:51;;271:4055;;2248:10:51;271:4055:49;2303:51;:::i;:::-;;;;271:4055;;;;;2022:15:51;:35;;;;271:4055:49;2022:55:51;;;;271:4055:49;2022:76:51;;;;271:4055:49;2014:110:51;;;:::i;:::-;271:4055:49;;2854:37:50;271:4055:49;;2248:10:51;;2854:37:50;:::i;:::-;2929:35;271:4055:49;;2929:35:50;;:::i;:::-;2982:24;271:4055:49;2982:16:50;;:24;;:::i;:::-;271:4055:49;;;;;;;2982:42:50;2978:157;;271:4055:49;;3176:16:50;;271:4055:49;;;;;;;:::i;:::-;;;;3357:15:50;271:4055:49;3238:292:50;;271:4055:49;;;;;;3238:292:50;;271:4055:49;;;3238:292:50;;271:4055:49;;3238:292:50;;271:4055:49;3238:292:50;271:4055:49;3238:292:50;;271:4055:49;3238:292:50;271:4055:49;3238:292:50;;271:4055:49;2248:10:51;271:4055:49;;;;;;;;;;;;;;;;;;;;;;3238:292:50;;271:4055:49;;;;;;;;;;3238:292:50;;271:4055:49;;;;3238:292:50;271:4055:49;;3238:292:50;;271:4055:49;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;3238:292:50;;271:4055:49;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3238:292:50;;271:4055:49;;;;;3238:292:50;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;2248:10:51;3550:52:50;271:4055:49;2248:10:51;3550:52:50;;271:4055:49;;2978:157:50;271:4055:49;;;;3052:12:50;271:4055:49;;;;2978:157:50;;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;2022:76:51;-1:-1:-1;271:4055:49;;;;2095:3:51;2081:17;2022:76;;:55;271:4055:49;2075:2:51;271:4055:49;;;;2061:16:51;2022:55;;:35;271:4055:49;2055:2:51;271:4055:49;;;;2041:16:51;2022:35;;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;;;;;;;;;;;4604:22:18;271:4055:49;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;12374:35:50;271:4055:49;;:::i;:::-;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;1063:62:20;;:::i;:::-;1545:22:52;;271:4055:49;;;;;;1596:23:52;271:4055:49;;1640:34:52;;;;;;;;;1592:481;1640:34;;;;;;;;;;2087:54;-1:-1:-1;;;;;;;;;;;1592:481:52;;271:4055:49;;;2096:10:52;271:4055:49;;;;;;;;;;;;;;;;;2087:54:52;;;;271:4055:49;;1640:34:52;271:4055:49;;;;;;;;;1640:34:52;-1:-1:-1;1640:34:52;;;1592:481;1708:12;;;;-1:-1:-1;271:4055:49;;-1:-1:-1;;;1748:43:52;;-1:-1:-1;;;;;271:4055:49;;;;;1748:43:52;;271:4055:49;;;;;;;;;;;;;1748:43:52;;;;;;;;;-1:-1:-1;;;;;;;;;;;1748:43:52;2087:54;1748:43;;;1704:359;;1592:481;;1748:43;;;271:4055:49;1748:43:52;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;271:4055:49;;;;;;;;;1704:359:52;1814:10;;;;271:4055:49;;;;;;:::i;:::-;;;;1853:85:52;;;;;271:4055:49;;;1853:85:52;271:4055:49;;;;;;;;;;;;1853:85:52;;1898:4;271:4055:49;1853:85:52;;;:::i;:::-;;;;;;;;;;;;;1811:252;;;2087:54;-1:-1:-1;;;;;;;;;;;1811:252:52;1592:481;;1853:85;;;;:::i;:::-;271:4055:49;;1853:85:52;;;;271:4055:49;;;;1853:85:52;271:4055:49;;;;;;;;;1811:252:52;1985:63;;;;;;271:4055:49;;-1:-1:-1;;;1985:63:52;;2025:4;271:4055:49;1985:63:52;;271:4055:49;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;1985:63:52;;;;;;;;;;1811:252;;2087:54;-1:-1:-1;;;;;;;;;;;1811:252:52;1592:481;;1985:63;-1:-1:-1;;;;;;;;;;;1985:63:52;;;2087:54;1985:63;;:::i;:::-;;;;;;271:4055:49;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;:::i;:::-;-1:-1:-1;271:4055:49;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;:::i;:::-;;;527:21:52;271:4055:49;;;;;3130:6:18;271:4055:49;;;;;719:10:36;271:4055:49;;;;1345:55:52;271:4055:49;;;;;;1345:55:52;:::i;:::-;271:4055:49;;;;;;;;;;10964:46:50;;;;271:4055:49;10964:46:50;;;;;:::i;:::-;;;;;;;;;;:::i;271:4055:49:-;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2840:47:18;;;:87;;;;271:4055:49;;;;;;;2840:87:18;-1:-1:-1;;;937:40:38;;-1:-1:-1;2840:87:18;;;271:4055:49;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;:::o;:::-;;10964:46:50;;;271:4055:49;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;271:4055:49;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;271:4055:49;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;271:4055:49;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;10964:46:50;271:4055:49;;-1:-1:-1;;271:4055:49;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;271:4055:49;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;271:4055:49;;;;;-1:-1:-1;271:4055:49;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;271:4055:49;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;3460:103:18;-1:-1:-1;271:4055:49;;;;;;3130:6:18;271:4055:49;;;;;;;719:10:36;271:4055:49;;;;;;;;;;3931:23:18;3927:390;;3460:103;;;;:::o;3927:390::-;719:10:36;271:4055:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1975:15:37;;;271:4055:49;;;;;;;;;;2000:15:37;271:4055:49;;;2000:15:37;271:4055:49;2058:5:37;;;;;;2170:10;278:18;;271:4055:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1975:15:37;;;271:4055:49;;;;;;;;2000:15:37;271:4055:49;;;2000:15:37;271:4055:49;2025:128:37;2058:5;;;;;;2170:10;;;278:18;;271:4055:49;;;;4022:252:18;271:4055:49;;;;;;;4022:252:18;;;271:4055:49;4022:252:18;;;271:4055:49;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;:::i;:::-;;4022:252:18;;;;;;;;;:::i;:::-;271:4055:49;;;;;;;3970:336:18;;2141:1:37;3970:336:18;;271:4055:49;;;;;;:::i;:::-;3970:336:18;;;278:18:37;;271:4055:49;;;;;;;278:18:37;;;2141:1;278:18;;;;;;271:4055:49;278:18:37;271:4055:49;;;278:18:37;;2065:3;2105:11;;;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:37;;2084:33;;;;:::i;:::-;;2141:1;278:18;2065:3;271:4055:49;;;;-1:-1:-1;;271:4055:49;;2030:26:37;;;271:4055:49;-1:-1:-1;;;271:4055:49;;;2141:1:37;271:4055:49;;;;2096:21:37;-1:-1:-1;;;271:4055:49;;;2141:1:37;271:4055:49;;;;;-1:-1:-1;;;271:4055:49;;;2141:1:37;271:4055:49;;;;278:18:37;;271:4055:49;;;;;;;278:18:37;;;2141:1;278:18;;;;;;271:4055:49;278:18:37;271:4055:49;;;278:18:37;;2065:3;2105:11;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:37;;2084:33;;;;:::i;:::-;;2141:1;278:18;2065:3;271:4055:49;;;;-1:-1:-1;;271:4055:49;2030:26:37;;271:4055:49;-1:-1:-1;;;271:4055:49;;;2141:1:37;271:4055:49;;;;2096:21:37;-1:-1:-1;;;271:4055:49;;;2141:1:37;271:4055:49;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10964:46:50;271:4055:49;-1:-1:-1;;271:4055:49;;;;:::o;7991:234:18:-;;-1:-1:-1;271:4055:49;;;;3130:6:18;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;8070:149:18;;7991:234;;;:::o;8070:149::-;271:4055:49;;;3130:6:18;271:4055:49;;;;;;;;;;;;;;;;;;;;8168:40:18;719:10:36;8168:40:18;;;7991:234::o;1359:130:20:-;1273:6;271:4055:49;-1:-1:-1;;;;;271:4055:49;719:10:36;1422:23:20;271:4055:49;;1359:130:20:o;271:4055:49:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;2386:758::-;2473:15;;;271:4055;;2473:20;2469:71;;2565:7;271:4055;;-1:-1:-1;;;;;271:4055:49;2565:7;271:4055;;2557:30;;271:4055;;;;2655:1;271:4055;;;;;;2655:1;271:4055;;;;;;;2660:1;271:4055;;;;;;;2693:28;:63;;;2386:758;2689:429;;;271:4055;;;2792:9;:28;271:4055;;-1:-1:-1;271:4055:49;;;;;;;;2856:44;;;;;2689:429;2856:44;;;;271:4055;2386:758;:::o;2856:44::-;271:4055;;;-1:-1:-1;271:4055:49;;;;;2856:44;;;;;271:4055;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;2689:429;271:4055;;;;-1:-1:-1;;;3009:73:49;;3045:10;3009:73;;;271:4055;;;-1:-1:-1;;;;;271:4055:49;;;3009:73;271:4055;;;;;;;;;;;;;;;;;;;-1:-1:-1;271:4055:49;;;;-1:-1:-1;;271:4055:49;;;;3009:73;;;;;;;;;-1:-1:-1;3009:73:49;;;2689:429;271:4055;;;;2689:429;271:4055;2386:758;:::o;271:4055::-;;;3009:73;271:4055;;;;;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;3009:73;;;;;;;;;;;;;;:::i;:::-;;;;2693:63;2725:16;;;;271:4055;2660:1;271:4055;;;;;2725:31;;2693:63;;271:4055;;;;;;-1:-1:-1;271:4055:49;;;-1:-1:-1;271:4055:49;;;;;;;-1:-1:-1;271:4055:49;;;-1:-1:-1;271:4055:49;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;2469:71;2519:11;;2526:4;2519:11;:::o;3436:570::-;;;;;3587:17;;;;;271:4055;;;;;;;;3608:13;3587:34;3608:13;;-1:-1:-1;;271:4055:49;;-1:-1:-1;;;;;271:4055:49;;3637:42;-1:-1:-1;3637:42:49;;;;;271:4055;;-1:-1:-1;;;3637:42:49;;-1:-1:-1;;;;;271:4055:49;;;3637:42;;;271:4055;;;;;;-1:-1:-1;;271:4055:49;;;-1:-1:-1;271:4055:49;;;;3637:42;;;;;;;;;;;;;3583:396;;;3608:13;3436:570;:::o;3637:42::-;;;;:::i;:::-;;;;;271:4055;;-1:-1:-1;271:4055:49;;;;;3583:396;271:4055;;;;;;;;;;;;;3720:14;3699:35;3720:14;;-1:-1:-1;;271:4055:49;-1:-1:-1;;;;;271:4055:49;3750:48;;;;;;271:4055;-1:-1:-1;271:4055:49;;;;;;;;;;;;;;3750:48;;;;;;:::i;3695:284::-;271:4055;;;;;;;;;;;;3839:15;3818:36;3839:15;;271:4055;-1:-1:-1;;;;;271:4055:49;;;;3870:56;;;;;-1:-1:-1;271:4055:49;;;;;;;;;;;;;;;;3870:56;;271:4055;3870:56;;;271:4055;;;;;;;;;;;;;;;;;;;:::i;3814:165::-;3956:12;;;;;;-1:-1:-1;3956:12:49;:::o;4032:291::-;4127:17;;;271:4055;;4127:22;4123:79;;271:4055;;4249:18;;;271:4055;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;4268:18;4217:99;4268:18;;271:4055;;;4305:10;;4217:99;;:::i;271:4055::-;;;;:::o;:::-;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;4351:318:50;;;;4502:68;4351:318;4559:10;4502:68;;;:::i;:::-;271:4055:49;;;-1:-1:-1;;;;;271:4055:49;4559:10:50;4611:51;;;;4351:318::o;271:4055:49:-;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4676:701:50:-;;;271:4055:49;;;;;;4858:13:50;4847:24;;4858:13;;-1:-1:-1;;271:4055:49;;-1:-1:-1;;;4887:44:50;;-1:-1:-1;;;;;271:4055:49;;;4887:44:50;;;271:4055:49;;;;;;;;;;4887:44:50;;271:4055:49;;;;;;-1:-1:-1;;271:4055:49;4887:44:50;;;;;;;;4843:506;4858:13;4676:701;:::o;4887:44::-;;;;;;;;;;;;;:::i;:::-;;;;;4843:506;4951:25;;;;4962:14;4951:25;;4962:14;;-1:-1:-1;;;;;;;271:4055:49;;4992:59:50;;;;;271:4055:49;;-1:-1:-1;;;4992:59:50;;5028:4;4992:59;;;271:4055:49;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;-1:-1:-1;;4992:59:50;;;;;;;;4947:402;4858:13;4676:701;:::o;4947:402::-;5082:15;5071:26;;;;;;;;5067:282;5082:15;;;-1:-1:-1;271:4055:49;;;;-1:-1:-1;;;;;271:4055:49;;;;:::i;:::-;-1:-1:-1;271:4055:49;;;;5113:86:50;;;;;271:4055:49;;;;;5113:86:50;271:4055:49;;;;;;;;;;;;5113:86:50;;5154:4;5113:86;;;;:::i;:::-;;;;;;;;;;;;;5067:282;3608:13:49;3436:570;:::o;5113:86:50:-;271:4055:49;;;;;;;;;;5113:86:50;271:4055:49;;;5067:282:50;5219:22;;;;5230:11;5219:22;5230:11;;-1:-1:-1;5230:11:50;;-1:-1:-1;5230:11:50;-1:-1:-1;5257:39:50;;;;;;;;;;;5215:134;-1:-1:-1;;;;;271:4055:49;;5257:39:50;4947:402;5257:39;271:4055:49;;;-1:-1:-1;271:4055:49;;;;;5257:39:50;;;-1:-1:-1;5257:39:50;;5215:134;5326:12;;-1:-1:-1;5326:12:50;:::o;271:4055:49:-;;;;;;;:::i;:::-;-1:-1:-1;271:4055:49;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;7553:2069:50:-;;1320:37;7553:2069;1320:37;;;:::i;:::-;271:4055:49;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;7822:12:50;;;;271:4055:49;;;;;;;;;;;;:::i;:::-;7822:36:50;;271:4055:49;;;;7822:12:50;271:4055:49;;:::i;:::-;7884:35:50;7880:79;;271:4055:49;;;;;;8088:16:50;;271:4055:49;8127:6:50;271:4055:49;;;;;;;;;;;;8088:45:50;;;;:::i;:::-;8178:15;:27;;;-1:-1:-1;;;;271:4055:49;;;;;;;8511:42:50;;8221:21;8174:222;271:4055:49;;;8511:42:50;;:::i;:::-;8598:17;;;;;271:4055:49;;;;;;:::i;:::-;;;;:::i;:::-;8629:45:50;;271:4055:49;8834:91:50;271:4055:49;;;;8873:16:50;;;;271:4055:49;;8896:19:50;;271:4055:49;8834:91:50;;:::i;:::-;9440:18;;;271:4055:49;9482:19:50;271:4055:49;;9482:19:50;;:::i;:::-;271:4055:49;;9568:24:50;:17;;;271:4055:49;;;9568:24:50;:::i;:::-;271:4055:49;;7553:2069:50;:::o;8625:755::-;271:4055:49;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;9028:46:50;7776:12;;-1:-1:-1;;9119:19:50;271:4055:49;9108:30:50;;;:::i;:::-;8625:755;;9024:356;7822:12;271:4055:49;;;;;;;;:::i;:::-;;;;:::i;:::-;9158:49:50;9154:226;;9024:356;;;;;;8625:755;;9154:226;9309:38;9265:13;;229:5:51;9265:13:50;8598:17;271:4055:49;9309:16:50;9265:13;;;:20;271:4055:49;9309:16:50;;:::i;:::-;9328:19;;271:4055:49;9309:38:50;;:::i;:::-;271:4055:49;9154:226:50;;;;;;8174:222;8511:42;8178:15;;;;8341:34;8178:15;;;;8341:34;:::i;:::-;271:4055:49;8174:222:50;;;271:4055:49;-1:-1:-1;;;271:4055:49;;;;;;;;7880:79:50;7935:13;;;;;;;:::o;271:4055:49:-;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;9629:673:50:-;-1:-1:-1;;;;;271:4055:49;;;;9629:673:50;;271:4055:49;9771:20:50;;;9767:105;;271:4055:49;;;;;;;9900:26:50;;;;;;;;;;;;;;;;;;;271:4055:49;9900:26:50;;;;;9629:673;271:4055:49;;;9900:26:50;271:4055:49;;9955:26:50;;;;;;;;;;;;;271:4055:49;9955:26:50;9900;9955;;;9629:673;271:4055:49;;;9996:20:50;;;;9992:106;;10196:16;10223:12;10196:23;229:5:51;10196:16:50;;:40;:16;10261:12;10196:16;;:::i;:::-;:23;:::i;:::-;10223:12;;:::i;:::-;10196:40;;:::i;:::-;271:4055:49;10261:12:50;;:::i;:::-;271:4055:49;;;;;;9629:673:50;:::o;271:4055:49:-;;;;9900:26:50;271:4055:49;;9900:26:50;271:4055:49;;9900:26:50;271:4055:49;9992:106:50;10040:16;229:5:51;10040:16:50;;:23;:16;;;;;:::i;:23::-;271:4055:49;10032:54:50;:::o;9955:26::-;;;;;;-1:-1:-1;9955:26:50;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;9900;;;;;;;;;;;;;;:::i;:::-;;;;9767:105;9815:16;229:5:51;9815:16:50;;:23;:16;;;;;:::i;271:4055:49:-;;;;:::o;:::-;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;-1:-1:-1;;;271:4055:49;;;;;;;;;;;;;-1:-1:-1;;271:4055:49;;;;;;;;-1:-1:-1;;;;;;271:4055:49;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;271:4055:49;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;271:4055:49;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::o;2621:229:51:-;271:4055:49;;:::i;:::-;;2766:38:51;;271:4055:49;;;;2766:38:51;;;;;;;;;:::i;:::-;271:4055:49;3178:15:51;;-1:-1:-1;271:4055:49;-1:-1:-1;2766:38:51;271:4055:49;;;;-1:-1:-1;271:4055:49;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;2766:38:51;271:4055:49;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2766:38:51;271:4055:49;;;;;;;;;;;;;;;;;;;;;;2621:229:51;:::o;3206:181::-;;;271:4055:49;;3340:39:51;;;;271:4055:49;-1:-1:-1;;;;;271:4055:49;;;;;;;;;;;;;;;;;;;;3340:39:51;;;;;:::i;:::-;271:4055:49;3178:15:51;;3206:181;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "MGR_ROLE()": "444bbb54",
    "MINER_ROLE()": "6394f6e6",
    "OWNER_ROLE()": "e58378bb",
    "PLEDGE_RATE_DECIMAILS()": "34771e62",
    "getLatestPledge(address,address,uint256)": "27a99cb1",
    "getPayToken(address,uint32)": "22eb7931",
    "getPledge(address,address,uint256)": "a68aede0",
    "getPledgeCfg(address,uint32)": "ac346a1f",
    "getPledgeInfo(address,address,uint256)": "70dcbfc6",
    "getPledgeReturn(address,uint32)": "8703ba2b",
    "getPledgeToken(address,uint32)": "6c83fc34",
    "getProfitToken(address,uint32)": "9785207e",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "mint(address,uint256,uint256,string)": "bb7fde71",
    "mintPledge(address,uint256,uint256,string,uint32)": "26cbd26b",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "pledgeToken(address,uint256,uint256,uint32)": "59f1da6c",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setPledgeCfg((address,uint256,uint8,uint256),(address,uint256,uint8,uint256),(address,uint256,uint8,uint256),(uint8,bool,uint256),uint32)": "96c817e7",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "updateIncome(address)": "f7c24aa3",
    "updatePledgeCfg((address,uint256,uint8,uint256),(address,uint256,uint8,uint256),(address,uint256,uint8,uint256),(uint8,bool,uint256),uint32)": "039ce106",
    "withdraw(address,uint256,uint256,address)": "16762eed",
    "withdrawPledge(address,uint256)": "f9dfa79f",
    "withdrawProfit(address,uint256)": "d35c9a07"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"incAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PledgeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newIncome\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldIncome\",\"type\":\"address\"}],\"name\":\"UpdateIncome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pledgeAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"profitAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"UpdatePledgeCfg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pledgeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"profitToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawPledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"profitToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawProfit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLEDGE_RATE_DECIMAILS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getLatestPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPayToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPledge\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pledgeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"},{\"internalType\":\"enum Store.PledgeState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"earnToken\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"earnRelease\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earnRemain\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.Pledge\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPledgeCfg\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"pledgeToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"payToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"profitToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"pledgeReturn\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"internalType\":\"struct Store.PledgeCfg\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPledgeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPledgeReturn\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getPledgeToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"getProfitToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"mintPledge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"pledgeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"pledgeToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"payToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"profitToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"pledgeReturn\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"setPledgeCfg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"income\",\"type\":\"address\"}],\"name\":\"updateIncome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"pledgeToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"payToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum Store.ERCType\",\"name\":\"ercType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.TokenX\",\"name\":\"profitToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum Store.ProfitType\",\"name\":\"profitType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDayRelease\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"internalType\":\"struct Store.PledgeReturn\",\"name\":\"pledgeReturn\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"pledgeDays\",\"type\":\"uint32\"}],\"name\":\"updatePledgeCfg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plgToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawPledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pledgeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPledgeInfo(address,address,uint256)\":{\"returns\":{\"_0\":\"\\u8fd4\\u56de(\\u8d28\\u62bc\\u6570\\u91cf\\uff0c\\u8d28\\u62bc\\u65f6\\u95f4\\uff0c\\u5468\\u671f\\uff0c\\u6536\\u76catoken,\\u91ca\\u653e\\u6536\\u76ca,\\u5269\\u4f59\\u53ef\\u63d0\\u53d6\\u6536\\u76ca)\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256,uint256,string)\":{\"details\":\"\\u94f8\\u9020NFT(\\u672c\\u5408\\u7ea6\\u5fc5\\u987b\\u5148\\u6210\\u4e3aNFT\\u5408\\u7ea6miner)\",\"params\":{\"cid\":\"nft cid\",\"tokenAddr\":\"\\u5408\\u7ea6\\u5730\\u5740\",\"tokenAmount\":\"\\u6570\\u91cf\",\"tokenId\":\"tokenId\"}},\"mintPledge(address,uint256,uint256,string,uint32)\":{\"details\":\"\\u94f8\\u9020\\u5e76\\u8d28\\u62bctoken(\\u672c\\u5408\\u7ea6\\u5fc5\\u987b\\u5148\\u6210\\u4e3aNFT\\u5408\\u7ea6miner)\",\"params\":{\"cid\":\"nft cid\",\"pledgeDays\":\"\\u8d28\\u62bc\\u5929\\u6570\",\"tokenAddr\":\"\\u5408\\u7ea6\\u5730\\u5740\",\"tokenAmount\":\"\\u6570\\u91cf\",\"tokenId\":\"tokenId\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pledgeToken(address,uint256,uint256,uint32)\":{\"details\":\"\\u624b\\u52a8\\u8d28\\u62bc\",\"params\":{\"pledgeDays\":\"\\u8d28\\u62bc\\u5929\\u6570\\uff0c\\u652f\\u63017/30/90/180\",\"tokenAddr\":\"\\u8d28\\u62bcToken\\u5730\\u5740\",\"tokenAmount\":\"\\u8d28\\u62bc\\u6570\\u91cf 721 \\u4e3a1\",\"tokenId\":\"\\u8d28\\u62bcTokenId,ERC20 \\u4e3a0\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawProfit(address,uint256)\":{\"details\":\"\\u63d0\\u53d6\\u6536\\u76ca\",\"params\":{\"pledgeToken\":\"\\u88ab\\u8d28\\u62bc\\u7684token\",\"tokenId\":\"\\u8d28\\u62bc\\u7684tokenId,ERC20\\u4e3a0\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Moresol.sol\":\"Moresol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88\",\"dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x7783f4c6240b60d2d0815cd71945633690121e4e9dccd0c643facab374b3ab45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8686b4e0cb952c12dbc910cfceb88f43d533e1b272b488ac76583c10302294e4\",\"dweb:/ipfs/QmNYBVoU3oY5mmCiucZ8U9voBKVRnkmuLMnvnQBTBpztjR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52\",\"dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df\",\"dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf\",\"dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x721e69345488526862ebd8284dfd4976bcecd1c8508fe6b5bd9ba1a9cc2d9de2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47903784cc874a21f2add3b947283fa8d3e4b3c040e41f871adeb8dea0e0a253\",\"dweb:/ipfs/QmP4P2LQEeG2ojfLZ7Wo4n5xUmPPPt4bVNR34FxMQNqY61\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacbaaa9be521944f83d2852379e1f40b28ada61a256493474f6cdc9b59620598\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15aa625baf68ba948a074361f38f7cf0e6198ba67d1d808c43865409296f1e72\",\"dweb:/ipfs/Qmbcae8x18H5Uzp2DsQcfZH3PMxokhhVCcwks22CDqVsPQ\"]},\"src/Moresol.sol\":{\"keccak256\":\"0xe1d05ea65d77edf4387dd9189ff0fc1190e887ce4ad7970ec03558013e0d17f7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6ab61921c735379a92f2ffa7e98979ba0d92dd560e864823d0af675d2d2073e7\",\"dweb:/ipfs/QmXrCty3urbeMS6BfvQ3HdX1pqeWdj5u2eGseiFQBSMrgx\"]},\"src/Pledge.sol\":{\"keccak256\":\"0xd433c35f11f08a4d852f2ecf5120010c8a410124e5e8759d31f4261f8afe98b1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb5c4901116101fb584d6420796e883130d2a49bd2050ac56065c4646ffe920\",\"dweb:/ipfs/QmdgNHo82xaupVENFTEooEL1aYYukTfcpRARupS7K69XLU\"]},\"src/Store.sol\":{\"keccak256\":\"0x7a3b7500138f439b8fb40a5e0fc929033be69ca6585ce80480bbecff39a78a3e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77635d403f6fe90a5060bd45427c84fc02e16473f4664b59183adbd9794d2559\",\"dweb:/ipfs/QmZTiYyqX1e69Jo5c91qHU8xAj3shGmwBVjCJP9rj9gVfB\"]},\"src/mgr/Mgr.sol\":{\"keccak256\":\"0x2cc87aeb7b2d14e29e95c900a7a398910767d1d0b293582fc20e62a93e9f9c25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15844fdc2b7f8f26d7bf57f3b9ce061c571922cc58d080c3b2a594df3c893398\",\"dweb:/ipfs/QmSh49aGRrrMLuwHbJTiDtopSoCPQ39SBNSqA3DRXW7J4z\"]},\"src/team/Income.sol\":{\"keccak256\":\"0x1d6fc11bfd1a3f8943e5e01e2f0283d2d33e30186554d509cb62ea836ea10a90\",\"urls\":[\"bzz-raw://c780458ae1714c35ddbf5b13f81466ff5f3f30aa979204f22a5237916df0d44f\",\"dweb:/ipfs/QmViG9aDe3AhfJ9kS4UcCqQ3kCgvcKu2GfEJS87V1BqXp9\"]},\"src/token/T1155.sol\":{\"keccak256\":\"0x77a215f8fb53555fd45b63271258feb693ef90fee265aa978cbf467a4e572c50\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1caccee4c6a28f592b3f2e28a21bfce27bf700a9c9687c3c4a908272b0c4e105\",\"dweb:/ipfs/QmZ8v3YhpUAUQ1QCmCFUhwK9pUtD7UwqzW9WAX9R51yo2Z\"]},\"src/token/T20.sol\":{\"keccak256\":\"0x0f971cfba6d78f0f6abb1992bac871ecc110210eab6a2b39175e4ad54f9d3d0b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2c63ed94d14326681ea478b6df28c41d2ff9ccbc3711302c11c649627d92bc25\",\"dweb:/ipfs/QmfUs1Sfd1ErQShoBThyNL5Vh2XBv5HZ9bH1K1weq4pjTC\"]},\"src/token/T721.sol\":{\"keccak256\":\"0x0d5e2c73eeb4d77feab1804b4ae949e37657cd63c46a68c9ab7510704cf75bca\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://31cf266d9fe8f1d852e8f77107d3f52bb4c985c6bfca6caf7989d1b0be2d34e9\",\"dweb:/ipfs/QmVjqzodkZTw4WRRYaJGVXCuJzjpPL5XSTmDMmofMsKMPR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "incAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PledgeToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newIncome",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldIncome",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdateIncome",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pledgeAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "payAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "profitAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatePledgeCfg",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "pledgeToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pledgeAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "profitToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "profitAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawPledge",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "profitToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawProfit",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OWNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PLEDGE_RATE_DECIMAILS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getLatestPledge",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPayToken",
          "outputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledge",
          "outputs": [
            {
              "internalType": "struct Store.Pledge",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pledgeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "pledgeDays",
                  "type": "uint32"
                },
                {
                  "internalType": "enum Store.PledgeState",
                  "name": "state",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Store.TokenX",
                  "name": "earnToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "earnRelease",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "earnRemain",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeCfg",
          "outputs": [
            {
              "internalType": "struct Store.PledgeCfg",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Store.TokenX",
                  "name": "pledgeToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Store.TokenX",
                  "name": "payToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Store.TokenX",
                  "name": "profitToken",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Store.ERCType",
                      "name": "ercType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Store.PledgeReturn",
                  "name": "pledgeReturn",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "enum Store.ProfitType",
                      "name": "profitType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "isDayRelease",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "profit",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "pledgeDays",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "acc",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeReturn",
          "outputs": [
            {
              "internalType": "struct Store.PledgeReturn",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPledgeToken",
          "outputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProfitToken",
          "outputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintPledge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pledgeToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "pledgeToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.TokenX",
              "name": "payToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.TokenX",
              "name": "profitToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.PledgeReturn",
              "name": "pledgeReturn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPledgeCfg"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "income",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateIncome"
        },
        {
          "inputs": [
            {
              "internalType": "struct Store.TokenX",
              "name": "pledgeToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.TokenX",
              "name": "payToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.TokenX",
              "name": "profitToken",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Store.ERCType",
                  "name": "ercType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Store.PledgeReturn",
              "name": "pledgeReturn",
              "type": "tuple",
              "components": [
                {
                  "internalType": "enum Store.ProfitType",
                  "name": "profitType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isDayRelease",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "profit",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint32",
              "name": "pledgeDays",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePledgeCfg"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "plgToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPledge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pledgeToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawProfit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPledgeInfo(address,address,uint256)": {
            "returns": {
              "_0": "返回(质押数量，质押时间，周期，收益token,释放收益,剩余可提取收益)"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "mint(address,uint256,uint256,string)": {
            "details": "铸造NFT(本合约必须先成为NFT合约miner)",
            "params": {
              "cid": "nft cid",
              "tokenAddr": "合约地址",
              "tokenAmount": "数量",
              "tokenId": "tokenId"
            }
          },
          "mintPledge(address,uint256,uint256,string,uint32)": {
            "details": "铸造并质押token(本合约必须先成为NFT合约miner)",
            "params": {
              "cid": "nft cid",
              "pledgeDays": "质押天数",
              "tokenAddr": "合约地址",
              "tokenAmount": "数量",
              "tokenId": "tokenId"
            }
          },
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155Receiver-onERC1155BatchReceived}."
          },
          "onERC1155Received(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155Receiver-onERC1155Received}."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pledgeToken(address,uint256,uint256,uint32)": {
            "details": "手动质押",
            "params": {
              "pledgeDays": "质押天数，支持7/30/90/180",
              "tokenAddr": "质押Token地址",
              "tokenAmount": "质押数量 721 为1",
              "tokenId": "质押TokenId,ERC20 为0"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawProfit(address,uint256)": {
            "details": "提取收益",
            "params": {
              "pledgeToken": "被质押的token",
              "tokenId": "质押的tokenId,ERC20为0"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Moresol.sol": "Moresol"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xbc7fc49ba05b312e318d3d7b517ed0254489320bedef2e91f80c3bd4e904fc0c",
        "urls": [
          "bzz-raw://e411d112f89fcadbff89da0579d61eafdf76272aaa91fb18728a86337440bb88",
          "dweb:/ipfs/QmfKJqMJ2CF1mw4UwDajoFdrrfKWSZwetkAByUP56EeqSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648",
        "urls": [
          "bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38",
          "dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x7783f4c6240b60d2d0815cd71945633690121e4e9dccd0c643facab374b3ab45",
        "urls": [
          "bzz-raw://8686b4e0cb952c12dbc910cfceb88f43d533e1b272b488ac76583c10302294e4",
          "dweb:/ipfs/QmNYBVoU3oY5mmCiucZ8U9voBKVRnkmuLMnvnQBTBpztjR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39",
        "urls": [
          "bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52",
          "dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
        "keccak256": "0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d",
        "urls": [
          "bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8",
          "dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b",
        "urls": [
          "bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df",
          "dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4",
        "urls": [
          "bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf",
          "dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0x721e69345488526862ebd8284dfd4976bcecd1c8508fe6b5bd9ba1a9cc2d9de2",
        "urls": [
          "bzz-raw://47903784cc874a21f2add3b947283fa8d3e4b3c040e41f871adeb8dea0e0a253",
          "dweb:/ipfs/QmP4P2LQEeG2ojfLZ7Wo4n5xUmPPPt4bVNR34FxMQNqY61"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xacbaaa9be521944f83d2852379e1f40b28ada61a256493474f6cdc9b59620598",
        "urls": [
          "bzz-raw://15aa625baf68ba948a074361f38f7cf0e6198ba67d1d808c43865409296f1e72",
          "dweb:/ipfs/Qmbcae8x18H5Uzp2DsQcfZH3PMxokhhVCcwks22CDqVsPQ"
        ],
        "license": "MIT"
      },
      "src/Moresol.sol": {
        "keccak256": "0xe1d05ea65d77edf4387dd9189ff0fc1190e887ce4ad7970ec03558013e0d17f7",
        "urls": [
          "bzz-raw://6ab61921c735379a92f2ffa7e98979ba0d92dd560e864823d0af675d2d2073e7",
          "dweb:/ipfs/QmXrCty3urbeMS6BfvQ3HdX1pqeWdj5u2eGseiFQBSMrgx"
        ],
        "license": "BUSL-1.1"
      },
      "src/Pledge.sol": {
        "keccak256": "0xd433c35f11f08a4d852f2ecf5120010c8a410124e5e8759d31f4261f8afe98b1",
        "urls": [
          "bzz-raw://cdb5c4901116101fb584d6420796e883130d2a49bd2050ac56065c4646ffe920",
          "dweb:/ipfs/QmdgNHo82xaupVENFTEooEL1aYYukTfcpRARupS7K69XLU"
        ],
        "license": "BUSL-1.1"
      },
      "src/Store.sol": {
        "keccak256": "0x7a3b7500138f439b8fb40a5e0fc929033be69ca6585ce80480bbecff39a78a3e",
        "urls": [
          "bzz-raw://77635d403f6fe90a5060bd45427c84fc02e16473f4664b59183adbd9794d2559",
          "dweb:/ipfs/QmZTiYyqX1e69Jo5c91qHU8xAj3shGmwBVjCJP9rj9gVfB"
        ],
        "license": "BUSL-1.1"
      },
      "src/mgr/Mgr.sol": {
        "keccak256": "0x2cc87aeb7b2d14e29e95c900a7a398910767d1d0b293582fc20e62a93e9f9c25",
        "urls": [
          "bzz-raw://15844fdc2b7f8f26d7bf57f3b9ce061c571922cc58d080c3b2a594df3c893398",
          "dweb:/ipfs/QmSh49aGRrrMLuwHbJTiDtopSoCPQ39SBNSqA3DRXW7J4z"
        ],
        "license": "BUSL-1.1"
      },
      "src/team/Income.sol": {
        "keccak256": "0x1d6fc11bfd1a3f8943e5e01e2f0283d2d33e30186554d509cb62ea836ea10a90",
        "urls": [
          "bzz-raw://c780458ae1714c35ddbf5b13f81466ff5f3f30aa979204f22a5237916df0d44f",
          "dweb:/ipfs/QmViG9aDe3AhfJ9kS4UcCqQ3kCgvcKu2GfEJS87V1BqXp9"
        ],
        "license": null
      },
      "src/token/T1155.sol": {
        "keccak256": "0x77a215f8fb53555fd45b63271258feb693ef90fee265aa978cbf467a4e572c50",
        "urls": [
          "bzz-raw://1caccee4c6a28f592b3f2e28a21bfce27bf700a9c9687c3c4a908272b0c4e105",
          "dweb:/ipfs/QmZ8v3YhpUAUQ1QCmCFUhwK9pUtD7UwqzW9WAX9R51yo2Z"
        ],
        "license": "BUSL-1.1"
      },
      "src/token/T20.sol": {
        "keccak256": "0x0f971cfba6d78f0f6abb1992bac871ecc110210eab6a2b39175e4ad54f9d3d0b",
        "urls": [
          "bzz-raw://2c63ed94d14326681ea478b6df28c41d2ff9ccbc3711302c11c649627d92bc25",
          "dweb:/ipfs/QmfUs1Sfd1ErQShoBThyNL5Vh2XBv5HZ9bH1K1weq4pjTC"
        ],
        "license": "BUSL-1.1"
      },
      "src/token/T721.sol": {
        "keccak256": "0x0d5e2c73eeb4d77feab1804b4ae949e37657cd63c46a68c9ab7510704cf75bca",
        "urls": [
          "bzz-raw://31cf266d9fe8f1d852e8f77107d3f52bb4c985c6bfca6caf7989d1b0be2d34e9",
          "dweb:/ipfs/QmVjqzodkZTw4WRRYaJGVXCuJzjpPL5XSTmDMmofMsKMPR"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Moresol.sol",
    "id": 37220,
    "exportedSymbols": {
      "AccessControl": [
        28741
      ],
      "Address": [
        32978
      ],
      "Context": [
        33000
      ],
      "ERC1155": [
        30150
      ],
      "ERC1155Supply": [
        30470
      ],
      "ERC165": [
        33253
      ],
      "ERC20": [
        31072
      ],
      "ERC721": [
        32102
      ],
      "ERC721Enumerable": [
        32590
      ],
      "EnumerableMap": [
        35494
      ],
      "EnumerableSet": [
        36107
      ],
      "IAccessControl": [
        28814
      ],
      "IERC1155": [
        30272
      ],
      "IERC1155MetadataURI": [
        30485
      ],
      "IERC1155Receiver": [
        30313
      ],
      "IERC165": [
        33265
      ],
      "IERC20": [
        31150
      ],
      "IERC20Metadata": [
        31175
      ],
      "IERC721": [
        32218
      ],
      "IERC721Enumerable": [
        32621
      ],
      "IERC721Metadata": [
        32648
      ],
      "IERC721Receiver": [
        32236
      ],
      "Income": [
        39248
      ],
      "Math": [
        34131
      ],
      "Mgr": [
        38967
      ],
      "Moresol": [
        37219
      ],
      "Ownable": [
        28927
      ],
      "Pledge": [
        38527
      ],
      "SignedMath": [
        34236
      ],
      "Store": [
        38772
      ],
      "Strings": [
        33229
      ],
      "T1155": [
        39427
      ],
      "T20": [
        39475
      ],
      "T721": [
        39638
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4289:49",
    "nodes": [
      {
        "id": 36812,
        "nodeType": "PragmaDirective",
        "src": "37:24:49",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 36813,
        "nodeType": "ImportDirective",
        "src": "62:55:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37220,
        "sourceUnit": 31151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36814,
        "nodeType": "ImportDirective",
        "src": "119:22:49",
        "nodes": [],
        "absolutePath": "src/Pledge.sol",
        "file": "./Pledge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37220,
        "sourceUnit": 38528,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36815,
        "nodeType": "ImportDirective",
        "src": "142:26:49",
        "nodes": [],
        "absolutePath": "src/token/T721.sol",
        "file": "./token/T721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37220,
        "sourceUnit": 39639,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36816,
        "nodeType": "ImportDirective",
        "src": "169:25:49",
        "nodes": [],
        "absolutePath": "src/token/T20.sol",
        "file": "./token/T20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37220,
        "sourceUnit": 39476,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36817,
        "nodeType": "ImportDirective",
        "src": "195:27:49",
        "nodes": [],
        "absolutePath": "src/token/T1155.sol",
        "file": "./token/T1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37220,
        "sourceUnit": 39428,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36818,
        "nodeType": "ImportDirective",
        "src": "223:27:49",
        "nodes": [],
        "absolutePath": "src/team/Income.sol",
        "file": "./team/Income.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37220,
        "sourceUnit": 39249,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36819,
        "nodeType": "PragmaDirective",
        "src": "251:19:49",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 37219,
        "nodeType": "ContractDefinition",
        "src": "271:4055:49",
        "nodes": [
          {
            "id": 36824,
            "nodeType": "VariableDeclaration",
            "src": "309:22:49",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_income",
            "nameLocation": "324:7:49",
            "scope": 37219,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Income_$39248",
              "typeString": "contract Income"
            },
            "typeName": {
              "id": 36823,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36822,
                "name": "Income",
                "nameLocations": [
                  "309:6:49"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39248,
                "src": "309:6:49"
              },
              "referencedDeclaration": 39248,
              "src": "309:6:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Income_$39248",
                "typeString": "contract Income"
              }
            },
            "visibility": "private"
          },
          {
            "id": 36836,
            "nodeType": "EventDefinition",
            "src": "457:109:49",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ad2943b15836caf43698401a62af4738985fb33dd979844d99d37f5293f037d3",
            "name": "Mint",
            "nameLocation": "463:4:49",
            "parameters": {
              "id": 36835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36826,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "476:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36836,
                  "src": "468:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36828,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "500:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36836,
                  "src": "484:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36830,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "526:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36836,
                  "src": "510:23:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36832,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "542:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36836,
                  "src": "534:19:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "561:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36836,
                  "src": "554:10:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36833,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:98:49"
            }
          },
          {
            "id": 36844,
            "nodeType": "EventDefinition",
            "src": "571:95:49",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "acfdf2068f2b4dda3f4970ef49a4cad3a0a7735a3badb3577bcabb3a88980738",
            "name": "UpdateIncome",
            "nameLocation": "577:12:49",
            "parameters": {
              "id": 36843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36838,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "606:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36844,
                  "src": "590:22:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newIncome",
                  "nameLocation": "629:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36844,
                  "src": "613:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36842,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldIncome",
                  "nameLocation": "655:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36844,
                  "src": "639:25:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:76:49"
            }
          },
          {
            "id": 36856,
            "nodeType": "FunctionDefinition",
            "src": "671:79:49",
            "nodes": [],
            "body": {
              "id": 36855,
              "nodeType": "Block",
              "src": "708:42:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36849,
                      "name": "_income",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36824,
                      "src": "718:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$39248",
                        "typeString": "contract Income"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36851,
                          "name": "incAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36846,
                          "src": "735:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 36850,
                        "name": "Income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39248,
                        "src": "728:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Income_$39248_$",
                          "typeString": "type(contract Income)"
                        }
                      },
                      "id": 36852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "728:15:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$39248",
                        "typeString": "contract Income"
                      }
                    },
                    "src": "718:25:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Income_$39248",
                      "typeString": "contract Income"
                    }
                  },
                  "id": 36854,
                  "nodeType": "ExpressionStatement",
                  "src": "718:25:49"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36846,
                  "mutability": "mutable",
                  "name": "incAddr",
                  "nameLocation": "699:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36856,
                  "src": "683:23:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 36845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:15:49",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "682:25:49"
            },
            "returnParameters": {
              "id": 36848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:49"
            },
            "scope": 37219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36869,
            "nodeType": "FunctionDefinition",
            "src": "943:174:49",
            "nodes": [],
            "body": {
              "id": 36868,
              "nodeType": "Block",
              "src": "1046:71:49",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 36857,
              "nodeType": "StructuredDocumentation",
              "src": "755:183:49",
              "text": "@dev 铸造NFT(本合约必须先成为NFT合约miner)\n@param tokenAddr 合约地址\n@param tokenId tokenId\n@param tokenAmount 数量\n@param cid nft cid"
            },
            "functionSelector": "bb7fde71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "952:4:49",
            "parameters": {
              "id": 36866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36859,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "965:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36869,
                  "src": "957:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36861,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "983:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36869,
                  "src": "975:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36863,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "999:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36869,
                  "src": "991:19:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36865,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1025:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36869,
                  "src": "1011:17:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:73:49"
            },
            "returnParameters": {
              "id": 36867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:0:49"
            },
            "scope": 37219,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36909,
            "nodeType": "FunctionDefinition",
            "src": "1360:325:49",
            "nodes": [],
            "body": {
              "id": 36908,
              "nodeType": "Block",
              "src": "1517:168:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36888,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36872,
                        "src": "1533:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36889,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36874,
                        "src": "1543:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36890,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36876,
                        "src": "1551:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36891,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36878,
                        "src": "1563:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 36894,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1575:4:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Moresol_$37219",
                              "typeString": "contract Moresol"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Moresol_$37219",
                              "typeString": "contract Moresol"
                            }
                          ],
                          "id": 36893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1567:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 36892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1567:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 36895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1567:13:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36896,
                        "name": "pledgeDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36880,
                        "src": "1581:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 36887,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36982,
                      "src": "1527:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_uint32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,string memory,address,uint32)"
                      }
                    },
                    "id": 36897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:65:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36898,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:65:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 36900,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1616:3:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1620:6:49",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1616:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36902,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36872,
                        "src": "1627:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36903,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36874,
                        "src": "1637:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36904,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36876,
                        "src": "1645:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36905,
                        "name": "pledgeDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36880,
                        "src": "1657:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 36899,
                      "name": "_pledgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37501,
                      "src": "1603:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint32)"
                      }
                    },
                    "id": 36906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:65:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36907,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:65:49"
                }
              ]
            },
            "documentation": {
              "id": 36870,
              "nodeType": "StructuredDocumentation",
              "src": "1123:232:49",
              "text": "@dev 铸造并质押token(本合约必须先成为NFT合约miner)\n@param tokenAddr 合约地址\n@param tokenId tokenId\n@param tokenAmount 数量\n@param cid nft cid\n@param pledgeDays 质押天数"
            },
            "functionSelector": "26cbd26b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 36883,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36872,
                    "src": "1499:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 36884,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36874,
                    "src": "1509:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 36885,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36882,
                  "name": "canPledge",
                  "nameLocations": [
                    "1489:9:49"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38670,
                  "src": "1489:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1489:28:49"
              }
            ],
            "name": "mintPledge",
            "nameLocation": "1369:10:49",
            "parameters": {
              "id": 36881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36872,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "1388:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36909,
                  "src": "1380:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36874,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1406:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36909,
                  "src": "1398:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36876,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1422:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36909,
                  "src": "1414:19:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36878,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1448:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36909,
                  "src": "1434:17:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36880,
                  "mutability": "mutable",
                  "name": "pledgeDays",
                  "nameLocation": "1460:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36909,
                  "src": "1453:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 36879,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1379:92:49"
            },
            "returnParameters": {
              "id": 36886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:0:49"
            },
            "scope": 37219,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36982,
            "nodeType": "FunctionDefinition",
            "src": "1693:668:49",
            "nodes": [],
            "body": {
              "id": 36981,
              "nodeType": "Block",
              "src": "1825:536:49",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36926,
                      "mutability": "mutable",
                      "name": "pCfg",
                      "nameLocation": "1906:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 36981,
                      "src": "1889:21:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeCfg_$38576_memory_ptr",
                        "typeString": "struct Store.PledgeCfg"
                      },
                      "typeName": {
                        "id": 36925,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36924,
                          "name": "PledgeCfg",
                          "nameLocations": [
                            "1889:9:49"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38576,
                          "src": "1889:9:49"
                        },
                        "referencedDeclaration": 38576,
                        "src": "1889:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PledgeCfg_$38576_storage_ptr",
                          "typeString": "struct Store.PledgeCfg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36928,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36911,
                        "src": "1927:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36929,
                        "name": "pledgeDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36921,
                        "src": "1937:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 36927,
                      "name": "_getPledgeCfg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38711,
                      "src": "1913:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_PledgeCfg_$38576_memory_ptr_$",
                        "typeString": "function (address,uint32) view returns (struct Store.PledgeCfg memory)"
                      }
                    },
                    "id": 36930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:35:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PledgeCfg_$38576_memory_ptr",
                      "typeString": "struct Store.PledgeCfg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1889:59:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 36933,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36926,
                              "src": "1966:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$38576_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 36934,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1971:11:49",
                            "memberName": "pledgeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38564,
                            "src": "1966:16:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          },
                          "id": 36935,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1983:5:49",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38553,
                          "src": "1966:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2000:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1992:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36936,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1992:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1992:10:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1966:36:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74207468697320706c6564676520746f6b656e21",
                        "id": 36941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2003:24:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56057fcda83d8b011257f82c3c6871a3113ab8b52357320c4318a590a5780443",
                          "typeString": "literal_string \"not this pledge token!\""
                        },
                        "value": "not this pledge token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56057fcda83d8b011257f82c3c6871a3113ab8b52357320c4318a590a5780443",
                          "typeString": "literal_string \"not this pledge token!\""
                        }
                      ],
                      "id": 36932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1958:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:70:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36943,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:70:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 36946,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36926,
                              "src": "2064:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$38576_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 36947,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2069:8:49",
                            "memberName": "payToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38567,
                            "src": "2064:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          ],
                          "id": 36945,
                          "name": "_payTokenFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37077,
                          "src": "2046:17:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenX_$38561_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Store.TokenX memory) returns (bool)"
                          }
                        },
                        "id": 36948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2046:32:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706179546f6b656e2068616e646c65206661696c656421",
                        "id": 36949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2079:25:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a972aab3e60c5d29c4545c4e73a014c23cf099f38900d1503ac4d91c8d54dbcd",
                          "typeString": "literal_string \"payToken handle failed!\""
                        },
                        "value": "payToken handle failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a972aab3e60c5d29c4545c4e73a014c23cf099f38900d1503ac4d91c8d54dbcd",
                          "typeString": "literal_string \"payToken handle failed!\""
                        }
                      ],
                      "id": 36944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2038:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:67:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36951,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:67:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 36954,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36926,
                              "src": "2137:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$38576_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 36955,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2142:11:49",
                            "memberName": "pledgeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38564,
                            "src": "2137:16:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          },
                          {
                            "id": 36956,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36913,
                            "src": "2154:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 36957,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36915,
                            "src": "2162:11:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 36958,
                            "name": "cid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36917,
                            "src": "2174:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 36959,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36919,
                            "src": "2178:8:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 36953,
                          "name": "_mintFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37188,
                          "src": "2123:13:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenX_$38561_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct Store.TokenX memory,uint256,uint256,string memory,address) returns (bool)"
                          }
                        },
                        "id": 36960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2123:64:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206661696c656421",
                        "id": 36961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30e5e57c980d287aa6c6e93b449609052f55209b6bb045baf032dc14bda5e49f",
                          "typeString": "literal_string \"mint failed!\""
                        },
                        "value": "mint failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30e5e57c980d287aa6c6e93b449609052f55209b6bb045baf032dc14bda5e49f",
                          "typeString": "literal_string \"mint failed!\""
                        }
                      ],
                      "id": 36952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2115:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:88:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36963,
                  "nodeType": "ExpressionStatement",
                  "src": "2115:88:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 36966,
                              "name": "pCfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36926,
                              "src": "2243:4:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeCfg_$38576_memory_ptr",
                                "typeString": "struct Store.PledgeCfg memory"
                              }
                            },
                            "id": 36967,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2248:11:49",
                            "memberName": "profitToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38570,
                            "src": "2243:16:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          ],
                          "id": 36965,
                          "name": "_airDropTokenFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37218,
                          "src": "2221:21:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TokenX_$38561_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Store.TokenX memory) returns (bool)"
                          }
                        },
                        "id": 36968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2221:39:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61697244726f70546f6b656e20756e66696e697368656421",
                        "id": 36969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2261:26:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ecce54e61e8595b34a82a0197161330fe39975ca2a3d5266d7f559c85eb6ee3",
                          "typeString": "literal_string \"airDropToken unfinished!\""
                        },
                        "value": "airDropToken unfinished!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ecce54e61e8595b34a82a0197161330fe39975ca2a3d5266d7f559c85eb6ee3",
                          "typeString": "literal_string \"airDropToken unfinished!\""
                        }
                      ],
                      "id": 36964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2213:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:75:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36971,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:75:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 36973,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2308:3:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2312:6:49",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2308:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36975,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36911,
                        "src": "2320:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36976,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36913,
                        "src": "2330:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36977,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36915,
                        "src": "2338:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 36978,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36917,
                        "src": "2350:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 36972,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36836,
                      "src": "2303:4:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,string memory)"
                      }
                    },
                    "id": 36979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:51:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36980,
                  "nodeType": "EmitStatement",
                  "src": "2298:56:49"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1702:5:49",
            "parameters": {
              "id": 36922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36911,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "1716:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36982,
                  "src": "1708:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36913,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1734:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36982,
                  "src": "1726:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36915,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1750:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36982,
                  "src": "1742:19:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36917,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1776:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36982,
                  "src": "1762:17:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36916,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36919,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1788:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36982,
                  "src": "1780:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36921,
                  "mutability": "mutable",
                  "name": "pledgeDays",
                  "nameLocation": "1804:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 36982,
                  "src": "1797:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 36920,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1707:108:49"
            },
            "returnParameters": {
              "id": 36923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:49"
            },
            "scope": 37219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37077,
            "nodeType": "FunctionDefinition",
            "src": "2386:758:49",
            "nodes": [],
            "body": {
              "id": 37076,
              "nodeType": "Block",
              "src": "2459:685:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 36993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 36990,
                        "name": "payToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36985,
                        "src": "2473:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                          "typeString": "struct Store.TokenX memory"
                        }
                      },
                      "id": 36991,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2482:6:49",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38560,
                      "src": "2473:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 36992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2492:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2473:20:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36997,
                  "nodeType": "IfStatement",
                  "src": "2469:71:49",
                  "trueBody": {
                    "id": 36996,
                    "nodeType": "Block",
                    "src": "2495:45:49",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 36994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2526:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 36989,
                        "id": 36995,
                        "nodeType": "Return",
                        "src": "2519:11:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37001,
                              "name": "_income",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36824,
                              "src": "2565:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Income_$39248",
                                "typeString": "contract Income"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Income_$39248",
                                "typeString": "contract Income"
                              }
                            ],
                            "id": 37000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2557:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36999,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2557:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2557:16:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 37005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2585:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2577:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37003,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2577:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2577:10:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2557:30:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f6d6520616464723d7a65726f21",
                        "id": 37008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2588:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f466ab2513a1e4066643c9ea0f9931e917b4e3fe392448df677b1e60050c1656",
                          "typeString": "literal_string \"income addr=zero!\""
                        },
                        "value": "income addr=zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f466ab2513a1e4066643c9ea0f9931e917b4e3fe392448df677b1e60050c1656",
                          "typeString": "literal_string \"income addr=zero!\""
                        }
                      ],
                      "id": 36998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2549:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:59:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37010,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:59:49"
                },
                {
                  "assignments": [
                    37012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37012,
                      "mutability": "mutable",
                      "name": "dis60Per",
                      "nameLocation": "2625:8:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 37076,
                      "src": "2617:16:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2617:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37020,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 37013,
                              "name": "payToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36985,
                              "src": "2637:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                                "typeString": "struct Store.TokenX memory"
                              }
                            },
                            "id": 37014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2646:6:49",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38560,
                            "src": "2637:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 37015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2655:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2637:19:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 37017,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2636:21:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 37018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2660:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2636:25:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2617:44:49"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 37033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 37027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 37021,
                          "name": "payToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36985,
                          "src": "2693:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37022,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2702:5:49",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38553,
                        "src": "2693:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 37025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2719:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 37024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2711:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2711:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2711:10:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2693:28:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ERCType_$38551",
                        "typeString": "enum Store.ERCType"
                      },
                      "id": 37032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 37028,
                          "name": "payToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36985,
                          "src": "2725:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37029,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2734:7:49",
                        "memberName": "ercType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38558,
                        "src": "2725:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 37030,
                          "name": "ERCType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38551,
                          "src": "2745:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ERCType_$38551_$",
                            "typeString": "type(enum Store.ERCType)"
                          }
                        },
                        "id": 37031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2753:3:49",
                        "memberName": "Eth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38550,
                        "src": "2745:11:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "src": "2725:31:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2693:63:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 37072,
                    "nodeType": "Block",
                    "src": "2915:203:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 37061,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3045:3:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 37062,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3049:6:49",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3045:10:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 37065,
                                      "name": "_income",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 36824,
                                      "src": "3064:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Income_$39248",
                                        "typeString": "contract Income"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Income_$39248",
                                        "typeString": "contract Income"
                                      }
                                    ],
                                    "id": 37064,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3056:7:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 37063,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3056:7:49",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 37066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3056:16:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 37067,
                                  "name": "dis60Per",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37012,
                                  "src": "3073:8:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 37057,
                                        "name": "payToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 36985,
                                        "src": "3016:8:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                                          "typeString": "struct Store.TokenX memory"
                                        }
                                      },
                                      "id": 37058,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3025:5:49",
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 38553,
                                      "src": "3016:14:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 37056,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31150,
                                    "src": "3009:6:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$31150_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 37059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3009:22:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$31150",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 37060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3032:12:49",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31149,
                                "src": "3009:35:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 37068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3009:73:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c656421",
                              "id": 37069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3083:24:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_352ef36d25cfbf3d4e225ac6bda37309d538485d5c1f1cae3f3c5b7657cc2ca6",
                                "typeString": "literal_string \"ERC20 transfer failed!\""
                              },
                              "value": "ERC20 transfer failed!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_352ef36d25cfbf3d4e225ac6bda37309d538485d5c1f1cae3f3c5b7657cc2ca6",
                                "typeString": "literal_string \"ERC20 transfer failed!\""
                              }
                            ],
                            "id": 37055,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3001:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 37070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3001:107:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37071,
                        "nodeType": "ExpressionStatement",
                        "src": "3001:107:49"
                      }
                    ]
                  },
                  "id": 37073,
                  "nodeType": "IfStatement",
                  "src": "2689:429:49",
                  "trueBody": {
                    "id": 37054,
                    "nodeType": "Block",
                    "src": "2758:152:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 37035,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2792:3:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 37036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2796:5:49",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2792:9:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 37037,
                                  "name": "payToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36985,
                                  "src": "2805:8:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                                    "typeString": "struct Store.TokenX memory"
                                  }
                                },
                                "id": 37038,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2814:6:49",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38560,
                                "src": "2805:15:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2792:28:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d73672e76616c756520746f6f206c6f777e",
                              "id": 37040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2821:20:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6494f19a7550bf92bc5d7447b761a8fc930998613b8b8e53a30371d4a248aaf7",
                                "typeString": "literal_string \"msg.value too low~\""
                              },
                              "value": "msg.value too low~"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6494f19a7550bf92bc5d7447b761a8fc930998613b8b8e53a30371d4a248aaf7",
                                "typeString": "literal_string \"msg.value too low~\""
                              }
                            ],
                            "id": 37034,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2784:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 37041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2784:58:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37042,
                        "nodeType": "ExpressionStatement",
                        "src": "2784:58:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37051,
                              "name": "dis60Per",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37012,
                              "src": "2891:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 37047,
                                      "name": "_income",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 36824,
                                      "src": "2872:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Income_$39248",
                                        "typeString": "contract Income"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Income_$39248",
                                        "typeString": "contract Income"
                                      }
                                    ],
                                    "id": 37046,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2864:7:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 37045,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2864:7:49",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 37048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2864:16:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 37044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2856:8:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 37043,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2856:8:49",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 37049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2856:25:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 37050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2882:8:49",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2856:34:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 37052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2856:44:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37053,
                        "nodeType": "ExpressionStatement",
                        "src": "2856:44:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 37074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3133:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 36989,
                  "id": 37075,
                  "nodeType": "Return",
                  "src": "3126:11:49"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payTokenFinished",
            "nameLocation": "2395:17:49",
            "parameters": {
              "id": 36986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36985,
                  "mutability": "mutable",
                  "name": "payToken",
                  "nameLocation": "2427:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37077,
                  "src": "2413:22:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                    "typeString": "struct Store.TokenX"
                  },
                  "typeName": {
                    "id": 36984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36983,
                      "name": "TokenX",
                      "nameLocations": [
                        "2413:6:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38561,
                      "src": "2413:6:49"
                    },
                    "referencedDeclaration": 38561,
                    "src": "2413:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenX_$38561_storage_ptr",
                      "typeString": "struct Store.TokenX"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2412:24:49"
            },
            "returnParameters": {
              "id": 36989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37077,
                  "src": "2454:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:6:49"
            },
            "scope": 37219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37115,
            "nodeType": "FunctionDefinition",
            "src": "3151:260:49",
            "nodes": [],
            "body": {
              "id": 37114,
              "nodeType": "Block",
              "src": "3214:197:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37085,
                          "name": "income",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37079,
                          "src": "3232:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 37088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3250:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3242:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37086,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3242:10:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3232:20:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f2061646472657373",
                        "id": 37091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3253:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
                          "typeString": "literal_string \"zero address\""
                        },
                        "value": "zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
                          "typeString": "literal_string \"zero address\""
                        }
                      ],
                      "id": 37084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3224:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3224:44:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37093,
                  "nodeType": "ExpressionStatement",
                  "src": "3224:44:49"
                },
                {
                  "assignments": [
                    37095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37095,
                      "mutability": "mutable",
                      "name": "oldIncome",
                      "nameLocation": "3286:9:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 37114,
                      "src": "3278:17:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3278:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37100,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37098,
                        "name": "_income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36824,
                        "src": "3306:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Income_$39248",
                          "typeString": "contract Income"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Income_$39248",
                          "typeString": "contract Income"
                        }
                      ],
                      "id": 37097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3298:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 37096,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3298:7:49",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 37099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3298:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3278:36:49"
                },
                {
                  "expression": {
                    "id": 37105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37101,
                      "name": "_income",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36824,
                      "src": "3324:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$39248",
                        "typeString": "contract Income"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37103,
                          "name": "income",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37079,
                          "src": "3341:6:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 37102,
                        "name": "Income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39248,
                        "src": "3334:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Income_$39248_$",
                          "typeString": "type(contract Income)"
                        }
                      },
                      "id": 37104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3334:14:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Income_$39248",
                        "typeString": "contract Income"
                      }
                    },
                    "src": "3324:24:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Income_$39248",
                      "typeString": "contract Income"
                    }
                  },
                  "id": 37106,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:24:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3376:3:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3380:6:49",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3376:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37110,
                        "name": "income",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37079,
                        "src": "3387:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 37111,
                        "name": "oldIncome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37095,
                        "src": "3394:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37107,
                      "name": "UpdateIncome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36844,
                      "src": "3363:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 37112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3363:41:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37113,
                  "nodeType": "EmitStatement",
                  "src": "3358:46:49"
                }
              ]
            },
            "functionSelector": "f7c24aa3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37081,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3204:9:49"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28846,
                  "src": "3204:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:9:49"
              }
            ],
            "name": "updateIncome",
            "nameLocation": "3160:12:49",
            "parameters": {
              "id": 37080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37079,
                  "mutability": "mutable",
                  "name": "income",
                  "nameLocation": "3189:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37115,
                  "src": "3173:22:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 37078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:15:49",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3172:24:49"
            },
            "returnParameters": {
              "id": 37083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3214:0:49"
            },
            "scope": 37219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37188,
            "nodeType": "FunctionDefinition",
            "src": "3436:570:49",
            "nodes": [],
            "body": {
              "id": 37187,
              "nodeType": "Block",
              "src": "3573:433:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ERCType_$38551",
                      "typeString": "enum Store.ERCType"
                    },
                    "id": 37135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37131,
                        "name": "mintToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37118,
                        "src": "3587:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                          "typeString": "struct Store.TokenX memory"
                        }
                      },
                      "id": 37132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3597:7:49",
                      "memberName": "ercType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38558,
                      "src": "3587:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ERCType_$38551",
                        "typeString": "enum Store.ERCType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 37133,
                        "name": "ERCType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38551,
                        "src": "3608:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ERCType_$38551_$",
                          "typeString": "type(enum Store.ERCType)"
                        }
                      },
                      "id": 37134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3616:5:49",
                      "memberName": "Erc20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38547,
                      "src": "3608:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ERCType_$38551",
                        "typeString": "enum Store.ERCType"
                      }
                    },
                    "src": "3587:34:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ERCType_$38551",
                        "typeString": "enum Store.ERCType"
                      },
                      "id": 37150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 37146,
                          "name": "mintToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37118,
                          "src": "3699:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3709:7:49",
                        "memberName": "ercType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38558,
                        "src": "3699:17:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 37148,
                          "name": "ERCType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38551,
                          "src": "3720:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ERCType_$38551_$",
                            "typeString": "type(enum Store.ERCType)"
                          }
                        },
                        "id": 37149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3728:6:49",
                        "memberName": "Erc721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38548,
                        "src": "3720:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      "src": "3699:35:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        },
                        "id": 37166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37162,
                            "name": "mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37118,
                            "src": "3818:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                              "typeString": "struct Store.TokenX memory"
                            }
                          },
                          "id": 37163,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3828:7:49",
                          "memberName": "ercType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38558,
                          "src": "3818:17:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ERCType_$38551",
                            "typeString": "enum Store.ERCType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 37164,
                            "name": "ERCType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38551,
                            "src": "3839:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ERCType_$38551_$",
                              "typeString": "type(enum Store.ERCType)"
                            }
                          },
                          "id": 37165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3847:7:49",
                          "memberName": "Erc1155",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38549,
                          "src": "3839:15:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ERCType_$38551",
                            "typeString": "enum Store.ERCType"
                          }
                        },
                        "src": "3818:36:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 37181,
                        "nodeType": "Block",
                        "src": "3942:37:49",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 37179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3963:5:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 37130,
                            "id": 37180,
                            "nodeType": "Return",
                            "src": "3956:12:49"
                          }
                        ]
                      },
                      "id": 37182,
                      "nodeType": "IfStatement",
                      "src": "3814:165:49",
                      "trueBody": {
                        "id": 37178,
                        "nodeType": "Block",
                        "src": "3856:81:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 37172,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37126,
                                  "src": "3898:8:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 37173,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37120,
                                  "src": "3907:7:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 37174,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37122,
                                  "src": "3915:6:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 37175,
                                  "name": "cid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37124,
                                  "src": "3922:3:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 37168,
                                        "name": "mintToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37118,
                                        "src": "3876:9:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                                          "typeString": "struct Store.TokenX memory"
                                        }
                                      },
                                      "id": 37169,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3886:5:49",
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 38553,
                                      "src": "3876:15:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 37167,
                                    "name": "T1155",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39427,
                                    "src": "3870:5:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_T1155_$39427_$",
                                      "typeString": "type(contract T1155)"
                                    }
                                  },
                                  "id": 37170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3870:22:49",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_T1155_$39427",
                                    "typeString": "contract T1155"
                                  }
                                },
                                "id": 37171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3893:4:49",
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39310,
                                "src": "3870:27:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (address,uint256,uint256,string memory) external"
                                }
                              },
                              "id": 37176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3870:56:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 37177,
                            "nodeType": "ExpressionStatement",
                            "src": "3870:56:49"
                          }
                        ]
                      }
                    },
                    "id": 37183,
                    "nodeType": "IfStatement",
                    "src": "3695:284:49",
                    "trueBody": {
                      "id": 37161,
                      "nodeType": "Block",
                      "src": "3736:73:49",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 37156,
                                "name": "receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37126,
                                "src": "3777:8:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 37157,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37120,
                                "src": "3786:7:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 37158,
                                "name": "cid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37124,
                                "src": "3794:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 37152,
                                      "name": "mintToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37118,
                                      "src": "3755:9:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                                        "typeString": "struct Store.TokenX memory"
                                      }
                                    },
                                    "id": 37153,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3765:5:49",
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38553,
                                    "src": "3755:15:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 37151,
                                  "name": "T721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39638,
                                  "src": "3750:4:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_T721_$39638_$",
                                    "typeString": "type(contract T721)"
                                  }
                                },
                                "id": 37154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3750:21:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_T721_$39638",
                                  "typeString": "contract T721"
                                }
                              },
                              "id": 37155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3772:4:49",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39530,
                              "src": "3750:26:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (address,uint256,string memory) external"
                              }
                            },
                            "id": 37159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3750:48:49",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 37160,
                          "nodeType": "ExpressionStatement",
                          "src": "3750:48:49"
                        }
                      ]
                    }
                  },
                  "id": 37184,
                  "nodeType": "IfStatement",
                  "src": "3583:396:49",
                  "trueBody": {
                    "id": 37145,
                    "nodeType": "Block",
                    "src": "3623:67:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37141,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37126,
                              "src": "3663:8:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 37142,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37122,
                              "src": "3672:6:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 37137,
                                    "name": "mintToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37118,
                                    "src": "3641:9:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                                      "typeString": "struct Store.TokenX memory"
                                    }
                                  },
                                  "id": 37138,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3651:5:49",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38553,
                                  "src": "3641:15:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 37136,
                                "name": "T20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39475,
                                "src": "3637:3:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_T20_$39475_$",
                                  "typeString": "type(contract T20)"
                                }
                              },
                              "id": 37139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3637:20:49",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_T20_$39475",
                                "typeString": "contract T20"
                              }
                            },
                            "id": 37140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3658:4:49",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39462,
                            "src": "3637:25:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 37143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3637:42:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37144,
                        "nodeType": "ExpressionStatement",
                        "src": "3637:42:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 37185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3995:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37130,
                  "id": 37186,
                  "nodeType": "Return",
                  "src": "3988:11:49"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintFinished",
            "nameLocation": "3445:13:49",
            "parameters": {
              "id": 37127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37118,
                  "mutability": "mutable",
                  "name": "mintToken",
                  "nameLocation": "3473:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37188,
                  "src": "3459:23:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                    "typeString": "struct Store.TokenX"
                  },
                  "typeName": {
                    "id": 37117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37116,
                      "name": "TokenX",
                      "nameLocations": [
                        "3459:6:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38561,
                      "src": "3459:6:49"
                    },
                    "referencedDeclaration": 38561,
                    "src": "3459:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenX_$38561_storage_ptr",
                      "typeString": "struct Store.TokenX"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37120,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3491:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37188,
                  "src": "3483:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3483:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37122,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3507:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37188,
                  "src": "3499:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3499:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37124,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "3528:3:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37188,
                  "src": "3514:17:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37126,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3540:8:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37188,
                  "src": "3532:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3532:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3458:91:49"
            },
            "returnParameters": {
              "id": 37130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37188,
                  "src": "3567:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3566:6:49"
            },
            "scope": 37219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37218,
            "nodeType": "FunctionDefinition",
            "src": "4032:291:49",
            "nodes": [],
            "body": {
              "id": 37217,
              "nodeType": "Block",
              "src": "4112:211:49",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37196,
                        "name": "aDropToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37191,
                        "src": "4127:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                          "typeString": "struct Store.TokenX memory"
                        }
                      },
                      "id": 37197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4138:6:49",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38560,
                      "src": "4127:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 37198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4148:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4127:22:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37203,
                  "nodeType": "IfStatement",
                  "src": "4123:79:49",
                  "trueBody": {
                    "id": 37202,
                    "nodeType": "Block",
                    "src": "4151:51:49",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 37200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4188:4:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 37195,
                        "id": 37201,
                        "nodeType": "Return",
                        "src": "4181:11:49"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37205,
                          "name": "aDropToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37191,
                          "src": "4232:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37206,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4243:5:49",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38553,
                        "src": "4232:16:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 37207,
                          "name": "aDropToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37191,
                          "src": "4249:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4260:7:49",
                        "memberName": "ercType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38558,
                        "src": "4249:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        }
                      },
                      {
                        "expression": {
                          "id": 37209,
                          "name": "aDropToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37191,
                          "src": "4268:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4279:7:49",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38555,
                        "src": "4268:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37211,
                          "name": "aDropToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37191,
                          "src": "4287:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                            "typeString": "struct Store.TokenX memory"
                          }
                        },
                        "id": 37212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4298:6:49",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38560,
                        "src": "4287:17:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4305:3:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4309:6:49",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4305:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_ERCType_$38551",
                          "typeString": "enum Store.ERCType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37204,
                      "name": "_transferToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37699,
                      "src": "4217:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_ERCType_$38551_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,enum Store.ERCType,uint256,uint256,address) returns (bool)"
                      }
                    },
                    "id": 37215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:99:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 37195,
                  "id": 37216,
                  "nodeType": "Return",
                  "src": "4210:106:49"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_airDropTokenFinished",
            "nameLocation": "4041:21:49",
            "parameters": {
              "id": 37192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37191,
                  "mutability": "mutable",
                  "name": "aDropToken",
                  "nameLocation": "4077:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 37218,
                  "src": "4063:24:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenX_$38561_memory_ptr",
                    "typeString": "struct Store.TokenX"
                  },
                  "typeName": {
                    "id": 37190,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37189,
                      "name": "TokenX",
                      "nameLocations": [
                        "4063:6:49"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38561,
                      "src": "4063:6:49"
                    },
                    "referencedDeclaration": 38561,
                    "src": "4063:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenX_$38561_storage_ptr",
                      "typeString": "struct Store.TokenX"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4062:26:49"
            },
            "returnParameters": {
              "id": 37195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37218,
                  "src": "4106:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4106:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4105:6:49"
            },
            "scope": 37219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36820,
              "name": "Pledge",
              "nameLocations": [
                "291:6:49"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38527,
              "src": "291:6:49"
            },
            "id": 36821,
            "nodeType": "InheritanceSpecifier",
            "src": "291:6:49"
          }
        ],
        "canonicalName": "Moresol",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37219,
          38527,
          30313,
          32236,
          38967,
          28741,
          33253,
          33265,
          28814,
          28927,
          33000,
          38772
        ],
        "name": "Moresol",
        "nameLocation": "280:7:49",
        "scope": 37220,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 49
}